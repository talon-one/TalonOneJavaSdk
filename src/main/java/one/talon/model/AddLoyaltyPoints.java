/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * Points to add.
 */
@ApiModel(description = "Points to add.")

public class AddLoyaltyPoints {
  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private BigDecimal points;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VALIDITY_DURATION = "validityDuration";
  @SerializedName(SERIALIZED_NAME_VALIDITY_DURATION)
  private String validityDuration;

  public static final String SERIALIZED_NAME_VALID_UNTIL = "validUntil";
  @SerializedName(SERIALIZED_NAME_VALID_UNTIL)
  private OffsetDateTime validUntil;

  public static final String SERIALIZED_NAME_PENDING_DURATION = "pendingDuration";
  @SerializedName(SERIALIZED_NAME_PENDING_DURATION)
  private String pendingDuration;

  public static final String SERIALIZED_NAME_PENDING_UNTIL = "pendingUntil";
  @SerializedName(SERIALIZED_NAME_PENDING_UNTIL)
  private OffsetDateTime pendingUntil;

  public static final String SERIALIZED_NAME_SUBLEDGER_ID = "subledgerId";
  @SerializedName(SERIALIZED_NAME_SUBLEDGER_ID)
  private String subledgerId;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;


  public AddLoyaltyPoints points(BigDecimal points) {
    
    this.points = points;
    return this;
  }

   /**
   * Amount of loyalty points.
   * minimum: 0
   * maximum: 999999999999.99
   * @return points
  **/
  @ApiModelProperty(example = "300.0", required = true, value = "Amount of loyalty points.")

  public BigDecimal getPoints() {
    return points;
  }


  public void setPoints(BigDecimal points) {
    this.points = points;
  }


  public AddLoyaltyPoints name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name / reason for the point addition.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Compensation", value = "Name / reason for the point addition.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AddLoyaltyPoints validityDuration(String validityDuration) {
    
    this.validityDuration = validityDuration;
    return this;
  }

   /**
   * The time format is either: - &#x60;immediate&#x60; or, - an **integer** followed by one letter indicating the time unit.  Examples: &#x60;immediate&#x60;, &#x60;30s&#x60;, &#x60;40m&#x60;, &#x60;1h&#x60;, &#x60;5D&#x60;, &#x60;7W&#x60;, &#x60;10M&#x60;.  Available units:  - &#x60;s&#x60;: seconds - &#x60;m&#x60;: minutes - &#x60;h&#x60;: hours - &#x60;D&#x60;: days - &#x60;W&#x60;: weeks - &#x60;M&#x60;: months  You can round certain units up or down: - &#x60;_D&#x60; for rounding down days only. Signifies the start of the day. - &#x60;_U&#x60; for rounding up days, weeks and months. Signifies the end of the day, week, or month.  If passed, &#x60;validUntil&#x60; should be omitted. 
   * @return validityDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5D", value = "The time format is either: - `immediate` or, - an **integer** followed by one letter indicating the time unit.  Examples: `immediate`, `30s`, `40m`, `1h`, `5D`, `7W`, `10M`.  Available units:  - `s`: seconds - `m`: minutes - `h`: hours - `D`: days - `W`: weeks - `M`: months  You can round certain units up or down: - `_D` for rounding down days only. Signifies the start of the day. - `_U` for rounding up days, weeks and months. Signifies the end of the day, week, or month.  If passed, `validUntil` should be omitted. ")

  public String getValidityDuration() {
    return validityDuration;
  }


  public void setValidityDuration(String validityDuration) {
    this.validityDuration = validityDuration;
  }


  public AddLoyaltyPoints validUntil(OffsetDateTime validUntil) {
    
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Date and time when points should expire. The value should be provided in RFC 3339 format. If passed, &#x60;validityDuration&#x60; should be omitted. 
   * @return validUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-20T22:00Z", value = "Date and time when points should expire. The value should be provided in RFC 3339 format. If passed, `validityDuration` should be omitted. ")

  public OffsetDateTime getValidUntil() {
    return validUntil;
  }


  public void setValidUntil(OffsetDateTime validUntil) {
    this.validUntil = validUntil;
  }


  public AddLoyaltyPoints pendingDuration(String pendingDuration) {
    
    this.pendingDuration = pendingDuration;
    return this;
  }

   /**
   * The amount of time before the points are considered valid.  The time format is either: - &#x60;immediate&#x60; or, - an **integer** followed by one letter indicating the time unit.  Examples: &#x60;immediate&#x60;, &#x60;30s&#x60;, &#x60;40m&#x60;, &#x60;1h&#x60;, &#x60;5D&#x60;, &#x60;7W&#x60;, &#x60;10M&#x60;.  Available units:  - &#x60;s&#x60;: seconds - &#x60;m&#x60;: minutes - &#x60;h&#x60;: hours - &#x60;D&#x60;: days - &#x60;W&#x60;: weeks - &#x60;M&#x60;: months  You can round certain units up or down: - &#x60;_D&#x60; for rounding down days only. Signifies the start of the day. - &#x60;_U&#x60; for rounding up days, weeks and months. Signifies the end of the day, week, or month. 
   * @return pendingDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12h", value = "The amount of time before the points are considered valid.  The time format is either: - `immediate` or, - an **integer** followed by one letter indicating the time unit.  Examples: `immediate`, `30s`, `40m`, `1h`, `5D`, `7W`, `10M`.  Available units:  - `s`: seconds - `m`: minutes - `h`: hours - `D`: days - `W`: weeks - `M`: months  You can round certain units up or down: - `_D` for rounding down days only. Signifies the start of the day. - `_U` for rounding up days, weeks and months. Signifies the end of the day, week, or month. ")

  public String getPendingDuration() {
    return pendingDuration;
  }


  public void setPendingDuration(String pendingDuration) {
    this.pendingDuration = pendingDuration;
  }


  public AddLoyaltyPoints pendingUntil(OffsetDateTime pendingUntil) {
    
    this.pendingUntil = pendingUntil;
    return this;
  }

   /**
   * Date and time after the points are considered valid. The value should be provided in RFC 3339 format. If passed, &#x60;pendingDuration&#x60; should be omitted. 
   * @return pendingUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-20T22:00Z", value = "Date and time after the points are considered valid. The value should be provided in RFC 3339 format. If passed, `pendingDuration` should be omitted. ")

  public OffsetDateTime getPendingUntil() {
    return pendingUntil;
  }


  public void setPendingUntil(OffsetDateTime pendingUntil) {
    this.pendingUntil = pendingUntil;
  }


  public AddLoyaltyPoints subledgerId(String subledgerId) {
    
    this.subledgerId = subledgerId;
    return this;
  }

   /**
   * ID of the subledger the points are added to. If there is no existing subledger with this ID, the subledger is created automatically.
   * @return subledgerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sub-123", value = "ID of the subledger the points are added to. If there is no existing subledger with this ID, the subledger is created automatically.")

  public String getSubledgerId() {
    return subledgerId;
  }


  public void setSubledgerId(String subledgerId) {
    this.subledgerId = subledgerId;
  }


  public AddLoyaltyPoints applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * ID of the Application that is connected to the loyalty program. It is displayed in your Talon.One deployment URL.
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "322", value = "ID of the Application that is connected to the loyalty program. It is displayed in your Talon.One deployment URL.")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddLoyaltyPoints addLoyaltyPoints = (AddLoyaltyPoints) o;
    return Objects.equals(this.points, addLoyaltyPoints.points) &&
        Objects.equals(this.name, addLoyaltyPoints.name) &&
        Objects.equals(this.validityDuration, addLoyaltyPoints.validityDuration) &&
        Objects.equals(this.validUntil, addLoyaltyPoints.validUntil) &&
        Objects.equals(this.pendingDuration, addLoyaltyPoints.pendingDuration) &&
        Objects.equals(this.pendingUntil, addLoyaltyPoints.pendingUntil) &&
        Objects.equals(this.subledgerId, addLoyaltyPoints.subledgerId) &&
        Objects.equals(this.applicationId, addLoyaltyPoints.applicationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(points, name, validityDuration, validUntil, pendingDuration, pendingUntil, subledgerId, applicationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddLoyaltyPoints {\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    validityDuration: ").append(toIndentedString(validityDuration)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    pendingDuration: ").append(toIndentedString(pendingDuration)).append("\n");
    sb.append("    pendingUntil: ").append(toIndentedString(pendingUntil)).append("\n");
    sb.append("    subledgerId: ").append(toIndentedString(subledgerId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

