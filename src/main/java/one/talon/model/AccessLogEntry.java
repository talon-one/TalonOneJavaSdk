/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Log of application accesses
 */
@ApiModel(description = "Log of application accesses")

public class AccessLogEntry {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_REQUEST_URI = "requestUri";
  @SerializedName(SERIALIZED_NAME_REQUEST_URI)
  private String requestUri;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private OffsetDateTime time;

  public static final String SERIALIZED_NAME_REQUEST_PAYLOAD = "requestPayload";
  @SerializedName(SERIALIZED_NAME_REQUEST_PAYLOAD)
  private String requestPayload;

  public static final String SERIALIZED_NAME_RESPONSE_PAYLOAD = "responsePayload";
  @SerializedName(SERIALIZED_NAME_RESPONSE_PAYLOAD)
  private String responsePayload;


  public AccessLogEntry uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * UUID reference of request
   * @return uuid
  **/
  @ApiModelProperty(required = true, value = "UUID reference of request")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public AccessLogEntry status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * HTTP status code of response
   * @return status
  **/
  @ApiModelProperty(required = true, value = "HTTP status code of response")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public AccessLogEntry method(String method) {
    
    this.method = method;
    return this;
  }

   /**
   * HTTP method of request
   * @return method
  **/
  @ApiModelProperty(required = true, value = "HTTP method of request")

  public String getMethod() {
    return method;
  }


  public void setMethod(String method) {
    this.method = method;
  }


  public AccessLogEntry requestUri(String requestUri) {
    
    this.requestUri = requestUri;
    return this;
  }

   /**
   * target URI of request
   * @return requestUri
  **/
  @ApiModelProperty(required = true, value = "target URI of request")

  public String getRequestUri() {
    return requestUri;
  }


  public void setRequestUri(String requestUri) {
    this.requestUri = requestUri;
  }


  public AccessLogEntry time(OffsetDateTime time) {
    
    this.time = time;
    return this;
  }

   /**
   * timestamp of request
   * @return time
  **/
  @ApiModelProperty(required = true, value = "timestamp of request")

  public OffsetDateTime getTime() {
    return time;
  }


  public void setTime(OffsetDateTime time) {
    this.time = time;
  }


  public AccessLogEntry requestPayload(String requestPayload) {
    
    this.requestPayload = requestPayload;
    return this;
  }

   /**
   * payload of request
   * @return requestPayload
  **/
  @ApiModelProperty(required = true, value = "payload of request")

  public String getRequestPayload() {
    return requestPayload;
  }


  public void setRequestPayload(String requestPayload) {
    this.requestPayload = requestPayload;
  }


  public AccessLogEntry responsePayload(String responsePayload) {
    
    this.responsePayload = responsePayload;
    return this;
  }

   /**
   * payload of response
   * @return responsePayload
  **/
  @ApiModelProperty(required = true, value = "payload of response")

  public String getResponsePayload() {
    return responsePayload;
  }


  public void setResponsePayload(String responsePayload) {
    this.responsePayload = responsePayload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessLogEntry accessLogEntry = (AccessLogEntry) o;
    return Objects.equals(this.uuid, accessLogEntry.uuid) &&
        Objects.equals(this.status, accessLogEntry.status) &&
        Objects.equals(this.method, accessLogEntry.method) &&
        Objects.equals(this.requestUri, accessLogEntry.requestUri) &&
        Objects.equals(this.time, accessLogEntry.time) &&
        Objects.equals(this.requestPayload, accessLogEntry.requestPayload) &&
        Objects.equals(this.responsePayload, accessLogEntry.responsePayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, status, method, requestUri, time, requestPayload, responsePayload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessLogEntry {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    requestUri: ").append(toIndentedString(requestUri)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    requestPayload: ").append(toIndentedString(requestPayload)).append("\n");
    sb.append("    responsePayload: ").append(toIndentedString(responsePayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

