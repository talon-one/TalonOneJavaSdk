/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import one.talon.model.LedgerInfo;
import one.talon.model.LoyaltyCardProfileRegistration;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class LoyaltyCard {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_PROGRAM_I_D = "programID";
  @SerializedName(SERIALIZED_NAME_PROGRAM_I_D)
  private Integer programID;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_USERS_PER_CARD_LIMIT = "usersPerCardLimit";
  @SerializedName(SERIALIZED_NAME_USERS_PER_CARD_LIMIT)
  private Integer usersPerCardLimit;

  public static final String SERIALIZED_NAME_PROFILES = "profiles";
  @SerializedName(SERIALIZED_NAME_PROFILES)
  private List<LoyaltyCardProfileRegistration> profiles = null;

  public static final String SERIALIZED_NAME_LEDGER = "ledger";
  @SerializedName(SERIALIZED_NAME_LEDGER)
  private LedgerInfo ledger;

  public static final String SERIALIZED_NAME_SUBLEDGERS = "subledgers";
  @SerializedName(SERIALIZED_NAME_SUBLEDGERS)
  private Map<String, LedgerInfo> subledgers = null;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;


  public LoyaltyCard id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(example = "6", required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public LoyaltyCard created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(example = "2020-06-10T09:05:27.993483Z", required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public LoyaltyCard programID(Integer programID) {
    
    this.programID = programID;
    return this;
  }

   /**
   * The ID of the loyalty program that owns this entity.
   * @return programID
  **/
  @ApiModelProperty(example = "125", required = true, value = "The ID of the loyalty program that owns this entity.")

  public Integer getProgramID() {
    return programID;
  }


  public void setProgramID(Integer programID) {
    this.programID = programID;
  }


  public LoyaltyCard status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the loyalty card. Can be one of: [&#39;active&#39;, &#39;disabled&#39;] 
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Status of the loyalty card. Can be one of: ['active', 'disabled'] ")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public LoyaltyCard identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * The alphanumeric identifier of the loyalty card.
   * @return identifier
  **/
  @ApiModelProperty(required = true, value = "The alphanumeric identifier of the loyalty card.")

  public String getIdentifier() {
    return identifier;
  }


  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public LoyaltyCard usersPerCardLimit(Integer usersPerCardLimit) {
    
    this.usersPerCardLimit = usersPerCardLimit;
    return this;
  }

   /**
   * The max amount of user profiles a card can be shared with. 0 means unlimited. 
   * minimum: 0
   * @return usersPerCardLimit
  **/
  @ApiModelProperty(example = "111", required = true, value = "The max amount of user profiles a card can be shared with. 0 means unlimited. ")

  public Integer getUsersPerCardLimit() {
    return usersPerCardLimit;
  }


  public void setUsersPerCardLimit(Integer usersPerCardLimit) {
    this.usersPerCardLimit = usersPerCardLimit;
  }


  public LoyaltyCard profiles(List<LoyaltyCardProfileRegistration> profiles) {
    
    this.profiles = profiles;
    return this;
  }

  public LoyaltyCard addProfilesItem(LoyaltyCardProfileRegistration profilesItem) {
    if (this.profiles == null) {
      this.profiles = new ArrayList<LoyaltyCardProfileRegistration>();
    }
    this.profiles.add(profilesItem);
    return this;
  }

   /**
   * Integration IDs of the customers associated with the card.
   * @return profiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Integration IDs of the customers associated with the card.")

  public List<LoyaltyCardProfileRegistration> getProfiles() {
    return profiles;
  }


  public void setProfiles(List<LoyaltyCardProfileRegistration> profiles) {
    this.profiles = profiles;
  }


  public LoyaltyCard ledger(LedgerInfo ledger) {
    
    this.ledger = ledger;
    return this;
  }

   /**
   * Get ledger
   * @return ledger
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LedgerInfo getLedger() {
    return ledger;
  }


  public void setLedger(LedgerInfo ledger) {
    this.ledger = ledger;
  }


  public LoyaltyCard subledgers(Map<String, LedgerInfo> subledgers) {
    
    this.subledgers = subledgers;
    return this;
  }

  public LoyaltyCard putSubledgersItem(String key, LedgerInfo subledgersItem) {
    if (this.subledgers == null) {
      this.subledgers = new HashMap<String, LedgerInfo>();
    }
    this.subledgers.put(key, subledgersItem);
    return this;
  }

   /**
   * Displays point balances of the card in the subledgers of the loyalty program.
   * @return subledgers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Displays point balances of the card in the subledgers of the loyalty program.")

  public Map<String, LedgerInfo> getSubledgers() {
    return subledgers;
  }


  public void setSubledgers(Map<String, LedgerInfo> subledgers) {
    this.subledgers = subledgers;
  }


  public LoyaltyCard modified(OffsetDateTime modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * Timestamp of the most recent update of the loyalty card.
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", value = "Timestamp of the most recent update of the loyalty card.")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyCard loyaltyCard = (LoyaltyCard) o;
    return Objects.equals(this.id, loyaltyCard.id) &&
        Objects.equals(this.created, loyaltyCard.created) &&
        Objects.equals(this.programID, loyaltyCard.programID) &&
        Objects.equals(this.status, loyaltyCard.status) &&
        Objects.equals(this.identifier, loyaltyCard.identifier) &&
        Objects.equals(this.usersPerCardLimit, loyaltyCard.usersPerCardLimit) &&
        Objects.equals(this.profiles, loyaltyCard.profiles) &&
        Objects.equals(this.ledger, loyaltyCard.ledger) &&
        Objects.equals(this.subledgers, loyaltyCard.subledgers) &&
        Objects.equals(this.modified, loyaltyCard.modified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, programID, status, identifier, usersPerCardLimit, profiles, ledger, subledgers, modified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyCard {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    programID: ").append(toIndentedString(programID)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    usersPerCardLimit: ").append(toIndentedString(usersPerCardLimit)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    ledger: ").append(toIndentedString(ledger)).append("\n");
    sb.append("    subledgers: ").append(toIndentedString(subledgers)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

