/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Log of webhook api calls
 */
@ApiModel(description = "Log of webhook api calls")

public class WebhookLogEntry {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTEGRATION_REQUEST_UUID = "integrationRequestUuid";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_REQUEST_UUID)
  private String integrationRequestUuid;

  public static final String SERIALIZED_NAME_WEBHOOK_ID = "webhookId";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_ID)
  private Integer webhookId;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_REQUEST = "request";
  @SerializedName(SERIALIZED_NAME_REQUEST)
  private String request;

  public static final String SERIALIZED_NAME_RESPONSE = "response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  private String response;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "requestTime";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private OffsetDateTime requestTime;

  public static final String SERIALIZED_NAME_RESPONSE_TIME = "responseTime";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TIME)
  private OffsetDateTime responseTime;


  public WebhookLogEntry id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * UUID reference of the webhook request
   * @return id
  **/
  @ApiModelProperty(required = true, value = "UUID reference of the webhook request")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public WebhookLogEntry integrationRequestUuid(String integrationRequestUuid) {
    
    this.integrationRequestUuid = integrationRequestUuid;
    return this;
  }

   /**
   * UUID reference of the integration request linked to this webhook request
   * @return integrationRequestUuid
  **/
  @ApiModelProperty(required = true, value = "UUID reference of the integration request linked to this webhook request")

  public String getIntegrationRequestUuid() {
    return integrationRequestUuid;
  }


  public void setIntegrationRequestUuid(String integrationRequestUuid) {
    this.integrationRequestUuid = integrationRequestUuid;
  }


  public WebhookLogEntry webhookId(Integer webhookId) {
    
    this.webhookId = webhookId;
    return this;
  }

   /**
   * ID of the webhook that triggered the request
   * @return webhookId
  **/
  @ApiModelProperty(required = true, value = "ID of the webhook that triggered the request")

  public Integer getWebhookId() {
    return webhookId;
  }


  public void setWebhookId(Integer webhookId) {
    this.webhookId = webhookId;
  }


  public WebhookLogEntry applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * ID of the application that triggered the webhook
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the application that triggered the webhook")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public WebhookLogEntry url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Target url of request
   * @return url
  **/
  @ApiModelProperty(required = true, value = "Target url of request")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebhookLogEntry request(String request) {
    
    this.request = request;
    return this;
  }

   /**
   * Request message
   * @return request
  **/
  @ApiModelProperty(required = true, value = "Request message")

  public String getRequest() {
    return request;
  }


  public void setRequest(String request) {
    this.request = request;
  }


  public WebhookLogEntry response(String response) {
    
    this.response = response;
    return this;
  }

   /**
   * Response message
   * @return response
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Response message")

  public String getResponse() {
    return response;
  }


  public void setResponse(String response) {
    this.response = response;
  }


  public WebhookLogEntry status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * HTTP status code of response
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "HTTP status code of response")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public WebhookLogEntry requestTime(OffsetDateTime requestTime) {
    
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Timestamp of request
   * @return requestTime
  **/
  @ApiModelProperty(required = true, value = "Timestamp of request")

  public OffsetDateTime getRequestTime() {
    return requestTime;
  }


  public void setRequestTime(OffsetDateTime requestTime) {
    this.requestTime = requestTime;
  }


  public WebhookLogEntry responseTime(OffsetDateTime responseTime) {
    
    this.responseTime = responseTime;
    return this;
  }

   /**
   * Timestamp of response
   * @return responseTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of response")

  public OffsetDateTime getResponseTime() {
    return responseTime;
  }


  public void setResponseTime(OffsetDateTime responseTime) {
    this.responseTime = responseTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookLogEntry webhookLogEntry = (WebhookLogEntry) o;
    return Objects.equals(this.id, webhookLogEntry.id) &&
        Objects.equals(this.integrationRequestUuid, webhookLogEntry.integrationRequestUuid) &&
        Objects.equals(this.webhookId, webhookLogEntry.webhookId) &&
        Objects.equals(this.applicationId, webhookLogEntry.applicationId) &&
        Objects.equals(this.url, webhookLogEntry.url) &&
        Objects.equals(this.request, webhookLogEntry.request) &&
        Objects.equals(this.response, webhookLogEntry.response) &&
        Objects.equals(this.status, webhookLogEntry.status) &&
        Objects.equals(this.requestTime, webhookLogEntry.requestTime) &&
        Objects.equals(this.responseTime, webhookLogEntry.responseTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, integrationRequestUuid, webhookId, applicationId, url, request, response, status, requestTime, responseTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookLogEntry {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    integrationRequestUuid: ").append(toIndentedString(integrationRequestUuid)).append("\n");
    sb.append("    webhookId: ").append(toIndentedString(webhookId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    responseTime: ").append(toIndentedString(responseTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

