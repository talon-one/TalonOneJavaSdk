/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AchievementAdditionalProperties
 */

public class AchievementAdditionalProperties {
  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private Long campaignId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_HAS_PROGRESS = "hasProgress";
  @SerializedName(SERIALIZED_NAME_HAS_PROGRESS)
  private Boolean hasProgress;

  /**
   * The status of the achievement.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INPROGRESS("inprogress"),
    
    EXPIRED("expired"),
    
    NOT_STARTED("not_started"),
    
    COMPLETED("completed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


  public AchievementAdditionalProperties campaignId(Long campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign the achievement belongs to.
   * @return campaignId
  **/
  @ApiModelProperty(example = "1", required = true, value = "The ID of the campaign the achievement belongs to.")

  public Long getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }


  public AchievementAdditionalProperties userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * ID of the user that created this achievement.
   * @return userId
  **/
  @ApiModelProperty(example = "1234", required = true, value = "ID of the user that created this achievement.")

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public AchievementAdditionalProperties createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Name of the user that created the achievement.  **Note**: This is not available if the user has been deleted. 
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe", value = "Name of the user that created the achievement.  **Note**: This is not available if the user has been deleted. ")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public AchievementAdditionalProperties hasProgress(Boolean hasProgress) {
    
    this.hasProgress = hasProgress;
    return this;
  }

   /**
   * Indicates if a customer has made progress in the achievement.
   * @return hasProgress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if a customer has made progress in the achievement.")

  public Boolean getHasProgress() {
    return hasProgress;
  }


  public void setHasProgress(Boolean hasProgress) {
    this.hasProgress = hasProgress;
  }


  public AchievementAdditionalProperties status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the achievement.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "inprogress", value = "The status of the achievement.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AchievementAdditionalProperties achievementAdditionalProperties = (AchievementAdditionalProperties) o;
    return Objects.equals(this.campaignId, achievementAdditionalProperties.campaignId) &&
        Objects.equals(this.userId, achievementAdditionalProperties.userId) &&
        Objects.equals(this.createdBy, achievementAdditionalProperties.createdBy) &&
        Objects.equals(this.hasProgress, achievementAdditionalProperties.hasProgress) &&
        Objects.equals(this.status, achievementAdditionalProperties.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, userId, createdBy, hasProgress, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AchievementAdditionalProperties {\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    hasProgress: ").append(toIndentedString(hasProgress)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

