/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import one.talon.model.LoyaltyCard;
import one.talon.model.LoyaltyProgramLedgers;

/**
 * Customer specific information about loyalty points.
 */
@ApiModel(description = "Customer specific information about loyalty points.")

public class Loyalty {
  public static final String SERIALIZED_NAME_CARDS = "cards";
  @SerializedName(SERIALIZED_NAME_CARDS)
  private List<LoyaltyCard> cards = null;

  public static final String SERIALIZED_NAME_PROGRAMS = "programs";
  @SerializedName(SERIALIZED_NAME_PROGRAMS)
  private Map<String, LoyaltyProgramLedgers> programs = new HashMap<String, LoyaltyProgramLedgers>();


  public Loyalty cards(List<LoyaltyCard> cards) {
    
    this.cards = cards;
    return this;
  }

  public Loyalty addCardsItem(LoyaltyCard cardsItem) {
    if (this.cards == null) {
      this.cards = new ArrayList<LoyaltyCard>();
    }
    this.cards.add(cardsItem);
    return this;
  }

   /**
   * Displays information about the balances of the loyalty cards.
   * @return cards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Displays information about the balances of the loyalty cards.")

  public List<LoyaltyCard> getCards() {
    return cards;
  }


  public void setCards(List<LoyaltyCard> cards) {
    this.cards = cards;
  }


  public Loyalty programs(Map<String, LoyaltyProgramLedgers> programs) {
    
    this.programs = programs;
    return this;
  }

  public Loyalty putProgramsItem(String key, LoyaltyProgramLedgers programsItem) {
    this.programs.put(key, programsItem);
    return this;
  }

   /**
   * Displays information about point balances in profile-based programs.
   * @return programs
  **/
  @ApiModelProperty(required = true, value = "Displays information about point balances in profile-based programs.")

  public Map<String, LoyaltyProgramLedgers> getPrograms() {
    return programs;
  }


  public void setPrograms(Map<String, LoyaltyProgramLedgers> programs) {
    this.programs = programs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Loyalty loyalty = (Loyalty) o;
    return Objects.equals(this.cards, loyalty.cards) &&
        Objects.equals(this.programs, loyalty.programs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cards, programs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Loyalty {\n");
    sb.append("    cards: ").append(toIndentedString(cards)).append("\n");
    sb.append("    programs: ").append(toIndentedString(programs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

