/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.RoleV2PermissionSet;
import one.talon.model.RoleV2PermissionsRoles;

/**
 * RoleV2Permissions
 */

public class RoleV2Permissions {
  public static final String SERIALIZED_NAME_PERMISSION_SETS = "permissionSets";
  @SerializedName(SERIALIZED_NAME_PERMISSION_SETS)
  private List<RoleV2PermissionSet> permissionSets = null;

  public static final String SERIALIZED_NAME_ROLES = "roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private RoleV2PermissionsRoles roles;


  public RoleV2Permissions permissionSets(List<RoleV2PermissionSet> permissionSets) {
    
    this.permissionSets = permissionSets;
    return this;
  }

  public RoleV2Permissions addPermissionSetsItem(RoleV2PermissionSet permissionSetsItem) {
    if (this.permissionSets == null) {
      this.permissionSets = new ArrayList<RoleV2PermissionSet>();
    }
    this.permissionSets.add(permissionSetsItem);
    return this;
  }

   /**
   * List of grouped operation IDs to use as a reference in the roles section. Each group of operation IDs has a name.
   * @return permissionSets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of grouped operation IDs to use as a reference in the roles section. Each group of operation IDs has a name.")

  public List<RoleV2PermissionSet> getPermissionSets() {
    return permissionSets;
  }


  public void setPermissionSets(List<RoleV2PermissionSet> permissionSets) {
    this.permissionSets = permissionSets;
  }


  public RoleV2Permissions roles(RoleV2PermissionsRoles roles) {
    
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RoleV2PermissionsRoles getRoles() {
    return roles;
  }


  public void setRoles(RoleV2PermissionsRoles roles) {
    this.roles = roles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleV2Permissions roleV2Permissions = (RoleV2Permissions) o;
    return Objects.equals(this.permissionSets, roleV2Permissions.permissionSets) &&
        Objects.equals(this.roles, roleV2Permissions.roles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(permissionSets, roles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleV2Permissions {\n");
    sb.append("    permissionSets: ").append(toIndentedString(permissionSets)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

