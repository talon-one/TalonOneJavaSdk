/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.LoyaltyLedgerEntry;

/**
 * List of loyalty ledger transactions.
 */
@ApiModel(description = "List of loyalty ledger transactions.")

public class LoyaltyLedgerTransactions {
  public static final String SERIALIZED_NAME_HAS_MORE = "hasMore";
  @SerializedName(SERIALIZED_NAME_HAS_MORE)
  private Boolean hasMore;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private List<LoyaltyLedgerEntry> data = null;


  public LoyaltyLedgerTransactions hasMore(Boolean hasMore) {
    
    this.hasMore = hasMore;
    return this;
  }

   /**
   * true means there is more data in the source collection to request.
   * @return hasMore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "true means there is more data in the source collection to request.")

  public Boolean getHasMore() {
    return hasMore;
  }


  public void setHasMore(Boolean hasMore) {
    this.hasMore = hasMore;
  }


  public LoyaltyLedgerTransactions data(List<LoyaltyLedgerEntry> data) {
    
    this.data = data;
    return this;
  }

  public LoyaltyLedgerTransactions addDataItem(LoyaltyLedgerEntry dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<LoyaltyLedgerEntry>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * List of transaction entries from a loyalty ledger.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of transaction entries from a loyalty ledger.")

  public List<LoyaltyLedgerEntry> getData() {
    return data;
  }


  public void setData(List<LoyaltyLedgerEntry> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyLedgerTransactions loyaltyLedgerTransactions = (LoyaltyLedgerTransactions) o;
    return Objects.equals(this.hasMore, loyaltyLedgerTransactions.hasMore) &&
        Objects.equals(this.data, loyaltyLedgerTransactions.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasMore, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyLedgerTransactions {\n");
    sb.append("    hasMore: ").append(toIndentedString(hasMore)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

