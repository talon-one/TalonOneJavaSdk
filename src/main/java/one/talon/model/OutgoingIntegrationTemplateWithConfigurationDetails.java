/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OutgoingIntegrationTemplateWithConfigurationDetails
 */

public class OutgoingIntegrationTemplateWithConfigurationDetails {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INTEGRATION_TYPE = "integrationType";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_TYPE)
  private Integer integrationType;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private String payload;

  /**
   * API method for this webhook.
   */
  @JsonAdapter(MethodEnum.Adapter.class)
  public enum MethodEnum {
    POST("POST"),
    
    PUT("PUT"),
    
    GET("GET"),
    
    DELETE("DELETE"),
    
    PATCH("PATCH");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private MethodEnum method;

  public static final String SERIALIZED_NAME_RELATIVE_URL = "relativeUrl";
  @SerializedName(SERIALIZED_NAME_RELATIVE_URL)
  private String relativeUrl;

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<String> headers = new ArrayList<String>();

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private Object policy;


  public OutgoingIntegrationTemplateWithConfigurationDetails id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(example = "6", required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails integrationType(Integer integrationType) {
    
    this.integrationType = integrationType;
    return this;
  }

   /**
   * Unique ID of outgoing integration type.
   * @return integrationType
  **/
  @ApiModelProperty(example = "2", required = true, value = "Unique ID of outgoing integration type.")

  public Integer getIntegrationType() {
    return integrationType;
  }


  public void setIntegrationType(Integer integrationType) {
    this.integrationType = integrationType;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of the integration template.
   * @return title
  **/
  @ApiModelProperty(example = "Email coupon codes", required = true, value = "The title of the integration template.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the specific outgoing integration template.
   * @return description
  **/
  @ApiModelProperty(example = "This template sends a coupon code to the specified audience by email.", required = true, value = "The description of the specific outgoing integration template.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails payload(String payload) {
    
    this.payload = payload;
    return this;
  }

   /**
   * The API payload (supports templating using parameters) for this integration template.
   * @return payload
  **/
  @ApiModelProperty(example = "{  \"message\": \"${message}\" }", required = true, value = "The API payload (supports templating using parameters) for this integration template.")

  public String getPayload() {
    return payload;
  }


  public void setPayload(String payload) {
    this.payload = payload;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails method(MethodEnum method) {
    
    this.method = method;
    return this;
  }

   /**
   * API method for this webhook.
   * @return method
  **/
  @ApiModelProperty(example = "POST", required = true, value = "API method for this webhook.")

  public MethodEnum getMethod() {
    return method;
  }


  public void setMethod(MethodEnum method) {
    this.method = method;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails relativeUrl(String relativeUrl) {
    
    this.relativeUrl = relativeUrl;
    return this;
  }

   /**
   * The relative URL corresponding to each integration template.
   * @return relativeUrl
  **/
  @ApiModelProperty(example = "/campaigns/trigger/send", required = true, value = "The relative URL corresponding to each integration template.")

  public String getRelativeUrl() {
    return relativeUrl;
  }


  public void setRelativeUrl(String relativeUrl) {
    this.relativeUrl = relativeUrl;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails headers(List<String> headers) {
    
    this.headers = headers;
    return this;
  }

  public OutgoingIntegrationTemplateWithConfigurationDetails addHeadersItem(String headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * The list of HTTP headers for this integration template.
   * @return headers
  **/
  @ApiModelProperty(example = "[{\"Content-Type\": \"application/json\"}]", required = true, value = "The list of HTTP headers for this integration template.")

  public List<String> getHeaders() {
    return headers;
  }


  public void setHeaders(List<String> headers) {
    this.headers = headers;
  }


  public OutgoingIntegrationTemplateWithConfigurationDetails policy(Object policy) {
    
    this.policy = policy;
    return this;
  }

   /**
   * The outgoing integration policy specific to each integration type.
   * @return policy
  **/
  @ApiModelProperty(required = true, value = "The outgoing integration policy specific to each integration type.")

  public Object getPolicy() {
    return policy;
  }


  public void setPolicy(Object policy) {
    this.policy = policy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutgoingIntegrationTemplateWithConfigurationDetails outgoingIntegrationTemplateWithConfigurationDetails = (OutgoingIntegrationTemplateWithConfigurationDetails) o;
    return Objects.equals(this.id, outgoingIntegrationTemplateWithConfigurationDetails.id) &&
        Objects.equals(this.integrationType, outgoingIntegrationTemplateWithConfigurationDetails.integrationType) &&
        Objects.equals(this.title, outgoingIntegrationTemplateWithConfigurationDetails.title) &&
        Objects.equals(this.description, outgoingIntegrationTemplateWithConfigurationDetails.description) &&
        Objects.equals(this.payload, outgoingIntegrationTemplateWithConfigurationDetails.payload) &&
        Objects.equals(this.method, outgoingIntegrationTemplateWithConfigurationDetails.method) &&
        Objects.equals(this.relativeUrl, outgoingIntegrationTemplateWithConfigurationDetails.relativeUrl) &&
        Objects.equals(this.headers, outgoingIntegrationTemplateWithConfigurationDetails.headers) &&
        Objects.equals(this.policy, outgoingIntegrationTemplateWithConfigurationDetails.policy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, integrationType, title, description, payload, method, relativeUrl, headers, policy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutgoingIntegrationTemplateWithConfigurationDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    integrationType: ").append(toIndentedString(integrationType)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    relativeUrl: ").append(toIndentedString(relativeUrl)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

