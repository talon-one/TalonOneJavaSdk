/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Report of health of the API connection of an application
 */
@ApiModel(description = "Report of health of the API connection of an application")

public class ApplicationApiHealth {
  /**
   * One-word summary of the health of the API connection of an application
   */
  @JsonAdapter(SummaryEnum.Adapter.class)
  public enum SummaryEnum {
    OK("OK"),
    
    WARNING("WARNING"),
    
    ERROR("ERROR"),
    
    CRITICAL("CRITICAL"),
    
    NONE("NONE");

    private String value;

    SummaryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SummaryEnum fromValue(String value) {
      for (SummaryEnum b : SummaryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SummaryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SummaryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SummaryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SummaryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private SummaryEnum summary;

  public static final String SERIALIZED_NAME_LAST_USED = "lastUsed";
  @SerializedName(SERIALIZED_NAME_LAST_USED)
  private OffsetDateTime lastUsed;


  public ApplicationApiHealth summary(SummaryEnum summary) {
    
    this.summary = summary;
    return this;
  }

   /**
   * One-word summary of the health of the API connection of an application
   * @return summary
  **/
  @ApiModelProperty(required = true, value = "One-word summary of the health of the API connection of an application")

  public SummaryEnum getSummary() {
    return summary;
  }


  public void setSummary(SummaryEnum summary) {
    this.summary = summary;
  }


  public ApplicationApiHealth lastUsed(OffsetDateTime lastUsed) {
    
    this.lastUsed = lastUsed;
    return this;
  }

   /**
   * time of last request relevant to the API health test
   * @return lastUsed
  **/
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", required = true, value = "time of last request relevant to the API health test")

  public OffsetDateTime getLastUsed() {
    return lastUsed;
  }


  public void setLastUsed(OffsetDateTime lastUsed) {
    this.lastUsed = lastUsed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationApiHealth applicationApiHealth = (ApplicationApiHealth) o;
    return Objects.equals(this.summary, applicationApiHealth.summary) &&
        Objects.equals(this.lastUsed, applicationApiHealth.lastUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, lastUsed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationApiHealth {\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    lastUsed: ").append(toIndentedString(lastUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

