/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The effect produced for the catalog item.
 */
@ApiModel(description = "The effect produced for the catalog item.")

public class StrikethroughEffect {
  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private Integer campaignId;

  public static final String SERIALIZED_NAME_RULESET_ID = "rulesetId";
  @SerializedName(SERIALIZED_NAME_RULESET_ID)
  private Integer rulesetId;

  public static final String SERIALIZED_NAME_RULE_INDEX = "ruleIndex";
  @SerializedName(SERIALIZED_NAME_RULE_INDEX)
  private Integer ruleIndex;

  public static final String SERIALIZED_NAME_RULE_NAME = "ruleName";
  @SerializedName(SERIALIZED_NAME_RULE_NAME)
  private String ruleName;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_PROPS = "props";
  @SerializedName(SERIALIZED_NAME_PROPS)
  private Object props;


  public StrikethroughEffect campaignId(Integer campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign that effect belongs to.
   * @return campaignId
  **/
  @ApiModelProperty(example = "3", required = true, value = "The ID of the campaign that effect belongs to.")

  public Integer getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(Integer campaignId) {
    this.campaignId = campaignId;
  }


  public StrikethroughEffect rulesetId(Integer rulesetId) {
    
    this.rulesetId = rulesetId;
    return this;
  }

   /**
   * The ID of the ruleset containing the rule that triggered this effect.
   * @return rulesetId
  **/
  @ApiModelProperty(example = "11", required = true, value = "The ID of the ruleset containing the rule that triggered this effect.")

  public Integer getRulesetId() {
    return rulesetId;
  }


  public void setRulesetId(Integer rulesetId) {
    this.rulesetId = rulesetId;
  }


  public StrikethroughEffect ruleIndex(Integer ruleIndex) {
    
    this.ruleIndex = ruleIndex;
    return this;
  }

   /**
   * The position of the rule that triggered this effect within the ruleset.
   * @return ruleIndex
  **/
  @ApiModelProperty(example = "2", required = true, value = "The position of the rule that triggered this effect within the ruleset.")

  public Integer getRuleIndex() {
    return ruleIndex;
  }


  public void setRuleIndex(Integer ruleIndex) {
    this.ruleIndex = ruleIndex;
  }


  public StrikethroughEffect ruleName(String ruleName) {
    
    this.ruleName = ruleName;
    return this;
  }

   /**
   * The name of the rule that triggered this effect.
   * @return ruleName
  **/
  @ApiModelProperty(example = "Add 2 points", required = true, value = "The name of the rule that triggered this effect.")

  public String getRuleName() {
    return ruleName;
  }


  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }


  public StrikethroughEffect type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of this effect.
   * @return type
  **/
  @ApiModelProperty(example = "setDiscountPerItem", required = true, value = "The type of this effect.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public StrikethroughEffect props(Object props) {
    
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getProps() {
    return props;
  }


  public void setProps(Object props) {
    this.props = props;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrikethroughEffect strikethroughEffect = (StrikethroughEffect) o;
    return Objects.equals(this.campaignId, strikethroughEffect.campaignId) &&
        Objects.equals(this.rulesetId, strikethroughEffect.rulesetId) &&
        Objects.equals(this.ruleIndex, strikethroughEffect.ruleIndex) &&
        Objects.equals(this.ruleName, strikethroughEffect.ruleName) &&
        Objects.equals(this.type, strikethroughEffect.type) &&
        Objects.equals(this.props, strikethroughEffect.props);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, rulesetId, ruleIndex, ruleName, type, props);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrikethroughEffect {\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    rulesetId: ").append(toIndentedString(rulesetId)).append("\n");
    sb.append("    ruleIndex: ").append(toIndentedString(ruleIndex)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

