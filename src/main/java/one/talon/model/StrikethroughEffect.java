/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * The effect produced for the catalog item.
 */
@ApiModel(description = "The effect produced for the catalog item.")

public class StrikethroughEffect {
  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private Long campaignId;

  public static final String SERIALIZED_NAME_RULESET_ID = "rulesetId";
  @SerializedName(SERIALIZED_NAME_RULESET_ID)
  private Long rulesetId;

  public static final String SERIALIZED_NAME_RULE_INDEX = "ruleIndex";
  @SerializedName(SERIALIZED_NAME_RULE_INDEX)
  private Long ruleIndex;

  public static final String SERIALIZED_NAME_RULE_NAME = "ruleName";
  @SerializedName(SERIALIZED_NAME_RULE_NAME)
  private String ruleName;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_PROPS = "props";
  @SerializedName(SERIALIZED_NAME_PROPS)
  private Object props;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_SELECTED_PRICE_TYPE = "selectedPriceType";
  @SerializedName(SERIALIZED_NAME_SELECTED_PRICE_TYPE)
  private String selectedPriceType;

  public static final String SERIALIZED_NAME_SELECTED_PRICE = "selectedPrice";
  @SerializedName(SERIALIZED_NAME_SELECTED_PRICE)
  private BigDecimal selectedPrice;

  public static final String SERIALIZED_NAME_ADJUSTMENT_REFERENCE_ID = "adjustmentReferenceId";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_REFERENCE_ID)
  private String adjustmentReferenceId;

  public static final String SERIALIZED_NAME_TARGETS = "targets";
  @SerializedName(SERIALIZED_NAME_TARGETS)
  private List<Object> targets = null;


  public StrikethroughEffect campaignId(Long campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign that effect belongs to.
   * @return campaignId
  **/
  @ApiModelProperty(example = "3", required = true, value = "The ID of the campaign that effect belongs to.")

  public Long getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }


  public StrikethroughEffect rulesetId(Long rulesetId) {
    
    this.rulesetId = rulesetId;
    return this;
  }

   /**
   * The ID of the ruleset containing the rule that triggered this effect.
   * @return rulesetId
  **/
  @ApiModelProperty(example = "11", required = true, value = "The ID of the ruleset containing the rule that triggered this effect.")

  public Long getRulesetId() {
    return rulesetId;
  }


  public void setRulesetId(Long rulesetId) {
    this.rulesetId = rulesetId;
  }


  public StrikethroughEffect ruleIndex(Long ruleIndex) {
    
    this.ruleIndex = ruleIndex;
    return this;
  }

   /**
   * The position of the rule that triggered this effect within the ruleset.
   * @return ruleIndex
  **/
  @ApiModelProperty(example = "2", required = true, value = "The position of the rule that triggered this effect within the ruleset.")

  public Long getRuleIndex() {
    return ruleIndex;
  }


  public void setRuleIndex(Long ruleIndex) {
    this.ruleIndex = ruleIndex;
  }


  public StrikethroughEffect ruleName(String ruleName) {
    
    this.ruleName = ruleName;
    return this;
  }

   /**
   * The name of the rule that triggered this effect.
   * @return ruleName
  **/
  @ApiModelProperty(example = "Add 2 points", required = true, value = "The name of the rule that triggered this effect.")

  public String getRuleName() {
    return ruleName;
  }


  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }


  public StrikethroughEffect type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of this effect.
   * @return type
  **/
  @ApiModelProperty(example = "setDiscountPerItem", required = true, value = "The type of this effect.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public StrikethroughEffect props(Object props) {
    
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getProps() {
    return props;
  }


  public void setProps(Object props) {
    this.props = props;
  }


  public StrikethroughEffect startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * The start of the time frame where the effect is active in UTC.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-20T22:00Z", value = "The start of the time frame where the effect is active in UTC.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public StrikethroughEffect endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * The end of the time frame where the effect is active in UTC.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-10-01T02:00Z", value = "The end of the time frame where the effect is active in UTC.")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public StrikethroughEffect selectedPriceType(String selectedPriceType) {
    
    this.selectedPriceType = selectedPriceType;
    return this;
  }

   /**
   * The selected price type for this cart item (e.g. the price for members only).
   * @return selectedPriceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "member", value = "The selected price type for this cart item (e.g. the price for members only).")

  public String getSelectedPriceType() {
    return selectedPriceType;
  }


  public void setSelectedPriceType(String selectedPriceType) {
    this.selectedPriceType = selectedPriceType;
  }


  public StrikethroughEffect selectedPrice(BigDecimal selectedPrice) {
    
    this.selectedPrice = selectedPrice;
    return this;
  }

   /**
   * The value of the selected price type to apply to the SKU targeted by this effect, before any discounts are applied.
   * @return selectedPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.0", value = "The value of the selected price type to apply to the SKU targeted by this effect, before any discounts are applied.")

  public BigDecimal getSelectedPrice() {
    return selectedPrice;
  }


  public void setSelectedPrice(BigDecimal selectedPrice) {
    this.selectedPrice = selectedPrice;
  }


  public StrikethroughEffect adjustmentReferenceId(String adjustmentReferenceId) {
    
    this.adjustmentReferenceId = adjustmentReferenceId;
    return this;
  }

   /**
   * The reference identifier of the selected price adjustment for this cart item.
   * @return adjustmentReferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "68851723-e6fa-488f-ace9-112581e6c19b", value = "The reference identifier of the selected price adjustment for this cart item.")

  public String getAdjustmentReferenceId() {
    return adjustmentReferenceId;
  }


  public void setAdjustmentReferenceId(String adjustmentReferenceId) {
    this.adjustmentReferenceId = adjustmentReferenceId;
  }


  public StrikethroughEffect targets(List<Object> targets) {
    
    this.targets = targets;
    return this;
  }

  public StrikethroughEffect addTargetsItem(Object targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<Object>();
    }
    this.targets.add(targetsItem);
    return this;
  }

   /**
   * A list of entities (e.g. audiences) targeted by this effect.
   * @return targets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of entities (e.g. audiences) targeted by this effect.")

  public List<Object> getTargets() {
    return targets;
  }


  public void setTargets(List<Object> targets) {
    this.targets = targets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrikethroughEffect strikethroughEffect = (StrikethroughEffect) o;
    return Objects.equals(this.campaignId, strikethroughEffect.campaignId) &&
        Objects.equals(this.rulesetId, strikethroughEffect.rulesetId) &&
        Objects.equals(this.ruleIndex, strikethroughEffect.ruleIndex) &&
        Objects.equals(this.ruleName, strikethroughEffect.ruleName) &&
        Objects.equals(this.type, strikethroughEffect.type) &&
        Objects.equals(this.props, strikethroughEffect.props) &&
        Objects.equals(this.startTime, strikethroughEffect.startTime) &&
        Objects.equals(this.endTime, strikethroughEffect.endTime) &&
        Objects.equals(this.selectedPriceType, strikethroughEffect.selectedPriceType) &&
        Objects.equals(this.selectedPrice, strikethroughEffect.selectedPrice) &&
        Objects.equals(this.adjustmentReferenceId, strikethroughEffect.adjustmentReferenceId) &&
        Objects.equals(this.targets, strikethroughEffect.targets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, rulesetId, ruleIndex, ruleName, type, props, startTime, endTime, selectedPriceType, selectedPrice, adjustmentReferenceId, targets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrikethroughEffect {\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    rulesetId: ").append(toIndentedString(rulesetId)).append("\n");
    sb.append("    ruleIndex: ").append(toIndentedString(ruleIndex)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    selectedPriceType: ").append(toIndentedString(selectedPriceType)).append("\n");
    sb.append("    selectedPrice: ").append(toIndentedString(selectedPrice)).append("\n");
    sb.append("    adjustmentReferenceId: ").append(toIndentedString(adjustmentReferenceId)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

