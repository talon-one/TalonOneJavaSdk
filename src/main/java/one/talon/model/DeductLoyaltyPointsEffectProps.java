/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * The properties specific to the \&quot;deductLoyaltyPoints\&quot; effect. This gets triggered whenever a validated rule contained a condition to only trigger when the given number of loyalty points could be deduced. These points are automatically stored and managed inside Talon.One.
 */
@ApiModel(description = "The properties specific to the \"deductLoyaltyPoints\" effect. This gets triggered whenever a validated rule contained a condition to only trigger when the given number of loyalty points could be deduced. These points are automatically stored and managed inside Talon.One.")

public class DeductLoyaltyPointsEffectProps {
  public static final String SERIALIZED_NAME_RULE_TITLE = "ruleTitle";
  @SerializedName(SERIALIZED_NAME_RULE_TITLE)
  private String ruleTitle;

  public static final String SERIALIZED_NAME_PROGRAM_ID = "programId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private Integer programId;

  public static final String SERIALIZED_NAME_SUB_LEDGER_ID = "subLedgerId";
  @SerializedName(SERIALIZED_NAME_SUB_LEDGER_ID)
  private String subLedgerId;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private BigDecimal value;

  public static final String SERIALIZED_NAME_TRANSACTION_U_U_I_D = "transactionUUID";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_U_U_I_D)
  private String transactionUUID;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CARD_IDENTIFIER = "cardIdentifier";
  @SerializedName(SERIALIZED_NAME_CARD_IDENTIFIER)
  private String cardIdentifier;


  public DeductLoyaltyPointsEffectProps ruleTitle(String ruleTitle) {
    
    this.ruleTitle = ruleTitle;
    return this;
  }

   /**
   * The title of the rule that contained triggered this points deduction
   * @return ruleTitle
  **/
  @ApiModelProperty(required = true, value = "The title of the rule that contained triggered this points deduction")

  public String getRuleTitle() {
    return ruleTitle;
  }


  public void setRuleTitle(String ruleTitle) {
    this.ruleTitle = ruleTitle;
  }


  public DeductLoyaltyPointsEffectProps programId(Integer programId) {
    
    this.programId = programId;
    return this;
  }

   /**
   * The ID of the loyalty program where these points were added
   * @return programId
  **/
  @ApiModelProperty(required = true, value = "The ID of the loyalty program where these points were added")

  public Integer getProgramId() {
    return programId;
  }


  public void setProgramId(Integer programId) {
    this.programId = programId;
  }


  public DeductLoyaltyPointsEffectProps subLedgerId(String subLedgerId) {
    
    this.subLedgerId = subLedgerId;
    return this;
  }

   /**
   * The ID of the subledger within the loyalty program where these points were added
   * @return subLedgerId
  **/
  @ApiModelProperty(required = true, value = "The ID of the subledger within the loyalty program where these points were added")

  public String getSubLedgerId() {
    return subLedgerId;
  }


  public void setSubLedgerId(String subLedgerId) {
    this.subLedgerId = subLedgerId;
  }


  public DeductLoyaltyPointsEffectProps value(BigDecimal value) {
    
    this.value = value;
    return this;
  }

   /**
   * The amount of points that were deducted
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The amount of points that were deducted")

  public BigDecimal getValue() {
    return value;
  }


  public void setValue(BigDecimal value) {
    this.value = value;
  }


  public DeductLoyaltyPointsEffectProps transactionUUID(String transactionUUID) {
    
    this.transactionUUID = transactionUUID;
    return this;
  }

   /**
   * The identifier of this deduction in the loyalty ledger
   * @return transactionUUID
  **/
  @ApiModelProperty(required = true, value = "The identifier of this deduction in the loyalty ledger")

  public String getTransactionUUID() {
    return transactionUUID;
  }


  public void setTransactionUUID(String transactionUUID) {
    this.transactionUUID = transactionUUID;
  }


  public DeductLoyaltyPointsEffectProps name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name property gets one of the following two values. It can be the loyalty program name or it can represent a reason for the respective deduction of loyalty points. The latter is an optional value defined in a deduction rule. 
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name property gets one of the following two values. It can be the loyalty program name or it can represent a reason for the respective deduction of loyalty points. The latter is an optional value defined in a deduction rule. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DeductLoyaltyPointsEffectProps cardIdentifier(String cardIdentifier) {
    
    this.cardIdentifier = cardIdentifier;
    return this;
  }

   /**
   * The card on which these points were added.
   * @return cardIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The card on which these points were added.")

  public String getCardIdentifier() {
    return cardIdentifier;
  }


  public void setCardIdentifier(String cardIdentifier) {
    this.cardIdentifier = cardIdentifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeductLoyaltyPointsEffectProps deductLoyaltyPointsEffectProps = (DeductLoyaltyPointsEffectProps) o;
    return Objects.equals(this.ruleTitle, deductLoyaltyPointsEffectProps.ruleTitle) &&
        Objects.equals(this.programId, deductLoyaltyPointsEffectProps.programId) &&
        Objects.equals(this.subLedgerId, deductLoyaltyPointsEffectProps.subLedgerId) &&
        Objects.equals(this.value, deductLoyaltyPointsEffectProps.value) &&
        Objects.equals(this.transactionUUID, deductLoyaltyPointsEffectProps.transactionUUID) &&
        Objects.equals(this.name, deductLoyaltyPointsEffectProps.name) &&
        Objects.equals(this.cardIdentifier, deductLoyaltyPointsEffectProps.cardIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ruleTitle, programId, subLedgerId, value, transactionUUID, name, cardIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeductLoyaltyPointsEffectProps {\n");
    sb.append("    ruleTitle: ").append(toIndentedString(ruleTitle)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    subLedgerId: ").append(toIndentedString(subLedgerId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    transactionUUID: ").append(toIndentedString(transactionUUID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cardIdentifier: ").append(toIndentedString(cardIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

