/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class Account {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "domainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  /**
   * State of the account (active, deactivated)
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("active"),
    
    DEACTIVATED("deactivated");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_BILLING_EMAIL = "billingEmail";
  @SerializedName(SERIALIZED_NAME_BILLING_EMAIL)
  private String billingEmail;

  public static final String SERIALIZED_NAME_PLAN_NAME = "planName";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME)
  private String planName;

  public static final String SERIALIZED_NAME_PLAN_EXPIRES = "planExpires";
  @SerializedName(SERIALIZED_NAME_PLAN_EXPIRES)
  private OffsetDateTime planExpires;

  public static final String SERIALIZED_NAME_APPLICATION_LIMIT = "applicationLimit";
  @SerializedName(SERIALIZED_NAME_APPLICATION_LIMIT)
  private Integer applicationLimit;

  public static final String SERIALIZED_NAME_USER_LIMIT = "userLimit";
  @SerializedName(SERIALIZED_NAME_USER_LIMIT)
  private Integer userLimit;

  public static final String SERIALIZED_NAME_CAMPAIGN_LIMIT = "campaignLimit";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_LIMIT)
  private Integer campaignLimit;

  public static final String SERIALIZED_NAME_API_LIMIT = "apiLimit";
  @SerializedName(SERIALIZED_NAME_API_LIMIT)
  private Integer apiLimit;

  public static final String SERIALIZED_NAME_APPLICATION_COUNT = "applicationCount";
  @SerializedName(SERIALIZED_NAME_APPLICATION_COUNT)
  private Integer applicationCount;

  public static final String SERIALIZED_NAME_USER_COUNT = "userCount";
  @SerializedName(SERIALIZED_NAME_USER_COUNT)
  private Integer userCount;

  public static final String SERIALIZED_NAME_CAMPAIGNS_ACTIVE_COUNT = "campaignsActiveCount";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS_ACTIVE_COUNT)
  private Integer campaignsActiveCount;

  public static final String SERIALIZED_NAME_CAMPAIGNS_INACTIVE_COUNT = "campaignsInactiveCount";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS_INACTIVE_COUNT)
  private Integer campaignsInactiveCount;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Object attributes;


  public Account id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(example = "6", required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Account created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(example = "2020-06-10T09:05:27.993483Z", required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Account modified(OffsetDateTime modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * The exact moment this entity was last modified.
   * @return modified
  **/
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", required = true, value = "The exact moment this entity was last modified.")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  public Account companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Get companyName
   * @return companyName
  **/
  @ApiModelProperty(required = true, value = "")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public Account domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

   /**
   * Subdomain Name for yourcompany.talon.one
   * @return domainName
  **/
  @ApiModelProperty(required = true, value = "Subdomain Name for yourcompany.talon.one")

  public String getDomainName() {
    return domainName;
  }


  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public Account state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * State of the account (active, deactivated)
   * @return state
  **/
  @ApiModelProperty(required = true, value = "State of the account (active, deactivated)")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public Account billingEmail(String billingEmail) {
    
    this.billingEmail = billingEmail;
    return this;
  }

   /**
   * The billing email address associated with your company account.
   * @return billingEmail
  **/
  @ApiModelProperty(required = true, value = "The billing email address associated with your company account.")

  public String getBillingEmail() {
    return billingEmail;
  }


  public void setBillingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
  }


  public Account planName(String planName) {
    
    this.planName = planName;
    return this;
  }

   /**
   * The name of your booked plan.
   * @return planName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of your booked plan.")

  public String getPlanName() {
    return planName;
  }


  public void setPlanName(String planName) {
    this.planName = planName;
  }


  public Account planExpires(OffsetDateTime planExpires) {
    
    this.planExpires = planExpires;
    return this;
  }

   /**
   * The point in time at which your current plan expires.
   * @return planExpires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The point in time at which your current plan expires.")

  public OffsetDateTime getPlanExpires() {
    return planExpires;
  }


  public void setPlanExpires(OffsetDateTime planExpires) {
    this.planExpires = planExpires;
  }


  public Account applicationLimit(Integer applicationLimit) {
    
    this.applicationLimit = applicationLimit;
    return this;
  }

   /**
   * The maximum number of Applications covered by your plan.
   * @return applicationLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of Applications covered by your plan.")

  public Integer getApplicationLimit() {
    return applicationLimit;
  }


  public void setApplicationLimit(Integer applicationLimit) {
    this.applicationLimit = applicationLimit;
  }


  public Account userLimit(Integer userLimit) {
    
    this.userLimit = userLimit;
    return this;
  }

   /**
   * The maximum number of Campaign Manager Users covered by your plan.
   * @return userLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of Campaign Manager Users covered by your plan.")

  public Integer getUserLimit() {
    return userLimit;
  }


  public void setUserLimit(Integer userLimit) {
    this.userLimit = userLimit;
  }


  public Account campaignLimit(Integer campaignLimit) {
    
    this.campaignLimit = campaignLimit;
    return this;
  }

   /**
   * The maximum number of Campaigns covered by your plan.
   * @return campaignLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of Campaigns covered by your plan.")

  public Integer getCampaignLimit() {
    return campaignLimit;
  }


  public void setCampaignLimit(Integer campaignLimit) {
    this.campaignLimit = campaignLimit;
  }


  public Account apiLimit(Integer apiLimit) {
    
    this.apiLimit = apiLimit;
    return this;
  }

   /**
   * The maximum number of Integration API calls covered by your plan per billing period.
   * @return apiLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of Integration API calls covered by your plan per billing period.")

  public Integer getApiLimit() {
    return apiLimit;
  }


  public void setApiLimit(Integer apiLimit) {
    this.apiLimit = apiLimit;
  }


  public Account applicationCount(Integer applicationCount) {
    
    this.applicationCount = applicationCount;
    return this;
  }

   /**
   * The current number of Applications in your account.
   * @return applicationCount
  **/
  @ApiModelProperty(required = true, value = "The current number of Applications in your account.")

  public Integer getApplicationCount() {
    return applicationCount;
  }


  public void setApplicationCount(Integer applicationCount) {
    this.applicationCount = applicationCount;
  }


  public Account userCount(Integer userCount) {
    
    this.userCount = userCount;
    return this;
  }

   /**
   * The current number of Campaign Manager Users in your account.
   * @return userCount
  **/
  @ApiModelProperty(required = true, value = "The current number of Campaign Manager Users in your account.")

  public Integer getUserCount() {
    return userCount;
  }


  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }


  public Account campaignsActiveCount(Integer campaignsActiveCount) {
    
    this.campaignsActiveCount = campaignsActiveCount;
    return this;
  }

   /**
   * The current number of active Campaigns in your account.
   * @return campaignsActiveCount
  **/
  @ApiModelProperty(required = true, value = "The current number of active Campaigns in your account.")

  public Integer getCampaignsActiveCount() {
    return campaignsActiveCount;
  }


  public void setCampaignsActiveCount(Integer campaignsActiveCount) {
    this.campaignsActiveCount = campaignsActiveCount;
  }


  public Account campaignsInactiveCount(Integer campaignsInactiveCount) {
    
    this.campaignsInactiveCount = campaignsInactiveCount;
    return this;
  }

   /**
   * The current number of inactive Campaigns in your account.
   * @return campaignsInactiveCount
  **/
  @ApiModelProperty(required = true, value = "The current number of inactive Campaigns in your account.")

  public Integer getCampaignsInactiveCount() {
    return campaignsInactiveCount;
  }


  public void setCampaignsInactiveCount(Integer campaignsInactiveCount) {
    this.campaignsInactiveCount = campaignsInactiveCount;
  }


  public Account attributes(Object attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Arbitrary properties associated with this campaign
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary properties associated with this campaign")

  public Object getAttributes() {
    return attributes;
  }


  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.id, account.id) &&
        Objects.equals(this.created, account.created) &&
        Objects.equals(this.modified, account.modified) &&
        Objects.equals(this.companyName, account.companyName) &&
        Objects.equals(this.domainName, account.domainName) &&
        Objects.equals(this.state, account.state) &&
        Objects.equals(this.billingEmail, account.billingEmail) &&
        Objects.equals(this.planName, account.planName) &&
        Objects.equals(this.planExpires, account.planExpires) &&
        Objects.equals(this.applicationLimit, account.applicationLimit) &&
        Objects.equals(this.userLimit, account.userLimit) &&
        Objects.equals(this.campaignLimit, account.campaignLimit) &&
        Objects.equals(this.apiLimit, account.apiLimit) &&
        Objects.equals(this.applicationCount, account.applicationCount) &&
        Objects.equals(this.userCount, account.userCount) &&
        Objects.equals(this.campaignsActiveCount, account.campaignsActiveCount) &&
        Objects.equals(this.campaignsInactiveCount, account.campaignsInactiveCount) &&
        Objects.equals(this.attributes, account.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, modified, companyName, domainName, state, billingEmail, planName, planExpires, applicationLimit, userLimit, campaignLimit, apiLimit, applicationCount, userCount, campaignsActiveCount, campaignsInactiveCount, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    planExpires: ").append(toIndentedString(planExpires)).append("\n");
    sb.append("    applicationLimit: ").append(toIndentedString(applicationLimit)).append("\n");
    sb.append("    userLimit: ").append(toIndentedString(userLimit)).append("\n");
    sb.append("    campaignLimit: ").append(toIndentedString(campaignLimit)).append("\n");
    sb.append("    apiLimit: ").append(toIndentedString(apiLimit)).append("\n");
    sb.append("    applicationCount: ").append(toIndentedString(applicationCount)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    campaignsActiveCount: ").append(toIndentedString(campaignsActiveCount)).append("\n");
    sb.append("    campaignsInactiveCount: ").append(toIndentedString(campaignsInactiveCount)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

