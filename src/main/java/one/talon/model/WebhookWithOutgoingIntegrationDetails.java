/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.TemplateArgDef;
import org.threeten.bp.OffsetDateTime;

/**
 * WebhookWithOutgoingIntegrationDetails
 */

public class WebhookWithOutgoingIntegrationDetails {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_APPLICATION_IDS = "applicationIds";
  @SerializedName(SERIALIZED_NAME_APPLICATION_IDS)
  private List<Integer> applicationIds = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * API method for this webhook.
   */
  @JsonAdapter(VerbEnum.Adapter.class)
  public enum VerbEnum {
    POST("POST"),
    
    PUT("PUT"),
    
    GET("GET"),
    
    DELETE("DELETE"),
    
    PATCH("PATCH");

    private String value;

    VerbEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VerbEnum fromValue(String value) {
      for (VerbEnum b : VerbEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VerbEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VerbEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VerbEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VerbEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VERB = "verb";
  @SerializedName(SERIALIZED_NAME_VERB)
  private VerbEnum verb;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<String> headers = new ArrayList<String>();

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private String payload;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private List<TemplateArgDef> params = new ArrayList<TemplateArgDef>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_OUTGOING_INTEGRATION_TEMPLATE_ID = "outgoingIntegrationTemplateId";
  @SerializedName(SERIALIZED_NAME_OUTGOING_INTEGRATION_TEMPLATE_ID)
  private Integer outgoingIntegrationTemplateId;

  public static final String SERIALIZED_NAME_OUTGOING_INTEGRATION_TYPE_ID = "outgoingIntegrationTypeId";
  @SerializedName(SERIALIZED_NAME_OUTGOING_INTEGRATION_TYPE_ID)
  private Integer outgoingIntegrationTypeId;

  public static final String SERIALIZED_NAME_OUTGOING_INTEGRATION_TYPE_NAME = "outgoingIntegrationTypeName";
  @SerializedName(SERIALIZED_NAME_OUTGOING_INTEGRATION_TYPE_NAME)
  private String outgoingIntegrationTypeName;


  public WebhookWithOutgoingIntegrationDetails id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Internal ID of this entity.
   * @return id
  **/
  @ApiModelProperty(example = "6", required = true, value = "Internal ID of this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public WebhookWithOutgoingIntegrationDetails created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The time this entity was created.
   * @return created
  **/
  @ApiModelProperty(example = "2020-06-10T09:05:27.993483Z", required = true, value = "The time this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public WebhookWithOutgoingIntegrationDetails modified(OffsetDateTime modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * The time this entity was last modified.
   * @return modified
  **/
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", required = true, value = "The time this entity was last modified.")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  public WebhookWithOutgoingIntegrationDetails applicationIds(List<Integer> applicationIds) {
    
    this.applicationIds = applicationIds;
    return this;
  }

  public WebhookWithOutgoingIntegrationDetails addApplicationIdsItem(Integer applicationIdsItem) {
    this.applicationIds.add(applicationIdsItem);
    return this;
  }

   /**
   * The IDs of the Applications that are related to this entity.
   * @return applicationIds
  **/
  @ApiModelProperty(required = true, value = "The IDs of the Applications that are related to this entity.")

  public List<Integer> getApplicationIds() {
    return applicationIds;
  }


  public void setApplicationIds(List<Integer> applicationIds) {
    this.applicationIds = applicationIds;
  }


  public WebhookWithOutgoingIntegrationDetails title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Name or title for this webhook.
   * @return title
  **/
  @ApiModelProperty(example = "Send message", required = true, value = "Name or title for this webhook.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public WebhookWithOutgoingIntegrationDetails description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the webhook.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A webhook to send a coupon to the user.", value = "A description of the webhook.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WebhookWithOutgoingIntegrationDetails verb(VerbEnum verb) {
    
    this.verb = verb;
    return this;
  }

   /**
   * API method for this webhook.
   * @return verb
  **/
  @ApiModelProperty(example = "POST", required = true, value = "API method for this webhook.")

  public VerbEnum getVerb() {
    return verb;
  }


  public void setVerb(VerbEnum verb) {
    this.verb = verb;
  }


  public WebhookWithOutgoingIntegrationDetails url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * API URL (supports templating using parameters) for this webhook.
   * @return url
  **/
  @ApiModelProperty(example = "www.my-company.com/my-endpoint-name", required = true, value = "API URL (supports templating using parameters) for this webhook.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebhookWithOutgoingIntegrationDetails headers(List<String> headers) {
    
    this.headers = headers;
    return this;
  }

  public WebhookWithOutgoingIntegrationDetails addHeadersItem(String headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * List of API HTTP headers for this webhook.
   * @return headers
  **/
  @ApiModelProperty(example = "[{\"Authorization\": \"Basic bmF2ZWVua3VtYXIU=\"}, {\"Content-Type\": \"application/json\"}]", required = true, value = "List of API HTTP headers for this webhook.")

  public List<String> getHeaders() {
    return headers;
  }


  public void setHeaders(List<String> headers) {
    this.headers = headers;
  }


  public WebhookWithOutgoingIntegrationDetails payload(String payload) {
    
    this.payload = payload;
    return this;
  }

   /**
   * API payload (supports templating using parameters) for this webhook.
   * @return payload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{  \"message\": \"${message}\" }", value = "API payload (supports templating using parameters) for this webhook.")

  public String getPayload() {
    return payload;
  }


  public void setPayload(String payload) {
    this.payload = payload;
  }


  public WebhookWithOutgoingIntegrationDetails params(List<TemplateArgDef> params) {
    
    this.params = params;
    return this;
  }

  public WebhookWithOutgoingIntegrationDetails addParamsItem(TemplateArgDef paramsItem) {
    this.params.add(paramsItem);
    return this;
  }

   /**
   * Array of template argument definitions.
   * @return params
  **/
  @ApiModelProperty(example = "[]", required = true, value = "Array of template argument definitions.")

  public List<TemplateArgDef> getParams() {
    return params;
  }


  public void setParams(List<TemplateArgDef> params) {
    this.params = params;
  }


  public WebhookWithOutgoingIntegrationDetails enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Enables or disables webhook from showing in the Rule Builder.
   * @return enabled
  **/
  @ApiModelProperty(example = "true", required = true, value = "Enables or disables webhook from showing in the Rule Builder.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public WebhookWithOutgoingIntegrationDetails outgoingIntegrationTemplateId(Integer outgoingIntegrationTemplateId) {
    
    this.outgoingIntegrationTemplateId = outgoingIntegrationTemplateId;
    return this;
  }

   /**
   * Identifier of the outgoing integration template.
   * @return outgoingIntegrationTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Identifier of the outgoing integration template.")

  public Integer getOutgoingIntegrationTemplateId() {
    return outgoingIntegrationTemplateId;
  }


  public void setOutgoingIntegrationTemplateId(Integer outgoingIntegrationTemplateId) {
    this.outgoingIntegrationTemplateId = outgoingIntegrationTemplateId;
  }


  public WebhookWithOutgoingIntegrationDetails outgoingIntegrationTypeId(Integer outgoingIntegrationTypeId) {
    
    this.outgoingIntegrationTypeId = outgoingIntegrationTypeId;
    return this;
  }

   /**
   * Identifier of the outgoing integration type.
   * @return outgoingIntegrationTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Identifier of the outgoing integration type.")

  public Integer getOutgoingIntegrationTypeId() {
    return outgoingIntegrationTypeId;
  }


  public void setOutgoingIntegrationTypeId(Integer outgoingIntegrationTypeId) {
    this.outgoingIntegrationTypeId = outgoingIntegrationTypeId;
  }


  public WebhookWithOutgoingIntegrationDetails outgoingIntegrationTypeName(String outgoingIntegrationTypeName) {
    
    this.outgoingIntegrationTypeName = outgoingIntegrationTypeName;
    return this;
  }

   /**
   * Name of the outgoing integration.
   * @return outgoingIntegrationTypeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Braze", value = "Name of the outgoing integration.")

  public String getOutgoingIntegrationTypeName() {
    return outgoingIntegrationTypeName;
  }


  public void setOutgoingIntegrationTypeName(String outgoingIntegrationTypeName) {
    this.outgoingIntegrationTypeName = outgoingIntegrationTypeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookWithOutgoingIntegrationDetails webhookWithOutgoingIntegrationDetails = (WebhookWithOutgoingIntegrationDetails) o;
    return Objects.equals(this.id, webhookWithOutgoingIntegrationDetails.id) &&
        Objects.equals(this.created, webhookWithOutgoingIntegrationDetails.created) &&
        Objects.equals(this.modified, webhookWithOutgoingIntegrationDetails.modified) &&
        Objects.equals(this.applicationIds, webhookWithOutgoingIntegrationDetails.applicationIds) &&
        Objects.equals(this.title, webhookWithOutgoingIntegrationDetails.title) &&
        Objects.equals(this.description, webhookWithOutgoingIntegrationDetails.description) &&
        Objects.equals(this.verb, webhookWithOutgoingIntegrationDetails.verb) &&
        Objects.equals(this.url, webhookWithOutgoingIntegrationDetails.url) &&
        Objects.equals(this.headers, webhookWithOutgoingIntegrationDetails.headers) &&
        Objects.equals(this.payload, webhookWithOutgoingIntegrationDetails.payload) &&
        Objects.equals(this.params, webhookWithOutgoingIntegrationDetails.params) &&
        Objects.equals(this.enabled, webhookWithOutgoingIntegrationDetails.enabled) &&
        Objects.equals(this.outgoingIntegrationTemplateId, webhookWithOutgoingIntegrationDetails.outgoingIntegrationTemplateId) &&
        Objects.equals(this.outgoingIntegrationTypeId, webhookWithOutgoingIntegrationDetails.outgoingIntegrationTypeId) &&
        Objects.equals(this.outgoingIntegrationTypeName, webhookWithOutgoingIntegrationDetails.outgoingIntegrationTypeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, modified, applicationIds, title, description, verb, url, headers, payload, params, enabled, outgoingIntegrationTemplateId, outgoingIntegrationTypeId, outgoingIntegrationTypeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookWithOutgoingIntegrationDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    applicationIds: ").append(toIndentedString(applicationIds)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    verb: ").append(toIndentedString(verb)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    outgoingIntegrationTemplateId: ").append(toIndentedString(outgoingIntegrationTemplateId)).append("\n");
    sb.append("    outgoingIntegrationTypeId: ").append(toIndentedString(outgoingIntegrationTypeId)).append("\n");
    sb.append("    outgoingIntegrationTypeName: ").append(toIndentedString(outgoingIntegrationTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

