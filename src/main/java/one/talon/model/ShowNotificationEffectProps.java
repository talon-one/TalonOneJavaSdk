/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The properties specific to the \&quot;showNotification\&quot; effect. This gets triggered whenever a validated rule contained a \&quot;show notification\&quot; effect.
 */
@ApiModel(description = "The properties specific to the \"showNotification\" effect. This gets triggered whenever a validated rule contained a \"show notification\" effect.")

public class ShowNotificationEffectProps {
  public static final String SERIALIZED_NAME_NOTIFICATION_TYPE = "notificationType";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TYPE)
  private String notificationType;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;


  public ShowNotificationEffectProps notificationType(String notificationType) {
    
    this.notificationType = notificationType;
    return this;
  }

   /**
   * The type of notification that should be shown (e.g. error/warning/info)
   * @return notificationType
  **/
  @ApiModelProperty(required = true, value = "The type of notification that should be shown (e.g. error/warning/info)")

  public String getNotificationType() {
    return notificationType;
  }


  public void setNotificationType(String notificationType) {
    this.notificationType = notificationType;
  }


  public ShowNotificationEffectProps title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the notification
   * @return title
  **/
  @ApiModelProperty(required = true, value = "Title of the notification")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ShowNotificationEffectProps body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * Body of the notification
   * @return body
  **/
  @ApiModelProperty(required = true, value = "Body of the notification")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShowNotificationEffectProps showNotificationEffectProps = (ShowNotificationEffectProps) o;
    return Objects.equals(this.notificationType, showNotificationEffectProps.notificationType) &&
        Objects.equals(this.title, showNotificationEffectProps.title) &&
        Objects.equals(this.body, showNotificationEffectProps.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notificationType, title, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShowNotificationEffectProps {\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

