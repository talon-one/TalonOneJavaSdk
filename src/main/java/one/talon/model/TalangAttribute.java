/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")

public class TalangAttribute {
  /**
   * The name of the entity of the attribute.
   */
  @JsonAdapter(EntityEnum.Adapter.class)
  public enum EntityEnum {
    ADVOCATEPROFILE("AdvocateProfile"),
    
    ACCOUNT("Account"),
    
    APPLICATION("Application"),
    
    AWARDEDGIVEAWAY("AwardedGiveaway"),
    
    BUNDLE("Bundle"),
    
    CAMPAIGN("Campaign"),
    
    CARTITEM("CartItem"),
    
    COUPON("Coupon"),
    
    CUSTOMERPROFILE("CustomerProfile"),
    
    CUSTOMERSESSION("CustomerSession"),
    
    EVENT("Event"),
    
    ITEM("Item"),
    
    LOYALTY("Loyalty"),
    
    PROFILE("Profile"),
    
    GIVEAWAY("Giveaway"),
    
    REFERRAL("Referral"),
    
    SESSION("Session");

    private String value;

    EntityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityEnum fromValue(String value) {
      for (EntityEnum b : EntityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private EntityEnum entity;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible = true;

  /**
   * Indicate the kind of the attribute.
   */
  @JsonAdapter(KindEnum.Adapter.class)
  public enum KindEnum {
    BUILT_IN("built-in"),
    
    CUSTOM("custom");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KindEnum fromValue(String value) {
      for (KindEnum b : KindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KindEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KindEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KindEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return KindEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private KindEnum kind;

  public static final String SERIALIZED_NAME_CAMPAIGNS_COUNT = "campaignsCount";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS_COUNT)
  private Integer campaignsCount;

  public static final String SERIALIZED_NAME_EXAMPLE_VALUE = "exampleValue";
  @SerializedName(SERIALIZED_NAME_EXAMPLE_VALUE)
  private List<String> exampleValue = null;


  public TalangAttribute entity(EntityEnum entity) {
    
    this.entity = entity;
    return this;
  }

   /**
   * The name of the entity of the attribute.
   * @return entity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the entity of the attribute.")

  public EntityEnum getEntity() {
    return entity;
  }


  public void setEntity(EntityEnum entity) {
    this.entity = entity;
  }


  public TalangAttribute name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The attribute name that will be used in API requests and Talang. E.g. if &#x60;name &#x3D;&#x3D; \&quot;region\&quot;&#x60; then you would set the region attribute by including an &#x60;attributes.region&#x60; property in your request payload. 
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The attribute name that will be used in API requests and Talang. E.g. if `name == \"region\"` then you would set the region attribute by including an `attributes.region` property in your request payload. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TalangAttribute title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The name of the attribute that is displayed to the user in the Campaign Manager.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the attribute that is displayed to the user in the Campaign Manager.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public TalangAttribute type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The talang type of the attribute.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The talang type of the attribute.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public TalangAttribute description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the attribute.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the attribute.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TalangAttribute visible(Boolean visible) {
    
    this.visible = visible;
    return this;
  }

   /**
   * Indicates whether the attribute is visible in the UI or not.
   * @return visible
  **/
  @ApiModelProperty(required = true, value = "Indicates whether the attribute is visible in the UI or not.")

  public Boolean getVisible() {
    return visible;
  }


  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  public TalangAttribute kind(KindEnum kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Indicate the kind of the attribute.
   * @return kind
  **/
  @ApiModelProperty(required = true, value = "Indicate the kind of the attribute.")

  public KindEnum getKind() {
    return kind;
  }


  public void setKind(KindEnum kind) {
    this.kind = kind;
  }


  public TalangAttribute campaignsCount(Integer campaignsCount) {
    
    this.campaignsCount = campaignsCount;
    return this;
  }

   /**
   * The number of campaigns that refer to the attribute.
   * @return campaignsCount
  **/
  @ApiModelProperty(required = true, value = "The number of campaigns that refer to the attribute.")

  public Integer getCampaignsCount() {
    return campaignsCount;
  }


  public void setCampaignsCount(Integer campaignsCount) {
    this.campaignsCount = campaignsCount;
  }


  public TalangAttribute exampleValue(List<String> exampleValue) {
    
    this.exampleValue = exampleValue;
    return this;
  }

  public TalangAttribute addExampleValueItem(String exampleValueItem) {
    if (this.exampleValue == null) {
      this.exampleValue = new ArrayList<String>();
    }
    this.exampleValue.add(exampleValueItem);
    return this;
  }

   /**
   * Examples of values that can be assigned to the attribute.
   * @return exampleValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Examples of values that can be assigned to the attribute.")

  public List<String> getExampleValue() {
    return exampleValue;
  }


  public void setExampleValue(List<String> exampleValue) {
    this.exampleValue = exampleValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TalangAttribute talangAttribute = (TalangAttribute) o;
    return Objects.equals(this.entity, talangAttribute.entity) &&
        Objects.equals(this.name, talangAttribute.name) &&
        Objects.equals(this.title, talangAttribute.title) &&
        Objects.equals(this.type, talangAttribute.type) &&
        Objects.equals(this.description, talangAttribute.description) &&
        Objects.equals(this.visible, talangAttribute.visible) &&
        Objects.equals(this.kind, talangAttribute.kind) &&
        Objects.equals(this.campaignsCount, talangAttribute.campaignsCount) &&
        Objects.equals(this.exampleValue, talangAttribute.exampleValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entity, name, title, type, description, visible, kind, campaignsCount, exampleValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TalangAttribute {\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    campaignsCount: ").append(toIndentedString(campaignsCount)).append("\n");
    sb.append("    exampleValue: ").append(toIndentedString(exampleValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

