/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class SamlConnection {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Integer accountId;

  public static final String SERIALIZED_NAME_ASSERTION_CONSUMER_SERVICE_U_R_L = "assertionConsumerServiceURL";
  @SerializedName(SERIALIZED_NAME_ASSERTION_CONSUMER_SERVICE_U_R_L)
  private String assertionConsumerServiceURL;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ISSUER = "issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  private String issuer;

  public static final String SERIALIZED_NAME_SIGN_ON_U_R_L = "signOnURL";
  @SerializedName(SERIALIZED_NAME_SIGN_ON_U_R_L)
  private String signOnURL;

  public static final String SERIALIZED_NAME_SIGN_OUT_U_R_L = "signOutURL";
  @SerializedName(SERIALIZED_NAME_SIGN_OUT_U_R_L)
  private String signOutURL;

  public static final String SERIALIZED_NAME_METADATA_U_R_L = "metadataURL";
  @SerializedName(SERIALIZED_NAME_METADATA_U_R_L)
  private String metadataURL;

  public static final String SERIALIZED_NAME_X509CERTIFICATE = "x509certificate";
  @SerializedName(SERIALIZED_NAME_X509CERTIFICATE)
  private String x509certificate;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  private String audience;

  public SamlConnection id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SamlConnection created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Unix timestamp indicating when the session was first created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "Unix timestamp indicating when the session was first created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public SamlConnection accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account that owns this SAML Service.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account that owns this SAML Service.")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public SamlConnection assertionConsumerServiceURL(String assertionConsumerServiceURL) {
    this.assertionConsumerServiceURL = assertionConsumerServiceURL;
    return this;
  }

   /**
   * The location where the SAML assertion is sent with a HTTP POST.
   * @return assertionConsumerServiceURL
  **/
  @ApiModelProperty(required = true, value = "The location where the SAML assertion is sent with a HTTP POST.")
  public String getAssertionConsumerServiceURL() {
    return assertionConsumerServiceURL;
  }

  public void setAssertionConsumerServiceURL(String assertionConsumerServiceURL) {
    this.assertionConsumerServiceURL = assertionConsumerServiceURL;
  }

  public SamlConnection name(String name) {
    this.name = name;
    return this;
  }

   /**
   * ID of the SAML service.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "ID of the SAML service.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SamlConnection enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Determines if this SAML connection active.
   * @return enabled
  **/
  @ApiModelProperty(required = true, value = "Determines if this SAML connection active.")
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public SamlConnection issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Identity Provider Entity ID.
   * @return issuer
  **/
  @ApiModelProperty(required = true, value = "Identity Provider Entity ID.")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public SamlConnection signOnURL(String signOnURL) {
    this.signOnURL = signOnURL;
    return this;
  }

   /**
   * Single Sign-On URL.
   * @return signOnURL
  **/
  @ApiModelProperty(required = true, value = "Single Sign-On URL.")
  public String getSignOnURL() {
    return signOnURL;
  }

  public void setSignOnURL(String signOnURL) {
    this.signOnURL = signOnURL;
  }

  public SamlConnection signOutURL(String signOutURL) {
    this.signOutURL = signOutURL;
    return this;
  }

   /**
   * Single Sign-Out URL.
   * @return signOutURL
  **/
  @ApiModelProperty(value = "Single Sign-Out URL.")
  public String getSignOutURL() {
    return signOutURL;
  }

  public void setSignOutURL(String signOutURL) {
    this.signOutURL = signOutURL;
  }

  public SamlConnection metadataURL(String metadataURL) {
    this.metadataURL = metadataURL;
    return this;
  }

   /**
   * Metadata URL.
   * @return metadataURL
  **/
  @ApiModelProperty(value = "Metadata URL.")
  public String getMetadataURL() {
    return metadataURL;
  }

  public void setMetadataURL(String metadataURL) {
    this.metadataURL = metadataURL;
  }

  public SamlConnection x509certificate(String x509certificate) {
    this.x509certificate = x509certificate;
    return this;
  }

   /**
   * X.509 Certificate.
   * @return x509certificate
  **/
  @ApiModelProperty(required = true, value = "X.509 Certificate.")
  public String getX509certificate() {
    return x509certificate;
  }

  public void setX509certificate(String x509certificate) {
    this.x509certificate = x509certificate;
  }

  public SamlConnection audience(String audience) {
    this.audience = audience;
    return this;
  }

   /**
   * The application-defined unique identifier that is the intended audience of the SAML assertion.  This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used. 
   * @return audience
  **/
  @ApiModelProperty(required = true, value = "The application-defined unique identifier that is the intended audience of the SAML assertion.  This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used. ")
  public String getAudience() {
    return audience;
  }

  public void setAudience(String audience) {
    this.audience = audience;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SamlConnection samlConnection = (SamlConnection) o;
    return Objects.equals(this.id, samlConnection.id) &&
        Objects.equals(this.created, samlConnection.created) &&
        Objects.equals(this.accountId, samlConnection.accountId) &&
        Objects.equals(this.assertionConsumerServiceURL, samlConnection.assertionConsumerServiceURL) &&
        Objects.equals(this.name, samlConnection.name) &&
        Objects.equals(this.enabled, samlConnection.enabled) &&
        Objects.equals(this.issuer, samlConnection.issuer) &&
        Objects.equals(this.signOnURL, samlConnection.signOnURL) &&
        Objects.equals(this.signOutURL, samlConnection.signOutURL) &&
        Objects.equals(this.metadataURL, samlConnection.metadataURL) &&
        Objects.equals(this.x509certificate, samlConnection.x509certificate) &&
        Objects.equals(this.audience, samlConnection.audience);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, accountId, assertionConsumerServiceURL, name, enabled, issuer, signOnURL, signOutURL, metadataURL, x509certificate, audience);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SamlConnection {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    assertionConsumerServiceURL: ").append(toIndentedString(assertionConsumerServiceURL)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    signOnURL: ").append(toIndentedString(signOnURL)).append("\n");
    sb.append("    signOutURL: ").append(toIndentedString(signOutURL)).append("\n");
    sb.append("    metadataURL: ").append(toIndentedString(metadataURL)).append("\n");
    sb.append("    x509certificate: ").append(toIndentedString(x509certificate)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

