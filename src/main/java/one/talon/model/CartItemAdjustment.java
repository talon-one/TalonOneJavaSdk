/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CartItemAdjustment
 */

public class CartItemAdjustment {
  public static final String SERIALIZED_NAME_PAY_FROM_LOYALTY_PROGRAM = "payFromLoyaltyProgram";
  @SerializedName(SERIALIZED_NAME_PAY_FROM_LOYALTY_PROGRAM)
  private Integer payFromLoyaltyProgram;

  public static final String SERIALIZED_NAME_POINT_PAYMENT = "pointPayment";
  @SerializedName(SERIALIZED_NAME_POINT_PAYMENT)
  private Integer pointPayment;

  public static final String SERIALIZED_NAME_REMAINING_PRICE = "remainingPrice";
  @SerializedName(SERIALIZED_NAME_REMAINING_PRICE)
  private BigDecimal remainingPrice;


  public CartItemAdjustment payFromLoyaltyProgram(Integer payFromLoyaltyProgram) {
    
    this.payFromLoyaltyProgram = payFromLoyaltyProgram;
    return this;
  }

   /**
   * Loyalty Program to be used for payment
   * @return payFromLoyaltyProgram
  **/
  @ApiModelProperty(required = true, value = "Loyalty Program to be used for payment")

  public Integer getPayFromLoyaltyProgram() {
    return payFromLoyaltyProgram;
  }


  public void setPayFromLoyaltyProgram(Integer payFromLoyaltyProgram) {
    this.payFromLoyaltyProgram = payFromLoyaltyProgram;
  }


  public CartItemAdjustment pointPayment(Integer pointPayment) {
    
    this.pointPayment = pointPayment;
    return this;
  }

   /**
   * Amount of points to be spend
   * minimum: 1
   * @return pointPayment
  **/
  @ApiModelProperty(required = true, value = "Amount of points to be spend")

  public Integer getPointPayment() {
    return pointPayment;
  }


  public void setPointPayment(Integer pointPayment) {
    this.pointPayment = pointPayment;
  }


  public CartItemAdjustment remainingPrice(BigDecimal remainingPrice) {
    
    this.remainingPrice = remainingPrice;
    return this;
  }

   /**
   * Remaining price in currency after payment in points has been made
   * minimum: 0
   * @return remainingPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Remaining price in currency after payment in points has been made")

  public BigDecimal getRemainingPrice() {
    return remainingPrice;
  }


  public void setRemainingPrice(BigDecimal remainingPrice) {
    this.remainingPrice = remainingPrice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartItemAdjustment cartItemAdjustment = (CartItemAdjustment) o;
    return Objects.equals(this.payFromLoyaltyProgram, cartItemAdjustment.payFromLoyaltyProgram) &&
        Objects.equals(this.pointPayment, cartItemAdjustment.pointPayment) &&
        Objects.equals(this.remainingPrice, cartItemAdjustment.remainingPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payFromLoyaltyProgram, pointPayment, remainingPrice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartItemAdjustment {\n");
    sb.append("    payFromLoyaltyProgram: ").append(toIndentedString(payFromLoyaltyProgram)).append("\n");
    sb.append("    pointPayment: ").append(toIndentedString(pointPayment)).append("\n");
    sb.append("    remainingPrice: ").append(toIndentedString(remainingPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

