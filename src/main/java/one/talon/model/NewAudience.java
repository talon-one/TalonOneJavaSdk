/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NewAudience
 */

public class NewAudience {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Integration that this audience was created in.
   */
  @JsonAdapter(IntegrationEnum.Adapter.class)
  public enum IntegrationEnum {
    MPARTICLE("mparticle");

    private String value;

    IntegrationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntegrationEnum fromValue(String value) {
      for (IntegrationEnum b : IntegrationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IntegrationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntegrationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntegrationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IntegrationEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INTEGRATION = "integration";
  @SerializedName(SERIALIZED_NAME_INTEGRATION)
  private IntegrationEnum integration;

  public static final String SERIALIZED_NAME_INTEGRATION_ID = "integrationId";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_ID)
  private String integrationId;


  public NewAudience name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The human-friendly display name for this Audience.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The human-friendly display name for this Audience.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public NewAudience integration(IntegrationEnum integration) {
    
    this.integration = integration;
    return this;
  }

   /**
   * Integration that this audience was created in.
   * @return integration
  **/
  @ApiModelProperty(required = true, value = "Integration that this audience was created in.")

  public IntegrationEnum getIntegration() {
    return integration;
  }


  public void setIntegration(IntegrationEnum integration) {
    this.integration = integration;
  }


  public NewAudience integrationId(String integrationId) {
    
    this.integrationId = integrationId;
    return this;
  }

   /**
   * The ID of this Audience in the third-party integration
   * @return integrationId
  **/
  @ApiModelProperty(required = true, value = "The ID of this Audience in the third-party integration")

  public String getIntegrationId() {
    return integrationId;
  }


  public void setIntegrationId(String integrationId) {
    this.integrationId = integrationId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewAudience newAudience = (NewAudience) o;
    return Objects.equals(this.name, newAudience.name) &&
        Objects.equals(this.integration, newAudience.integration) &&
        Objects.equals(this.integrationId, newAudience.integrationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, integration, integrationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewAudience {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    integration: ").append(toIndentedString(integration)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

