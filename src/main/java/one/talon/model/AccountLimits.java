/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AccountLimits
 */

public class AccountLimits {
  public static final String SERIALIZED_NAME_LIVE_APPLICATIONS = "liveApplications";
  @SerializedName(SERIALIZED_NAME_LIVE_APPLICATIONS)
  private Integer liveApplications;

  public static final String SERIALIZED_NAME_SANDBOX_APPLICATIONS = "sandboxApplications";
  @SerializedName(SERIALIZED_NAME_SANDBOX_APPLICATIONS)
  private Integer sandboxApplications;

  public static final String SERIALIZED_NAME_ACTIVE_CAMPAIGNS = "activeCampaigns";
  @SerializedName(SERIALIZED_NAME_ACTIVE_CAMPAIGNS)
  private Integer activeCampaigns;

  public static final String SERIALIZED_NAME_COUPONS = "coupons";
  @SerializedName(SERIALIZED_NAME_COUPONS)
  private Integer coupons;

  public static final String SERIALIZED_NAME_REFERRAL_CODES = "referralCodes";
  @SerializedName(SERIALIZED_NAME_REFERRAL_CODES)
  private Integer referralCodes;

  public static final String SERIALIZED_NAME_ACTIVE_RULES = "activeRules";
  @SerializedName(SERIALIZED_NAME_ACTIVE_RULES)
  private Integer activeRules;

  public static final String SERIALIZED_NAME_LIVE_LOYALTY_PROGRAMS = "liveLoyaltyPrograms";
  @SerializedName(SERIALIZED_NAME_LIVE_LOYALTY_PROGRAMS)
  private Integer liveLoyaltyPrograms;

  public static final String SERIALIZED_NAME_SANDBOX_LOYALTY_PROGRAMS = "sandboxLoyaltyPrograms";
  @SerializedName(SERIALIZED_NAME_SANDBOX_LOYALTY_PROGRAMS)
  private Integer sandboxLoyaltyPrograms;

  public static final String SERIALIZED_NAME_WEBHOOKS = "webhooks";
  @SerializedName(SERIALIZED_NAME_WEBHOOKS)
  private Integer webhooks;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private Integer users;

  public static final String SERIALIZED_NAME_API_VOLUME = "apiVolume";
  @SerializedName(SERIALIZED_NAME_API_VOLUME)
  private Integer apiVolume;

  public static final String SERIALIZED_NAME_PROMOTION_TYPES = "promotionTypes";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TYPES)
  private List<String> promotionTypes = new ArrayList<String>();


  public AccountLimits liveApplications(Integer liveApplications) {
    
    this.liveApplications = liveApplications;
    return this;
  }

   /**
   * Total number of allowed live applications in the account
   * @return liveApplications
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed live applications in the account")

  public Integer getLiveApplications() {
    return liveApplications;
  }


  public void setLiveApplications(Integer liveApplications) {
    this.liveApplications = liveApplications;
  }


  public AccountLimits sandboxApplications(Integer sandboxApplications) {
    
    this.sandboxApplications = sandboxApplications;
    return this;
  }

   /**
   * Total number of allowed sandbox applications in the account
   * @return sandboxApplications
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed sandbox applications in the account")

  public Integer getSandboxApplications() {
    return sandboxApplications;
  }


  public void setSandboxApplications(Integer sandboxApplications) {
    this.sandboxApplications = sandboxApplications;
  }


  public AccountLimits activeCampaigns(Integer activeCampaigns) {
    
    this.activeCampaigns = activeCampaigns;
    return this;
  }

   /**
   * Total number of allowed active campaigns in live applications in the account
   * @return activeCampaigns
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed active campaigns in live applications in the account")

  public Integer getActiveCampaigns() {
    return activeCampaigns;
  }


  public void setActiveCampaigns(Integer activeCampaigns) {
    this.activeCampaigns = activeCampaigns;
  }


  public AccountLimits coupons(Integer coupons) {
    
    this.coupons = coupons;
    return this;
  }

   /**
   * Total number of allowed coupons in the account
   * @return coupons
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed coupons in the account")

  public Integer getCoupons() {
    return coupons;
  }


  public void setCoupons(Integer coupons) {
    this.coupons = coupons;
  }


  public AccountLimits referralCodes(Integer referralCodes) {
    
    this.referralCodes = referralCodes;
    return this;
  }

   /**
   * Total number of allowed referral codes in the account
   * @return referralCodes
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed referral codes in the account")

  public Integer getReferralCodes() {
    return referralCodes;
  }


  public void setReferralCodes(Integer referralCodes) {
    this.referralCodes = referralCodes;
  }


  public AccountLimits activeRules(Integer activeRules) {
    
    this.activeRules = activeRules;
    return this;
  }

   /**
   * Total number of allowed active rulesets in the account
   * @return activeRules
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed active rulesets in the account")

  public Integer getActiveRules() {
    return activeRules;
  }


  public void setActiveRules(Integer activeRules) {
    this.activeRules = activeRules;
  }


  public AccountLimits liveLoyaltyPrograms(Integer liveLoyaltyPrograms) {
    
    this.liveLoyaltyPrograms = liveLoyaltyPrograms;
    return this;
  }

   /**
   * Total number of allowed live loyalty programs in the account
   * @return liveLoyaltyPrograms
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed live loyalty programs in the account")

  public Integer getLiveLoyaltyPrograms() {
    return liveLoyaltyPrograms;
  }


  public void setLiveLoyaltyPrograms(Integer liveLoyaltyPrograms) {
    this.liveLoyaltyPrograms = liveLoyaltyPrograms;
  }


  public AccountLimits sandboxLoyaltyPrograms(Integer sandboxLoyaltyPrograms) {
    
    this.sandboxLoyaltyPrograms = sandboxLoyaltyPrograms;
    return this;
  }

   /**
   * Total number of allowed sandbox loyalty programs in the account
   * @return sandboxLoyaltyPrograms
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed sandbox loyalty programs in the account")

  public Integer getSandboxLoyaltyPrograms() {
    return sandboxLoyaltyPrograms;
  }


  public void setSandboxLoyaltyPrograms(Integer sandboxLoyaltyPrograms) {
    this.sandboxLoyaltyPrograms = sandboxLoyaltyPrograms;
  }


  public AccountLimits webhooks(Integer webhooks) {
    
    this.webhooks = webhooks;
    return this;
  }

   /**
   * Total number of allowed webhooks in the account
   * @return webhooks
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed webhooks in the account")

  public Integer getWebhooks() {
    return webhooks;
  }


  public void setWebhooks(Integer webhooks) {
    this.webhooks = webhooks;
  }


  public AccountLimits users(Integer users) {
    
    this.users = users;
    return this;
  }

   /**
   * Total number of allowed users in the account
   * @return users
  **/
  @ApiModelProperty(required = true, value = "Total number of allowed users in the account")

  public Integer getUsers() {
    return users;
  }


  public void setUsers(Integer users) {
    this.users = users;
  }


  public AccountLimits apiVolume(Integer apiVolume) {
    
    this.apiVolume = apiVolume;
    return this;
  }

   /**
   * Allowed volume of API requests to the account
   * @return apiVolume
  **/
  @ApiModelProperty(required = true, value = "Allowed volume of API requests to the account")

  public Integer getApiVolume() {
    return apiVolume;
  }


  public void setApiVolume(Integer apiVolume) {
    this.apiVolume = apiVolume;
  }


  public AccountLimits promotionTypes(List<String> promotionTypes) {
    
    this.promotionTypes = promotionTypes;
    return this;
  }

  public AccountLimits addPromotionTypesItem(String promotionTypesItem) {
    this.promotionTypes.add(promotionTypesItem);
    return this;
  }

   /**
   * Array of promotion types that are employed in the account
   * @return promotionTypes
  **/
  @ApiModelProperty(required = true, value = "Array of promotion types that are employed in the account")

  public List<String> getPromotionTypes() {
    return promotionTypes;
  }


  public void setPromotionTypes(List<String> promotionTypes) {
    this.promotionTypes = promotionTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLimits accountLimits = (AccountLimits) o;
    return Objects.equals(this.liveApplications, accountLimits.liveApplications) &&
        Objects.equals(this.sandboxApplications, accountLimits.sandboxApplications) &&
        Objects.equals(this.activeCampaigns, accountLimits.activeCampaigns) &&
        Objects.equals(this.coupons, accountLimits.coupons) &&
        Objects.equals(this.referralCodes, accountLimits.referralCodes) &&
        Objects.equals(this.activeRules, accountLimits.activeRules) &&
        Objects.equals(this.liveLoyaltyPrograms, accountLimits.liveLoyaltyPrograms) &&
        Objects.equals(this.sandboxLoyaltyPrograms, accountLimits.sandboxLoyaltyPrograms) &&
        Objects.equals(this.webhooks, accountLimits.webhooks) &&
        Objects.equals(this.users, accountLimits.users) &&
        Objects.equals(this.apiVolume, accountLimits.apiVolume) &&
        Objects.equals(this.promotionTypes, accountLimits.promotionTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(liveApplications, sandboxApplications, activeCampaigns, coupons, referralCodes, activeRules, liveLoyaltyPrograms, sandboxLoyaltyPrograms, webhooks, users, apiVolume, promotionTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLimits {\n");
    sb.append("    liveApplications: ").append(toIndentedString(liveApplications)).append("\n");
    sb.append("    sandboxApplications: ").append(toIndentedString(sandboxApplications)).append("\n");
    sb.append("    activeCampaigns: ").append(toIndentedString(activeCampaigns)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    referralCodes: ").append(toIndentedString(referralCodes)).append("\n");
    sb.append("    activeRules: ").append(toIndentedString(activeRules)).append("\n");
    sb.append("    liveLoyaltyPrograms: ").append(toIndentedString(liveLoyaltyPrograms)).append("\n");
    sb.append("    sandboxLoyaltyPrograms: ").append(toIndentedString(sandboxLoyaltyPrograms)).append("\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    apiVolume: ").append(toIndentedString(apiVolume)).append("\n");
    sb.append("    promotionTypes: ").append(toIndentedString(promotionTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

