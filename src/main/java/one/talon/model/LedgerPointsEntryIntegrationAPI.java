/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * Loyalty profile points with start and expiry dates.
 */
@ApiModel(description = "Loyalty profile points with start and expiry dates.")

public class LedgerPointsEntryIntegrationAPI {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_PROGRAM_ID = "programId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private Integer programId;

  public static final String SERIALIZED_NAME_CUSTOMER_SESSION_ID = "customerSessionId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SESSION_ID)
  private String customerSessionId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private String expiryDate;

  public static final String SERIALIZED_NAME_SUBLEDGER_ID = "subledgerId";
  @SerializedName(SERIALIZED_NAME_SUBLEDGER_ID)
  private String subledgerId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;


  public LedgerPointsEntryIntegrationAPI id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the transaction that adds loyalty points.
   * @return id
  **/
  @ApiModelProperty(example = "123", required = true, value = "ID of the transaction that adds loyalty points.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public LedgerPointsEntryIntegrationAPI created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Date and time the loyalty points were added.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "Date and time the loyalty points were added.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public LedgerPointsEntryIntegrationAPI programId(Integer programId) {
    
    this.programId = programId;
    return this;
  }

   /**
   * ID of the loyalty program.
   * @return programId
  **/
  @ApiModelProperty(example = "324", required = true, value = "ID of the loyalty program.")

  public Integer getProgramId() {
    return programId;
  }


  public void setProgramId(Integer programId) {
    this.programId = programId;
  }


  public LedgerPointsEntryIntegrationAPI customerSessionId(String customerSessionId) {
    
    this.customerSessionId = customerSessionId;
    return this;
  }

   /**
   * ID of the customer session where points were added.
   * @return customerSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "05c2da0d-48fa-4aa1-b629-898f58f1584d", value = "ID of the customer session where points were added.")

  public String getCustomerSessionId() {
    return customerSessionId;
  }


  public void setCustomerSessionId(String customerSessionId) {
    this.customerSessionId = customerSessionId;
  }


  public LedgerPointsEntryIntegrationAPI name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name or reason of the transaction that adds loyalty points.
   * @return name
  **/
  @ApiModelProperty(example = "Reward 10% points of a purchase's current total", required = true, value = "Name or reason of the transaction that adds loyalty points.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public LedgerPointsEntryIntegrationAPI startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * When points become active. Possible values:   - &#x60;immediate&#x60;: Points are active immediately.   - &#x60;timestamp value&#x60;: Points become active at a given date and time. 
   * @return startDate
  **/
  @ApiModelProperty(example = "2022-01-02T15:04:05Z07:00", required = true, value = "When points become active. Possible values:   - `immediate`: Points are active immediately.   - `timestamp value`: Points become active at a given date and time. ")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public LedgerPointsEntryIntegrationAPI expiryDate(String expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Date when points expire. Possible values are:   - &#x60;unlimited&#x60;: Points have no expiration date.   - &#x60;timestamp value&#x60;: Points expire on the given date and time. 
   * @return expiryDate
  **/
  @ApiModelProperty(example = "2022-08-02T15:04:05Z07:00", required = true, value = "Date when points expire. Possible values are:   - `unlimited`: Points have no expiration date.   - `timestamp value`: Points expire on the given date and time. ")

  public String getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public LedgerPointsEntryIntegrationAPI subledgerId(String subledgerId) {
    
    this.subledgerId = subledgerId;
    return this;
  }

   /**
   * ID of the subledger.
   * @return subledgerId
  **/
  @ApiModelProperty(example = "sub-123", required = true, value = "ID of the subledger.")

  public String getSubledgerId() {
    return subledgerId;
  }


  public void setSubledgerId(String subledgerId) {
    this.subledgerId = subledgerId;
  }


  public LedgerPointsEntryIntegrationAPI amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount of loyalty points added in the transaction.
   * @return amount
  **/
  @ApiModelProperty(example = "10.25", required = true, value = "Amount of loyalty points added in the transaction.")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LedgerPointsEntryIntegrationAPI ledgerPointsEntryIntegrationAPI = (LedgerPointsEntryIntegrationAPI) o;
    return Objects.equals(this.id, ledgerPointsEntryIntegrationAPI.id) &&
        Objects.equals(this.created, ledgerPointsEntryIntegrationAPI.created) &&
        Objects.equals(this.programId, ledgerPointsEntryIntegrationAPI.programId) &&
        Objects.equals(this.customerSessionId, ledgerPointsEntryIntegrationAPI.customerSessionId) &&
        Objects.equals(this.name, ledgerPointsEntryIntegrationAPI.name) &&
        Objects.equals(this.startDate, ledgerPointsEntryIntegrationAPI.startDate) &&
        Objects.equals(this.expiryDate, ledgerPointsEntryIntegrationAPI.expiryDate) &&
        Objects.equals(this.subledgerId, ledgerPointsEntryIntegrationAPI.subledgerId) &&
        Objects.equals(this.amount, ledgerPointsEntryIntegrationAPI.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, programId, customerSessionId, name, startDate, expiryDate, subledgerId, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LedgerPointsEntryIntegrationAPI {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    customerSessionId: ").append(toIndentedString(customerSessionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    subledgerId: ").append(toIndentedString(subledgerId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

