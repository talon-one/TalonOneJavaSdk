/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * AchievementProgress
 */

public class AchievementProgress {
  public static final String SERIALIZED_NAME_ACHIEVEMENT_ID = "achievementId";
  @SerializedName(SERIALIZED_NAME_ACHIEVEMENT_ID)
  private Integer achievementId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private Integer campaignId;

  /**
   * The status of the achievement.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INPROGRESS("inprogress"),
    
    COMPLETED("completed"),
    
    EXPIRED("expired");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private BigDecimal target;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private BigDecimal progress;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completionDate";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private OffsetDateTime completionDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;


  public AchievementProgress achievementId(Integer achievementId) {
    
    this.achievementId = achievementId;
    return this;
  }

   /**
   * The internal ID of the achievement.
   * @return achievementId
  **/
  @ApiModelProperty(example = "3", required = true, value = "The internal ID of the achievement.")

  public Integer getAchievementId() {
    return achievementId;
  }


  public void setAchievementId(Integer achievementId) {
    this.achievementId = achievementId;
  }


  public AchievementProgress name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The internal name of the achievement used in API requests. 
   * @return name
  **/
  @ApiModelProperty(example = "FreeCoffee10Orders", required = true, value = "The internal name of the achievement used in API requests. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AchievementProgress title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The display name of the achievement in the Campaign Manager.
   * @return title
  **/
  @ApiModelProperty(example = "50% off on 50th purchase.", required = true, value = "The display name of the achievement in the Campaign Manager.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public AchievementProgress campaignId(Integer campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign the achievement belongs to.
   * @return campaignId
  **/
  @ApiModelProperty(example = "3", required = true, value = "The ID of the campaign the achievement belongs to.")

  public Integer getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(Integer campaignId) {
    this.campaignId = campaignId;
  }


  public AchievementProgress status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the achievement.
   * @return status
  **/
  @ApiModelProperty(example = "completed", required = true, value = "The status of the achievement.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public AchievementProgress target(BigDecimal target) {
    
    this.target = target;
    return this;
  }

   /**
   * The required number of actions or the transactional milestone to complete the achievement.
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10.0", value = "The required number of actions or the transactional milestone to complete the achievement.")

  public BigDecimal getTarget() {
    return target;
  }


  public void setTarget(BigDecimal target) {
    this.target = target;
  }


  public AchievementProgress progress(BigDecimal progress) {
    
    this.progress = progress;
    return this;
  }

   /**
   * The current progress of the customer in the achievement.
   * @return progress
  **/
  @ApiModelProperty(example = "10.0", required = true, value = "The current progress of the customer in the achievement.")

  public BigDecimal getProgress() {
    return progress;
  }


  public void setProgress(BigDecimal progress) {
    this.progress = progress;
  }


  public AchievementProgress startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Timestamp at which the customer started the achievement.
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "Timestamp at which the customer started the achievement.")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public AchievementProgress completionDate(OffsetDateTime completionDate) {
    
    this.completionDate = completionDate;
    return this;
  }

   /**
   * Timestamp at which point the customer completed the achievement.
   * @return completionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp at which point the customer completed the achievement.")

  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }


  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  public AchievementProgress endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Timestamp at which point the achievement ends and resets for the customer.
   * @return endDate
  **/
  @ApiModelProperty(required = true, value = "Timestamp at which point the achievement ends and resets for the customer.")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AchievementProgress achievementProgress = (AchievementProgress) o;
    return Objects.equals(this.achievementId, achievementProgress.achievementId) &&
        Objects.equals(this.name, achievementProgress.name) &&
        Objects.equals(this.title, achievementProgress.title) &&
        Objects.equals(this.campaignId, achievementProgress.campaignId) &&
        Objects.equals(this.status, achievementProgress.status) &&
        Objects.equals(this.target, achievementProgress.target) &&
        Objects.equals(this.progress, achievementProgress.progress) &&
        Objects.equals(this.startDate, achievementProgress.startDate) &&
        Objects.equals(this.completionDate, achievementProgress.completionDate) &&
        Objects.equals(this.endDate, achievementProgress.endDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(achievementId, name, title, campaignId, status, target, progress, startDate, completionDate, endDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AchievementProgress {\n");
    sb.append("    achievementId: ").append(toIndentedString(achievementId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

