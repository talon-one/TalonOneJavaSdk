/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The list of all the subledgers that the loyalty program has.
 */
@ApiModel(description = "The list of all the subledgers that the loyalty program has.")

public class LoyaltyProgramSubledgers {
  public static final String SERIALIZED_NAME_LOYALTY_PROGRAM_ID = "loyaltyProgramId";
  @SerializedName(SERIALIZED_NAME_LOYALTY_PROGRAM_ID)
  private Integer loyaltyProgramId;

  public static final String SERIALIZED_NAME_SUBLEDGER_IDS = "subledgerIds";
  @SerializedName(SERIALIZED_NAME_SUBLEDGER_IDS)
  private List<String> subledgerIds = new ArrayList<String>();


  public LoyaltyProgramSubledgers loyaltyProgramId(Integer loyaltyProgramId) {
    
    this.loyaltyProgramId = loyaltyProgramId;
    return this;
  }

   /**
   * The internal ID of the loyalty program.
   * @return loyaltyProgramId
  **/
  @ApiModelProperty(example = "5", required = true, value = "The internal ID of the loyalty program.")

  public Integer getLoyaltyProgramId() {
    return loyaltyProgramId;
  }


  public void setLoyaltyProgramId(Integer loyaltyProgramId) {
    this.loyaltyProgramId = loyaltyProgramId;
  }


  public LoyaltyProgramSubledgers subledgerIds(List<String> subledgerIds) {
    
    this.subledgerIds = subledgerIds;
    return this;
  }

  public LoyaltyProgramSubledgers addSubledgerIdsItem(String subledgerIdsItem) {
    this.subledgerIds.add(subledgerIdsItem);
    return this;
  }

   /**
   * The list of subledger IDs.
   * @return subledgerIds
  **/
  @ApiModelProperty(required = true, value = "The list of subledger IDs.")

  public List<String> getSubledgerIds() {
    return subledgerIds;
  }


  public void setSubledgerIds(List<String> subledgerIds) {
    this.subledgerIds = subledgerIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgramSubledgers loyaltyProgramSubledgers = (LoyaltyProgramSubledgers) o;
    return Objects.equals(this.loyaltyProgramId, loyaltyProgramSubledgers.loyaltyProgramId) &&
        Objects.equals(this.subledgerIds, loyaltyProgramSubledgers.subledgerIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyProgramId, subledgerIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgramSubledgers {\n");
    sb.append("    loyaltyProgramId: ").append(toIndentedString(loyaltyProgramId)).append("\n");
    sb.append("    subledgerIds: ").append(toIndentedString(subledgerIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

