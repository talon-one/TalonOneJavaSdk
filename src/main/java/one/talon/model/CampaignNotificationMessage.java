/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.CampaignNotificationData;

/**
 * CampaignNotificationMessage
 */

public class CampaignNotificationMessage {
  public static final String SERIALIZED_NAME_TOTAL_RESULT_SIZE = "TotalResultSize";
  @SerializedName(SERIALIZED_NAME_TOTAL_RESULT_SIZE)
  private Long totalResultSize;

  public static final String SERIALIZED_NAME_DATA = "Data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private List<CampaignNotificationData> data = new ArrayList<CampaignNotificationData>();


  public CampaignNotificationMessage totalResultSize(Long totalResultSize) {
    
    this.totalResultSize = totalResultSize;
    return this;
  }

   /**
   * The total size of the result set.
   * @return totalResultSize
  **/
  @ApiModelProperty(required = true, value = "The total size of the result set.")

  public Long getTotalResultSize() {
    return totalResultSize;
  }


  public void setTotalResultSize(Long totalResultSize) {
    this.totalResultSize = totalResultSize;
  }


  public CampaignNotificationMessage data(List<CampaignNotificationData> data) {
    
    this.data = data;
    return this;
  }

  public CampaignNotificationMessage addDataItem(CampaignNotificationData dataItem) {
    this.data.add(dataItem);
    return this;
  }

   /**
   * A list of campaign notification data.
   * @return data
  **/
  @ApiModelProperty(required = true, value = "A list of campaign notification data.")

  public List<CampaignNotificationData> getData() {
    return data;
  }


  public void setData(List<CampaignNotificationData> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignNotificationMessage campaignNotificationMessage = (CampaignNotificationMessage) o;
    return Objects.equals(this.totalResultSize, campaignNotificationMessage.totalResultSize) &&
        Objects.equals(this.data, campaignNotificationMessage.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalResultSize, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignNotificationMessage {\n");
    sb.append("    totalResultSize: ").append(toIndentedString(totalResultSize)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

