/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * LimitConfig
 */

public class LimitConfig {
  /**
   * The limitable action to which this limit will be applied
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    REDEEMCOUPON("redeemCoupon"),
    
    REDEEMREFERRAL("redeemReferral"),
    
    SETDISCOUNT("setDiscount"),
    
    CREATECOUPON("createCoupon"),
    
    SETDISCOUNTEFFECT("setDiscountEffect");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private ActionEnum action;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private BigDecimal limit;

  /**
   * Gets or Sets entities
   */
  @JsonAdapter(EntitiesEnum.Adapter.class)
  public enum EntitiesEnum {
    COUPON("Coupon"),
    
    REFERRAL("Referral"),
    
    PROFILE("Profile"),
    
    IDENTIFIER("Identifier");

    private String value;

    EntitiesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntitiesEnum fromValue(String value) {
      for (EntitiesEnum b : EntitiesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntitiesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntitiesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntitiesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntitiesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ENTITIES = "entities";
  @SerializedName(SERIALIZED_NAME_ENTITIES)
  private List<EntitiesEnum> entities = new ArrayList<EntitiesEnum>();


  public LimitConfig action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * The limitable action to which this limit will be applied
   * @return action
  **/
  @ApiModelProperty(required = true, value = "The limitable action to which this limit will be applied")

  public ActionEnum getAction() {
    return action;
  }


  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public LimitConfig limit(BigDecimal limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The value to set for the limit
   * minimum: 0
   * @return limit
  **/
  @ApiModelProperty(required = true, value = "The value to set for the limit")

  public BigDecimal getLimit() {
    return limit;
  }


  public void setLimit(BigDecimal limit) {
    this.limit = limit;
  }


  public LimitConfig entities(List<EntitiesEnum> entities) {
    
    this.entities = entities;
    return this;
  }

  public LimitConfig addEntitiesItem(EntitiesEnum entitiesItem) {
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * The entities that make the address of this limit
   * @return entities
  **/
  @ApiModelProperty(required = true, value = "The entities that make the address of this limit")

  public List<EntitiesEnum> getEntities() {
    return entities;
  }


  public void setEntities(List<EntitiesEnum> entities) {
    this.entities = entities;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LimitConfig limitConfig = (LimitConfig) o;
    return Objects.equals(this.action, limitConfig.action) &&
        Objects.equals(this.limit, limitConfig.limit) &&
        Objects.equals(this.entities, limitConfig.entities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, limit, entities);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LimitConfig {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

