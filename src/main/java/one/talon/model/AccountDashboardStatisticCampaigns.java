/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccountDashboardStatisticCampaigns
 */

public class AccountDashboardStatisticCampaigns {
  public static final String SERIALIZED_NAME_LIVE = "live";
  @SerializedName(SERIALIZED_NAME_LIVE)
  private Integer live;

  public static final String SERIALIZED_NAME_ENDING_SOON = "endingSoon";
  @SerializedName(SERIALIZED_NAME_ENDING_SOON)
  private Integer endingSoon;


  public AccountDashboardStatisticCampaigns live(Integer live) {
    
    this.live = live;
    return this;
  }

   /**
   * Number of campaigns that are active and live (across all Applications).
   * @return live
  **/
  @ApiModelProperty(required = true, value = "Number of campaigns that are active and live (across all Applications).")

  public Integer getLive() {
    return live;
  }


  public void setLive(Integer live) {
    this.live = live;
  }


  public AccountDashboardStatisticCampaigns endingSoon(Integer endingSoon) {
    
    this.endingSoon = endingSoon;
    return this;
  }

   /**
   * Campaigns with a schedule ending in 7 days or with only 10% of budget left.
   * @return endingSoon
  **/
  @ApiModelProperty(required = true, value = "Campaigns with a schedule ending in 7 days or with only 10% of budget left.")

  public Integer getEndingSoon() {
    return endingSoon;
  }


  public void setEndingSoon(Integer endingSoon) {
    this.endingSoon = endingSoon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDashboardStatisticCampaigns accountDashboardStatisticCampaigns = (AccountDashboardStatisticCampaigns) o;
    return Objects.equals(this.live, accountDashboardStatisticCampaigns.live) &&
        Objects.equals(this.endingSoon, accountDashboardStatisticCampaigns.endingSoon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(live, endingSoon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDashboardStatisticCampaigns {\n");
    sb.append("    live: ").append(toIndentedString(live)).append("\n");
    sb.append("    endingSoon: ").append(toIndentedString(endingSoon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

