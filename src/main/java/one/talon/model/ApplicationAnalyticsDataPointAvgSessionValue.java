/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * The average customer session value, calculated by dividing the revenue value by the number of sessions. The &#x60;influenced&#x60; value includes only sessions with at least one applied effect.
 */
@ApiModel(description = "The average customer session value, calculated by dividing the revenue value by the number of sessions. The `influenced` value includes only sessions with at least one applied effect.")

public class ApplicationAnalyticsDataPointAvgSessionValue {
  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public static final String SERIALIZED_NAME_INFLUENCED = "influenced";
  @SerializedName(SERIALIZED_NAME_INFLUENCED)
  private BigDecimal influenced;


  public ApplicationAnalyticsDataPointAvgSessionValue total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.25", value = "")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  public ApplicationAnalyticsDataPointAvgSessionValue influenced(BigDecimal influenced) {
    
    this.influenced = influenced;
    return this;
  }

   /**
   * Get influenced
   * @return influenced
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3.25", value = "")

  public BigDecimal getInfluenced() {
    return influenced;
  }


  public void setInfluenced(BigDecimal influenced) {
    this.influenced = influenced;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationAnalyticsDataPointAvgSessionValue applicationAnalyticsDataPointAvgSessionValue = (ApplicationAnalyticsDataPointAvgSessionValue) o;
    return Objects.equals(this.total, applicationAnalyticsDataPointAvgSessionValue.total) &&
        Objects.equals(this.influenced, applicationAnalyticsDataPointAvgSessionValue.influenced);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, influenced);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationAnalyticsDataPointAvgSessionValue {\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    influenced: ").append(toIndentedString(influenced)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

