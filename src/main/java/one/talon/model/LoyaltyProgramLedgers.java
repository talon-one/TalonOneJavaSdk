/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import one.talon.model.LedgerInfo;

/**
 * Customer specific information about loyalty points.
 */
@ApiModel(description = "Customer specific information about loyalty points.")

public class LoyaltyProgramLedgers {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LEDGER = "ledger";
  @SerializedName(SERIALIZED_NAME_LEDGER)
  private LedgerInfo ledger;

  public static final String SERIALIZED_NAME_SUB_LEDGERS = "subLedgers";
  @SerializedName(SERIALIZED_NAME_SUB_LEDGERS)
  private Map<String, LedgerInfo> subLedgers = null;


  public LoyaltyProgramLedgers id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The internal ID of loyalty program
   * @return id
  **/
  @ApiModelProperty(example = "5", required = true, value = "The internal ID of loyalty program")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public LoyaltyProgramLedgers title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Visible name of loyalty program
   * @return title
  **/
  @ApiModelProperty(example = "My loyalty program", required = true, value = "Visible name of loyalty program")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public LoyaltyProgramLedgers name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Internal name of loyalty program
   * @return name
  **/
  @ApiModelProperty(example = "program1", required = true, value = "Internal name of loyalty program")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public LoyaltyProgramLedgers ledger(LedgerInfo ledger) {
    
    this.ledger = ledger;
    return this;
  }

   /**
   * Get ledger
   * @return ledger
  **/
  @ApiModelProperty(required = true, value = "")

  public LedgerInfo getLedger() {
    return ledger;
  }


  public void setLedger(LedgerInfo ledger) {
    this.ledger = ledger;
  }


  public LoyaltyProgramLedgers subLedgers(Map<String, LedgerInfo> subLedgers) {
    
    this.subLedgers = subLedgers;
    return this;
  }

  public LoyaltyProgramLedgers putSubLedgersItem(String key, LedgerInfo subLedgersItem) {
    if (this.subLedgers == null) {
      this.subLedgers = new HashMap<String, LedgerInfo>();
    }
    this.subLedgers.put(key, subLedgersItem);
    return this;
  }

   /**
   * A map containing information about each loyalty subledger
   * @return subLedgers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A map containing information about each loyalty subledger")

  public Map<String, LedgerInfo> getSubLedgers() {
    return subLedgers;
  }


  public void setSubLedgers(Map<String, LedgerInfo> subLedgers) {
    this.subLedgers = subLedgers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgramLedgers loyaltyProgramLedgers = (LoyaltyProgramLedgers) o;
    return Objects.equals(this.id, loyaltyProgramLedgers.id) &&
        Objects.equals(this.title, loyaltyProgramLedgers.title) &&
        Objects.equals(this.name, loyaltyProgramLedgers.name) &&
        Objects.equals(this.ledger, loyaltyProgramLedgers.ledger) &&
        Objects.equals(this.subLedgers, loyaltyProgramLedgers.subLedgers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, name, ledger, subLedgers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgramLedgers {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ledger: ").append(toIndentedString(ledger)).append("\n");
    sb.append("    subLedgers: ").append(toIndentedString(subLedgers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

