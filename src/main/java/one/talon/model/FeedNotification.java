/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * A feed notification for CAMA users
 */
@ApiModel(description = "A feed notification for CAMA users")

public class FeedNotification {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public static final String SERIALIZED_NAME_ARTICLE_URL = "articleUrl";
  @SerializedName(SERIALIZED_NAME_ARTICLE_URL)
  private String articleUrl;

  /**
   * The type of the feed notification
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FEED("feed"),
    
    FEATURE("feature"),
    
    ANNOUNCEMENT("announcement"),
    
    ALERT("alert"),
    
    TEST("test");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;


  public FeedNotification title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the feed notification
   * @return title
  **/
  @ApiModelProperty(required = true, value = "Title of the feed notification")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public FeedNotification created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Timestamp of the moment this feed notification was created
   * @return created
  **/
  @ApiModelProperty(required = true, value = "Timestamp of the moment this feed notification was created")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public FeedNotification updated(OffsetDateTime updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Timestamp of the moment this feed notification was last updated
   * @return updated
  **/
  @ApiModelProperty(required = true, value = "Timestamp of the moment this feed notification was last updated")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  public FeedNotification articleUrl(String articleUrl) {
    
    this.articleUrl = articleUrl;
    return this;
  }

   /**
   * URL to the feed notification in the help center
   * @return articleUrl
  **/
  @ApiModelProperty(required = true, value = "URL to the feed notification in the help center")

  public String getArticleUrl() {
    return articleUrl;
  }


  public void setArticleUrl(String articleUrl) {
    this.articleUrl = articleUrl;
  }


  public FeedNotification type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the feed notification
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of the feed notification")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public FeedNotification body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * Body of the feed notification
   * @return body
  **/
  @ApiModelProperty(required = true, value = "Body of the feed notification")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedNotification feedNotification = (FeedNotification) o;
    return Objects.equals(this.title, feedNotification.title) &&
        Objects.equals(this.created, feedNotification.created) &&
        Objects.equals(this.updated, feedNotification.updated) &&
        Objects.equals(this.articleUrl, feedNotification.articleUrl) &&
        Objects.equals(this.type, feedNotification.type) &&
        Objects.equals(this.body, feedNotification.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, created, updated, articleUrl, type, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedNotification {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    articleUrl: ").append(toIndentedString(articleUrl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

