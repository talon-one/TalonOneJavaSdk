/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.CampaignBudget;
import one.talon.model.CodeGeneratorSettings;
import one.talon.model.LimitConfig;
import org.threeten.bp.OffsetDateTime;

/**
 * Campaign
 */

public class Campaign {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Long applicationId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Object attributes;

  /**
   * A disabled or archived campaign is not evaluated for rules or coupons. 
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ENABLED("enabled"),
    
    DISABLED("disabled"),
    
    ARCHIVED("archived");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state = StateEnum.ENABLED;

  public static final String SERIALIZED_NAME_ACTIVE_RULESET_ID = "activeRulesetId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_RULESET_ID)
  private Long activeRulesetId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<String>();

  /**
   * Gets or Sets features
   */
  @JsonAdapter(FeaturesEnum.Adapter.class)
  public enum FeaturesEnum {
    COUPONS("coupons"),
    
    REFERRALS("referrals"),
    
    LOYALTY("loyalty"),
    
    GIVEAWAYS("giveaways"),
    
    STRIKETHROUGH("strikethrough"),
    
    ACHIEVEMENTS("achievements");

    private String value;

    FeaturesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeaturesEnum fromValue(String value) {
      for (FeaturesEnum b : FeaturesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeaturesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeaturesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeaturesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<FeaturesEnum> features = new ArrayList<FeaturesEnum>();

  public static final String SERIALIZED_NAME_COUPON_SETTINGS = "couponSettings";
  @SerializedName(SERIALIZED_NAME_COUPON_SETTINGS)
  private CodeGeneratorSettings couponSettings;

  public static final String SERIALIZED_NAME_REFERRAL_SETTINGS = "referralSettings";
  @SerializedName(SERIALIZED_NAME_REFERRAL_SETTINGS)
  private CodeGeneratorSettings referralSettings;

  public static final String SERIALIZED_NAME_LIMITS = "limits";
  @SerializedName(SERIALIZED_NAME_LIMITS)
  private List<LimitConfig> limits = new ArrayList<LimitConfig>();

  public static final String SERIALIZED_NAME_CAMPAIGN_GROUPS = "campaignGroups";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_GROUPS)
  private List<Long> campaignGroups = null;

  /**
   * The campaign type. Possible type values:   - &#x60;cartItem&#x60;: Type of campaign that can apply effects only to cart items.   - &#x60;advanced&#x60;: Type of campaign that can apply effects to customer sessions and cart items. 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CARTITEM("cartItem"),
    
    ADVANCED("advanced");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type = TypeEnum.ADVANCED;

  public static final String SERIALIZED_NAME_LINKED_STORE_IDS = "linkedStoreIds";
  @SerializedName(SERIALIZED_NAME_LINKED_STORE_IDS)
  private List<Long> linkedStoreIds = null;

  public static final String SERIALIZED_NAME_BUDGETS = "budgets";
  @SerializedName(SERIALIZED_NAME_BUDGETS)
  private List<CampaignBudget> budgets = null;

  public static final String SERIALIZED_NAME_COUPON_REDEMPTION_COUNT = "couponRedemptionCount";
  @SerializedName(SERIALIZED_NAME_COUPON_REDEMPTION_COUNT)
  private Long couponRedemptionCount;

  public static final String SERIALIZED_NAME_REFERRAL_REDEMPTION_COUNT = "referralRedemptionCount";
  @SerializedName(SERIALIZED_NAME_REFERRAL_REDEMPTION_COUNT)
  private Long referralRedemptionCount;

  public static final String SERIALIZED_NAME_DISCOUNT_COUNT = "discountCount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_COUNT)
  private BigDecimal discountCount;

  public static final String SERIALIZED_NAME_DISCOUNT_EFFECT_COUNT = "discountEffectCount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_EFFECT_COUNT)
  private Long discountEffectCount;

  public static final String SERIALIZED_NAME_COUPON_CREATION_COUNT = "couponCreationCount";
  @SerializedName(SERIALIZED_NAME_COUPON_CREATION_COUNT)
  private Long couponCreationCount;

  public static final String SERIALIZED_NAME_CUSTOM_EFFECT_COUNT = "customEffectCount";
  @SerializedName(SERIALIZED_NAME_CUSTOM_EFFECT_COUNT)
  private Long customEffectCount;

  public static final String SERIALIZED_NAME_REFERRAL_CREATION_COUNT = "referralCreationCount";
  @SerializedName(SERIALIZED_NAME_REFERRAL_CREATION_COUNT)
  private Long referralCreationCount;

  public static final String SERIALIZED_NAME_ADD_FREE_ITEM_EFFECT_COUNT = "addFreeItemEffectCount";
  @SerializedName(SERIALIZED_NAME_ADD_FREE_ITEM_EFFECT_COUNT)
  private Long addFreeItemEffectCount;

  public static final String SERIALIZED_NAME_AWARDED_GIVEAWAYS_COUNT = "awardedGiveawaysCount";
  @SerializedName(SERIALIZED_NAME_AWARDED_GIVEAWAYS_COUNT)
  private Long awardedGiveawaysCount;

  public static final String SERIALIZED_NAME_CREATED_LOYALTY_POINTS_COUNT = "createdLoyaltyPointsCount";
  @SerializedName(SERIALIZED_NAME_CREATED_LOYALTY_POINTS_COUNT)
  private BigDecimal createdLoyaltyPointsCount;

  public static final String SERIALIZED_NAME_CREATED_LOYALTY_POINTS_EFFECT_COUNT = "createdLoyaltyPointsEffectCount";
  @SerializedName(SERIALIZED_NAME_CREATED_LOYALTY_POINTS_EFFECT_COUNT)
  private Long createdLoyaltyPointsEffectCount;

  public static final String SERIALIZED_NAME_REDEEMED_LOYALTY_POINTS_COUNT = "redeemedLoyaltyPointsCount";
  @SerializedName(SERIALIZED_NAME_REDEEMED_LOYALTY_POINTS_COUNT)
  private BigDecimal redeemedLoyaltyPointsCount;

  public static final String SERIALIZED_NAME_REDEEMED_LOYALTY_POINTS_EFFECT_COUNT = "redeemedLoyaltyPointsEffectCount";
  @SerializedName(SERIALIZED_NAME_REDEEMED_LOYALTY_POINTS_EFFECT_COUNT)
  private Long redeemedLoyaltyPointsEffectCount;

  public static final String SERIALIZED_NAME_CALL_API_EFFECT_COUNT = "callApiEffectCount";
  @SerializedName(SERIALIZED_NAME_CALL_API_EFFECT_COUNT)
  private Long callApiEffectCount;

  public static final String SERIALIZED_NAME_RESERVECOUPON_EFFECT_COUNT = "reservecouponEffectCount";
  @SerializedName(SERIALIZED_NAME_RESERVECOUPON_EFFECT_COUNT)
  private Long reservecouponEffectCount;

  public static final String SERIALIZED_NAME_LAST_ACTIVITY = "lastActivity";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVITY)
  private OffsetDateTime lastActivity;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "templateId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Long templateId;

  /**
   * The campaign state displayed in the Campaign Manager.
   */
  @JsonAdapter(FrontendStateEnum.Adapter.class)
  public enum FrontendStateEnum {
    EXPIRED("expired"),
    
    SCHEDULED("scheduled"),
    
    RUNNING("running"),
    
    DISABLED("disabled"),
    
    ARCHIVED("archived"),
    
    STAGED("staged");

    private String value;

    FrontendStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrontendStateEnum fromValue(String value) {
      for (FrontendStateEnum b : FrontendStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FrontendStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrontendStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrontendStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FrontendStateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FRONTEND_STATE = "frontendState";
  @SerializedName(SERIALIZED_NAME_FRONTEND_STATE)
  private FrontendStateEnum frontendState;

  public static final String SERIALIZED_NAME_STORES_IMPORTED = "storesImported";
  @SerializedName(SERIALIZED_NAME_STORES_IMPORTED)
  private Boolean storesImported;

  public static final String SERIALIZED_NAME_VALUE_MAPS_IDS = "valueMapsIds";
  @SerializedName(SERIALIZED_NAME_VALUE_MAPS_IDS)
  private List<Long> valueMapsIds = null;

  /**
   * The campaign revision state displayed in the Campaign Manager.
   */
  @JsonAdapter(RevisionFrontendStateEnum.Adapter.class)
  public enum RevisionFrontendStateEnum {
    REVISED("revised"),
    
    PENDING("pending");

    private String value;

    RevisionFrontendStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RevisionFrontendStateEnum fromValue(String value) {
      for (RevisionFrontendStateEnum b : RevisionFrontendStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RevisionFrontendStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RevisionFrontendStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RevisionFrontendStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RevisionFrontendStateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REVISION_FRONTEND_STATE = "revisionFrontendState";
  @SerializedName(SERIALIZED_NAME_REVISION_FRONTEND_STATE)
  private RevisionFrontendStateEnum revisionFrontendState;

  public static final String SERIALIZED_NAME_ACTIVE_REVISION_ID = "activeRevisionId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_REVISION_ID)
  private Long activeRevisionId;

  public static final String SERIALIZED_NAME_ACTIVE_REVISION_VERSION_ID = "activeRevisionVersionId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_REVISION_VERSION_ID)
  private Long activeRevisionVersionId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Long version;

  public static final String SERIALIZED_NAME_CURRENT_REVISION_ID = "currentRevisionId";
  @SerializedName(SERIALIZED_NAME_CURRENT_REVISION_ID)
  private Long currentRevisionId;

  public static final String SERIALIZED_NAME_CURRENT_REVISION_VERSION_ID = "currentRevisionVersionId";
  @SerializedName(SERIALIZED_NAME_CURRENT_REVISION_VERSION_ID)
  private Long currentRevisionVersionId;

  public static final String SERIALIZED_NAME_STAGE_REVISION = "stageRevision";
  @SerializedName(SERIALIZED_NAME_STAGE_REVISION)
  private Boolean stageRevision = false;


  public Campaign id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(example = "4", required = true, value = "Unique ID for this entity.")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Campaign created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(example = "2020-06-10T09:05:27.993483Z", required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Campaign applicationId(Long applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of the Application that owns this entity.
   * @return applicationId
  **/
  @ApiModelProperty(example = "322", required = true, value = "The ID of the Application that owns this entity.")

  public Long getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Long applicationId) {
    this.applicationId = applicationId;
  }


  public Campaign userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user associated with this entity.
   * @return userId
  **/
  @ApiModelProperty(example = "388", required = true, value = "The ID of the user associated with this entity.")

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public Campaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A user-facing name for this campaign.
   * @return name
  **/
  @ApiModelProperty(example = "Summer promotions", required = true, value = "A user-facing name for this campaign.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Campaign description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A detailed description of the campaign.
   * @return description
  **/
  @ApiModelProperty(example = "Campaign for all summer 2021 promotions", required = true, value = "A detailed description of the campaign.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Campaign startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Timestamp when the campaign will become active.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-07-20T22:00Z", value = "Timestamp when the campaign will become active.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public Campaign endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Timestamp when the campaign will become inactive.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-22T22:00Z", value = "Timestamp when the campaign will become inactive.")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public Campaign attributes(Object attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Arbitrary properties associated with this campaign.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary properties associated with this campaign.")

  public Object getAttributes() {
    return attributes;
  }


  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  public Campaign state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * A disabled or archived campaign is not evaluated for rules or coupons. 
   * @return state
  **/
  @ApiModelProperty(example = "enabled", required = true, value = "A disabled or archived campaign is not evaluated for rules or coupons. ")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public Campaign activeRulesetId(Long activeRulesetId) {
    
    this.activeRulesetId = activeRulesetId;
    return this;
  }

   /**
   * [ID of Ruleset](https://docs.talon.one/management-api#operation/getRulesets) this campaign applies on customer session evaluation. 
   * @return activeRulesetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "[ID of Ruleset](https://docs.talon.one/management-api#operation/getRulesets) this campaign applies on customer session evaluation. ")

  public Long getActiveRulesetId() {
    return activeRulesetId;
  }


  public void setActiveRulesetId(Long activeRulesetId) {
    this.activeRulesetId = activeRulesetId;
  }


  public Campaign tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Campaign addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags for the campaign.
   * @return tags
  **/
  @ApiModelProperty(example = "[summer]", required = true, value = "A list of tags for the campaign.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Campaign features(List<FeaturesEnum> features) {
    
    this.features = features;
    return this;
  }

  public Campaign addFeaturesItem(FeaturesEnum featuresItem) {
    this.features.add(featuresItem);
    return this;
  }

   /**
   * The features enabled in this campaign.
   * @return features
  **/
  @ApiModelProperty(example = "[coupons, referrals]", required = true, value = "The features enabled in this campaign.")

  public List<FeaturesEnum> getFeatures() {
    return features;
  }


  public void setFeatures(List<FeaturesEnum> features) {
    this.features = features;
  }


  public Campaign couponSettings(CodeGeneratorSettings couponSettings) {
    
    this.couponSettings = couponSettings;
    return this;
  }

   /**
   * Get couponSettings
   * @return couponSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getCouponSettings() {
    return couponSettings;
  }


  public void setCouponSettings(CodeGeneratorSettings couponSettings) {
    this.couponSettings = couponSettings;
  }


  public Campaign referralSettings(CodeGeneratorSettings referralSettings) {
    
    this.referralSettings = referralSettings;
    return this;
  }

   /**
   * Get referralSettings
   * @return referralSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getReferralSettings() {
    return referralSettings;
  }


  public void setReferralSettings(CodeGeneratorSettings referralSettings) {
    this.referralSettings = referralSettings;
  }


  public Campaign limits(List<LimitConfig> limits) {
    
    this.limits = limits;
    return this;
  }

  public Campaign addLimitsItem(LimitConfig limitsItem) {
    this.limits.add(limitsItem);
    return this;
  }

   /**
   * The set of [budget limits](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets) for this campaign. 
   * @return limits
  **/
  @ApiModelProperty(required = true, value = "The set of [budget limits](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets) for this campaign. ")

  public List<LimitConfig> getLimits() {
    return limits;
  }


  public void setLimits(List<LimitConfig> limits) {
    this.limits = limits;
  }


  public Campaign campaignGroups(List<Long> campaignGroups) {
    
    this.campaignGroups = campaignGroups;
    return this;
  }

  public Campaign addCampaignGroupsItem(Long campaignGroupsItem) {
    if (this.campaignGroups == null) {
      this.campaignGroups = new ArrayList<Long>();
    }
    this.campaignGroups.add(campaignGroupsItem);
    return this;
  }

   /**
   * The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups) this campaign belongs to. 
   * @return campaignGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[1, 3]", value = "The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups) this campaign belongs to. ")

  public List<Long> getCampaignGroups() {
    return campaignGroups;
  }


  public void setCampaignGroups(List<Long> campaignGroups) {
    this.campaignGroups = campaignGroups;
  }


  public Campaign type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The campaign type. Possible type values:   - &#x60;cartItem&#x60;: Type of campaign that can apply effects only to cart items.   - &#x60;advanced&#x60;: Type of campaign that can apply effects to customer sessions and cart items. 
   * @return type
  **/
  @ApiModelProperty(example = "advanced", required = true, value = "The campaign type. Possible type values:   - `cartItem`: Type of campaign that can apply effects only to cart items.   - `advanced`: Type of campaign that can apply effects to customer sessions and cart items. ")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Campaign linkedStoreIds(List<Long> linkedStoreIds) {
    
    this.linkedStoreIds = linkedStoreIds;
    return this;
  }

  public Campaign addLinkedStoreIdsItem(Long linkedStoreIdsItem) {
    if (this.linkedStoreIds == null) {
      this.linkedStoreIds = new ArrayList<Long>();
    }
    this.linkedStoreIds.add(linkedStoreIdsItem);
    return this;
  }

   /**
   * A list of store IDs that you want to link to the campaign.  **Note:** Campaigns with linked store IDs will only be evaluated when there is a [customer session update](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2) that references a linked store. 
   * @return linkedStoreIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[1, 2, 3]", value = "A list of store IDs that you want to link to the campaign.  **Note:** Campaigns with linked store IDs will only be evaluated when there is a [customer session update](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2) that references a linked store. ")

  public List<Long> getLinkedStoreIds() {
    return linkedStoreIds;
  }


  public void setLinkedStoreIds(List<Long> linkedStoreIds) {
    this.linkedStoreIds = linkedStoreIds;
  }


  public Campaign budgets(List<CampaignBudget> budgets) {
    
    this.budgets = budgets;
    return this;
  }

  public Campaign addBudgetsItem(CampaignBudget budgetsItem) {
    if (this.budgets == null) {
      this.budgets = new ArrayList<CampaignBudget>();
    }
    this.budgets.add(budgetsItem);
    return this;
  }

   /**
   * A list of all the budgets that are defined by this campaign and their usage.  **Note:** Budgets that are not defined do not appear in this list and their usage is not counted until they are defined. 
   * @return budgets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of all the budgets that are defined by this campaign and their usage.  **Note:** Budgets that are not defined do not appear in this list and their usage is not counted until they are defined. ")

  public List<CampaignBudget> getBudgets() {
    return budgets;
  }


  public void setBudgets(List<CampaignBudget> budgets) {
    this.budgets = budgets;
  }


  public Campaign couponRedemptionCount(Long couponRedemptionCount) {
    
    this.couponRedemptionCount = couponRedemptionCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Number of coupons redeemed in the campaign. 
   * @return couponRedemptionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "163", value = "This property is **deprecated**. The count should be available under *budgets* property. Number of coupons redeemed in the campaign. ")

  public Long getCouponRedemptionCount() {
    return couponRedemptionCount;
  }


  public void setCouponRedemptionCount(Long couponRedemptionCount) {
    this.couponRedemptionCount = couponRedemptionCount;
  }


  public Campaign referralRedemptionCount(Long referralRedemptionCount) {
    
    this.referralRedemptionCount = referralRedemptionCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Number of referral codes redeemed in the campaign. 
   * @return referralRedemptionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "This property is **deprecated**. The count should be available under *budgets* property. Number of referral codes redeemed in the campaign. ")

  public Long getReferralRedemptionCount() {
    return referralRedemptionCount;
  }


  public void setReferralRedemptionCount(Long referralRedemptionCount) {
    this.referralRedemptionCount = referralRedemptionCount;
  }


  public Campaign discountCount(BigDecimal discountCount) {
    
    this.discountCount = discountCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total amount of discounts redeemed in the campaign. 
   * @return discountCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "288.0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total amount of discounts redeemed in the campaign. ")

  public BigDecimal getDiscountCount() {
    return discountCount;
  }


  public void setDiscountCount(BigDecimal discountCount) {
    this.discountCount = discountCount;
  }


  public Campaign discountEffectCount(Long discountEffectCount) {
    
    this.discountEffectCount = discountEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of times discounts were redeemed in this campaign. 
   * @return discountEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "343", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of times discounts were redeemed in this campaign. ")

  public Long getDiscountEffectCount() {
    return discountEffectCount;
  }


  public void setDiscountEffectCount(Long discountEffectCount) {
    this.discountEffectCount = discountEffectCount;
  }


  public Campaign couponCreationCount(Long couponCreationCount) {
    
    this.couponCreationCount = couponCreationCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of coupons created by rules in this campaign. 
   * @return couponCreationCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "16", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of coupons created by rules in this campaign. ")

  public Long getCouponCreationCount() {
    return couponCreationCount;
  }


  public void setCouponCreationCount(Long couponCreationCount) {
    this.couponCreationCount = couponCreationCount;
  }


  public Campaign customEffectCount(Long customEffectCount) {
    
    this.customEffectCount = customEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of custom effects triggered by rules in this campaign. 
   * @return customEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of custom effects triggered by rules in this campaign. ")

  public Long getCustomEffectCount() {
    return customEffectCount;
  }


  public void setCustomEffectCount(Long customEffectCount) {
    this.customEffectCount = customEffectCount;
  }


  public Campaign referralCreationCount(Long referralCreationCount) {
    
    this.referralCreationCount = referralCreationCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of referrals created by rules in this campaign. 
   * @return referralCreationCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of referrals created by rules in this campaign. ")

  public Long getReferralCreationCount() {
    return referralCreationCount;
  }


  public void setReferralCreationCount(Long referralCreationCount) {
    this.referralCreationCount = referralCreationCount;
  }


  public Campaign addFreeItemEffectCount(Long addFreeItemEffectCount) {
    
    this.addFreeItemEffectCount = addFreeItemEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of times the [add free item effect](https://docs.talon.one/docs/dev/integration-api/api-effects#addfreeitem) can be triggered in this campaign. 
   * @return addFreeItemEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of times the [add free item effect](https://docs.talon.one/docs/dev/integration-api/api-effects#addfreeitem) can be triggered in this campaign. ")

  public Long getAddFreeItemEffectCount() {
    return addFreeItemEffectCount;
  }


  public void setAddFreeItemEffectCount(Long addFreeItemEffectCount) {
    this.addFreeItemEffectCount = addFreeItemEffectCount;
  }


  public Campaign awardedGiveawaysCount(Long awardedGiveawaysCount) {
    
    this.awardedGiveawaysCount = awardedGiveawaysCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of giveaways awarded by rules in this campaign. 
   * @return awardedGiveawaysCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of giveaways awarded by rules in this campaign. ")

  public Long getAwardedGiveawaysCount() {
    return awardedGiveawaysCount;
  }


  public void setAwardedGiveawaysCount(Long awardedGiveawaysCount) {
    this.awardedGiveawaysCount = awardedGiveawaysCount;
  }


  public Campaign createdLoyaltyPointsCount(BigDecimal createdLoyaltyPointsCount) {
    
    this.createdLoyaltyPointsCount = createdLoyaltyPointsCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty points created by rules in this campaign. 
   * @return createdLoyaltyPointsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9.0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty points created by rules in this campaign. ")

  public BigDecimal getCreatedLoyaltyPointsCount() {
    return createdLoyaltyPointsCount;
  }


  public void setCreatedLoyaltyPointsCount(BigDecimal createdLoyaltyPointsCount) {
    this.createdLoyaltyPointsCount = createdLoyaltyPointsCount;
  }


  public Campaign createdLoyaltyPointsEffectCount(Long createdLoyaltyPointsEffectCount) {
    
    this.createdLoyaltyPointsEffectCount = createdLoyaltyPointsEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty point creation effects triggered by rules in this campaign. 
   * @return createdLoyaltyPointsEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty point creation effects triggered by rules in this campaign. ")

  public Long getCreatedLoyaltyPointsEffectCount() {
    return createdLoyaltyPointsEffectCount;
  }


  public void setCreatedLoyaltyPointsEffectCount(Long createdLoyaltyPointsEffectCount) {
    this.createdLoyaltyPointsEffectCount = createdLoyaltyPointsEffectCount;
  }


  public Campaign redeemedLoyaltyPointsCount(BigDecimal redeemedLoyaltyPointsCount) {
    
    this.redeemedLoyaltyPointsCount = redeemedLoyaltyPointsCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty points redeemed by rules in this campaign. 
   * @return redeemedLoyaltyPointsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8.0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty points redeemed by rules in this campaign. ")

  public BigDecimal getRedeemedLoyaltyPointsCount() {
    return redeemedLoyaltyPointsCount;
  }


  public void setRedeemedLoyaltyPointsCount(BigDecimal redeemedLoyaltyPointsCount) {
    this.redeemedLoyaltyPointsCount = redeemedLoyaltyPointsCount;
  }


  public Campaign redeemedLoyaltyPointsEffectCount(Long redeemedLoyaltyPointsEffectCount) {
    
    this.redeemedLoyaltyPointsEffectCount = redeemedLoyaltyPointsEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty point redemption effects triggered by rules in this campaign. 
   * @return redeemedLoyaltyPointsEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of loyalty point redemption effects triggered by rules in this campaign. ")

  public Long getRedeemedLoyaltyPointsEffectCount() {
    return redeemedLoyaltyPointsEffectCount;
  }


  public void setRedeemedLoyaltyPointsEffectCount(Long redeemedLoyaltyPointsEffectCount) {
    this.redeemedLoyaltyPointsEffectCount = redeemedLoyaltyPointsEffectCount;
  }


  public Campaign callApiEffectCount(Long callApiEffectCount) {
    
    this.callApiEffectCount = callApiEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of webhooks triggered by rules in this campaign. 
   * @return callApiEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of webhooks triggered by rules in this campaign. ")

  public Long getCallApiEffectCount() {
    return callApiEffectCount;
  }


  public void setCallApiEffectCount(Long callApiEffectCount) {
    this.callApiEffectCount = callApiEffectCount;
  }


  public Campaign reservecouponEffectCount(Long reservecouponEffectCount) {
    
    this.reservecouponEffectCount = reservecouponEffectCount;
    return this;
  }

   /**
   * This property is **deprecated**. The count should be available under *budgets* property. Total number of reserve coupon effects triggered by rules in this campaign. 
   * @return reservecouponEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9", value = "This property is **deprecated**. The count should be available under *budgets* property. Total number of reserve coupon effects triggered by rules in this campaign. ")

  public Long getReservecouponEffectCount() {
    return reservecouponEffectCount;
  }


  public void setReservecouponEffectCount(Long reservecouponEffectCount) {
    this.reservecouponEffectCount = reservecouponEffectCount;
  }


  public Campaign lastActivity(OffsetDateTime lastActivity) {
    
    this.lastActivity = lastActivity;
    return this;
  }

   /**
   * Timestamp of the most recent event received by this campaign.
   * @return lastActivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-11-10T23:00Z", value = "Timestamp of the most recent event received by this campaign.")

  public OffsetDateTime getLastActivity() {
    return lastActivity;
  }


  public void setLastActivity(OffsetDateTime lastActivity) {
    this.lastActivity = lastActivity;
  }


  public Campaign updated(OffsetDateTime updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Timestamp of the most recent update to the campaign&#39;s property. Updates to external entities used in this campaign are **not** registered by this property, such as collection or coupon updates. 
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of the most recent update to the campaign's property. Updates to external entities used in this campaign are **not** registered by this property, such as collection or coupon updates. ")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  public Campaign createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Name of the user who created this campaign if available.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe", value = "Name of the user who created this campaign if available.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public Campaign updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Name of the user who last updated this campaign if available.
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jane Doe", value = "Name of the user who last updated this campaign if available.")

  public String getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public Campaign templateId(Long templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * The ID of the Campaign Template this Campaign was created from.
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "The ID of the Campaign Template this Campaign was created from.")

  public Long getTemplateId() {
    return templateId;
  }


  public void setTemplateId(Long templateId) {
    this.templateId = templateId;
  }


  public Campaign frontendState(FrontendStateEnum frontendState) {
    
    this.frontendState = frontendState;
    return this;
  }

   /**
   * The campaign state displayed in the Campaign Manager.
   * @return frontendState
  **/
  @ApiModelProperty(example = "running", required = true, value = "The campaign state displayed in the Campaign Manager.")

  public FrontendStateEnum getFrontendState() {
    return frontendState;
  }


  public void setFrontendState(FrontendStateEnum frontendState) {
    this.frontendState = frontendState;
  }


  public Campaign storesImported(Boolean storesImported) {
    
    this.storesImported = storesImported;
    return this;
  }

   /**
   * Indicates whether the linked stores were imported via a CSV file.
   * @return storesImported
  **/
  @ApiModelProperty(example = "true", required = true, value = "Indicates whether the linked stores were imported via a CSV file.")

  public Boolean getStoresImported() {
    return storesImported;
  }


  public void setStoresImported(Boolean storesImported) {
    this.storesImported = storesImported;
  }


  public Campaign valueMapsIds(List<Long> valueMapsIds) {
    
    this.valueMapsIds = valueMapsIds;
    return this;
  }

  public Campaign addValueMapsIdsItem(Long valueMapsIdsItem) {
    if (this.valueMapsIds == null) {
      this.valueMapsIds = new ArrayList<Long>();
    }
    this.valueMapsIds.add(valueMapsIdsItem);
    return this;
  }

   /**
   * A list of value map IDs for the campaign.
   * @return valueMapsIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[100, 215]", value = "A list of value map IDs for the campaign.")

  public List<Long> getValueMapsIds() {
    return valueMapsIds;
  }


  public void setValueMapsIds(List<Long> valueMapsIds) {
    this.valueMapsIds = valueMapsIds;
  }


  public Campaign revisionFrontendState(RevisionFrontendStateEnum revisionFrontendState) {
    
    this.revisionFrontendState = revisionFrontendState;
    return this;
  }

   /**
   * The campaign revision state displayed in the Campaign Manager.
   * @return revisionFrontendState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "revised", value = "The campaign revision state displayed in the Campaign Manager.")

  public RevisionFrontendStateEnum getRevisionFrontendState() {
    return revisionFrontendState;
  }


  public void setRevisionFrontendState(RevisionFrontendStateEnum revisionFrontendState) {
    this.revisionFrontendState = revisionFrontendState;
  }


  public Campaign activeRevisionId(Long activeRevisionId) {
    
    this.activeRevisionId = activeRevisionId;
    return this;
  }

   /**
   * ID of the revision that was last activated on this campaign. 
   * @return activeRevisionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "ID of the revision that was last activated on this campaign. ")

  public Long getActiveRevisionId() {
    return activeRevisionId;
  }


  public void setActiveRevisionId(Long activeRevisionId) {
    this.activeRevisionId = activeRevisionId;
  }


  public Campaign activeRevisionVersionId(Long activeRevisionVersionId) {
    
    this.activeRevisionVersionId = activeRevisionVersionId;
    return this;
  }

   /**
   * ID of the revision version that is active on the campaign. 
   * @return activeRevisionVersionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "ID of the revision version that is active on the campaign. ")

  public Long getActiveRevisionVersionId() {
    return activeRevisionVersionId;
  }


  public void setActiveRevisionVersionId(Long activeRevisionVersionId) {
    this.activeRevisionVersionId = activeRevisionVersionId;
  }


  public Campaign version(Long version) {
    
    this.version = version;
    return this;
  }

   /**
   * Incrementing number representing how many revisions have been activated on this campaign, starts from 0 for a new campaign. 
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "Incrementing number representing how many revisions have been activated on this campaign, starts from 0 for a new campaign. ")

  public Long getVersion() {
    return version;
  }


  public void setVersion(Long version) {
    this.version = version;
  }


  public Campaign currentRevisionId(Long currentRevisionId) {
    
    this.currentRevisionId = currentRevisionId;
    return this;
  }

   /**
   * ID of the revision currently being modified for the campaign. 
   * @return currentRevisionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "ID of the revision currently being modified for the campaign. ")

  public Long getCurrentRevisionId() {
    return currentRevisionId;
  }


  public void setCurrentRevisionId(Long currentRevisionId) {
    this.currentRevisionId = currentRevisionId;
  }


  public Campaign currentRevisionVersionId(Long currentRevisionVersionId) {
    
    this.currentRevisionVersionId = currentRevisionVersionId;
    return this;
  }

   /**
   * ID of the latest version applied on the current revision. 
   * @return currentRevisionVersionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6", value = "ID of the latest version applied on the current revision. ")

  public Long getCurrentRevisionVersionId() {
    return currentRevisionVersionId;
  }


  public void setCurrentRevisionVersionId(Long currentRevisionVersionId) {
    this.currentRevisionVersionId = currentRevisionVersionId;
  }


  public Campaign stageRevision(Boolean stageRevision) {
    
    this.stageRevision = stageRevision;
    return this;
  }

   /**
   * Flag for determining whether we use current revision when sending requests with staging API key. 
   * @return stageRevision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Flag for determining whether we use current revision when sending requests with staging API key. ")

  public Boolean getStageRevision() {
    return stageRevision;
  }


  public void setStageRevision(Boolean stageRevision) {
    this.stageRevision = stageRevision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return Objects.equals(this.id, campaign.id) &&
        Objects.equals(this.created, campaign.created) &&
        Objects.equals(this.applicationId, campaign.applicationId) &&
        Objects.equals(this.userId, campaign.userId) &&
        Objects.equals(this.name, campaign.name) &&
        Objects.equals(this.description, campaign.description) &&
        Objects.equals(this.startTime, campaign.startTime) &&
        Objects.equals(this.endTime, campaign.endTime) &&
        Objects.equals(this.attributes, campaign.attributes) &&
        Objects.equals(this.state, campaign.state) &&
        Objects.equals(this.activeRulesetId, campaign.activeRulesetId) &&
        Objects.equals(this.tags, campaign.tags) &&
        Objects.equals(this.features, campaign.features) &&
        Objects.equals(this.couponSettings, campaign.couponSettings) &&
        Objects.equals(this.referralSettings, campaign.referralSettings) &&
        Objects.equals(this.limits, campaign.limits) &&
        Objects.equals(this.campaignGroups, campaign.campaignGroups) &&
        Objects.equals(this.type, campaign.type) &&
        Objects.equals(this.linkedStoreIds, campaign.linkedStoreIds) &&
        Objects.equals(this.budgets, campaign.budgets) &&
        Objects.equals(this.couponRedemptionCount, campaign.couponRedemptionCount) &&
        Objects.equals(this.referralRedemptionCount, campaign.referralRedemptionCount) &&
        Objects.equals(this.discountCount, campaign.discountCount) &&
        Objects.equals(this.discountEffectCount, campaign.discountEffectCount) &&
        Objects.equals(this.couponCreationCount, campaign.couponCreationCount) &&
        Objects.equals(this.customEffectCount, campaign.customEffectCount) &&
        Objects.equals(this.referralCreationCount, campaign.referralCreationCount) &&
        Objects.equals(this.addFreeItemEffectCount, campaign.addFreeItemEffectCount) &&
        Objects.equals(this.awardedGiveawaysCount, campaign.awardedGiveawaysCount) &&
        Objects.equals(this.createdLoyaltyPointsCount, campaign.createdLoyaltyPointsCount) &&
        Objects.equals(this.createdLoyaltyPointsEffectCount, campaign.createdLoyaltyPointsEffectCount) &&
        Objects.equals(this.redeemedLoyaltyPointsCount, campaign.redeemedLoyaltyPointsCount) &&
        Objects.equals(this.redeemedLoyaltyPointsEffectCount, campaign.redeemedLoyaltyPointsEffectCount) &&
        Objects.equals(this.callApiEffectCount, campaign.callApiEffectCount) &&
        Objects.equals(this.reservecouponEffectCount, campaign.reservecouponEffectCount) &&
        Objects.equals(this.lastActivity, campaign.lastActivity) &&
        Objects.equals(this.updated, campaign.updated) &&
        Objects.equals(this.createdBy, campaign.createdBy) &&
        Objects.equals(this.updatedBy, campaign.updatedBy) &&
        Objects.equals(this.templateId, campaign.templateId) &&
        Objects.equals(this.frontendState, campaign.frontendState) &&
        Objects.equals(this.storesImported, campaign.storesImported) &&
        Objects.equals(this.valueMapsIds, campaign.valueMapsIds) &&
        Objects.equals(this.revisionFrontendState, campaign.revisionFrontendState) &&
        Objects.equals(this.activeRevisionId, campaign.activeRevisionId) &&
        Objects.equals(this.activeRevisionVersionId, campaign.activeRevisionVersionId) &&
        Objects.equals(this.version, campaign.version) &&
        Objects.equals(this.currentRevisionId, campaign.currentRevisionId) &&
        Objects.equals(this.currentRevisionVersionId, campaign.currentRevisionVersionId) &&
        Objects.equals(this.stageRevision, campaign.stageRevision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, applicationId, userId, name, description, startTime, endTime, attributes, state, activeRulesetId, tags, features, couponSettings, referralSettings, limits, campaignGroups, type, linkedStoreIds, budgets, couponRedemptionCount, referralRedemptionCount, discountCount, discountEffectCount, couponCreationCount, customEffectCount, referralCreationCount, addFreeItemEffectCount, awardedGiveawaysCount, createdLoyaltyPointsCount, createdLoyaltyPointsEffectCount, redeemedLoyaltyPointsCount, redeemedLoyaltyPointsEffectCount, callApiEffectCount, reservecouponEffectCount, lastActivity, updated, createdBy, updatedBy, templateId, frontendState, storesImported, valueMapsIds, revisionFrontendState, activeRevisionId, activeRevisionVersionId, version, currentRevisionId, currentRevisionVersionId, stageRevision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    activeRulesetId: ").append(toIndentedString(activeRulesetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    couponSettings: ").append(toIndentedString(couponSettings)).append("\n");
    sb.append("    referralSettings: ").append(toIndentedString(referralSettings)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    campaignGroups: ").append(toIndentedString(campaignGroups)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    linkedStoreIds: ").append(toIndentedString(linkedStoreIds)).append("\n");
    sb.append("    budgets: ").append(toIndentedString(budgets)).append("\n");
    sb.append("    couponRedemptionCount: ").append(toIndentedString(couponRedemptionCount)).append("\n");
    sb.append("    referralRedemptionCount: ").append(toIndentedString(referralRedemptionCount)).append("\n");
    sb.append("    discountCount: ").append(toIndentedString(discountCount)).append("\n");
    sb.append("    discountEffectCount: ").append(toIndentedString(discountEffectCount)).append("\n");
    sb.append("    couponCreationCount: ").append(toIndentedString(couponCreationCount)).append("\n");
    sb.append("    customEffectCount: ").append(toIndentedString(customEffectCount)).append("\n");
    sb.append("    referralCreationCount: ").append(toIndentedString(referralCreationCount)).append("\n");
    sb.append("    addFreeItemEffectCount: ").append(toIndentedString(addFreeItemEffectCount)).append("\n");
    sb.append("    awardedGiveawaysCount: ").append(toIndentedString(awardedGiveawaysCount)).append("\n");
    sb.append("    createdLoyaltyPointsCount: ").append(toIndentedString(createdLoyaltyPointsCount)).append("\n");
    sb.append("    createdLoyaltyPointsEffectCount: ").append(toIndentedString(createdLoyaltyPointsEffectCount)).append("\n");
    sb.append("    redeemedLoyaltyPointsCount: ").append(toIndentedString(redeemedLoyaltyPointsCount)).append("\n");
    sb.append("    redeemedLoyaltyPointsEffectCount: ").append(toIndentedString(redeemedLoyaltyPointsEffectCount)).append("\n");
    sb.append("    callApiEffectCount: ").append(toIndentedString(callApiEffectCount)).append("\n");
    sb.append("    reservecouponEffectCount: ").append(toIndentedString(reservecouponEffectCount)).append("\n");
    sb.append("    lastActivity: ").append(toIndentedString(lastActivity)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    frontendState: ").append(toIndentedString(frontendState)).append("\n");
    sb.append("    storesImported: ").append(toIndentedString(storesImported)).append("\n");
    sb.append("    valueMapsIds: ").append(toIndentedString(valueMapsIds)).append("\n");
    sb.append("    revisionFrontendState: ").append(toIndentedString(revisionFrontendState)).append("\n");
    sb.append("    activeRevisionId: ").append(toIndentedString(activeRevisionId)).append("\n");
    sb.append("    activeRevisionVersionId: ").append(toIndentedString(activeRevisionVersionId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    currentRevisionId: ").append(toIndentedString(currentRevisionId)).append("\n");
    sb.append("    currentRevisionVersionId: ").append(toIndentedString(currentRevisionVersionId)).append("\n");
    sb.append("    stageRevision: ").append(toIndentedString(stageRevision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

