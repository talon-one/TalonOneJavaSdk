/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.CodeGeneratorSettings;
import one.talon.model.LimitConfig;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class Campaign {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Object attributes;

  /**
   * A disabled or archived campaign is not evaluated for rules or coupons. 
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ENABLED("enabled"),
    
    DISABLED("disabled"),
    
    ARCHIVED("archived");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state = StateEnum.ENABLED;

  public static final String SERIALIZED_NAME_ACTIVE_RULESET_ID = "activeRulesetId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_RULESET_ID)
  private Integer activeRulesetId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<String>();

  /**
   * Gets or Sets features
   */
  @JsonAdapter(FeaturesEnum.Adapter.class)
  public enum FeaturesEnum {
    COUPONS("coupons"),
    
    REFERRALS("referrals"),
    
    LOYALTY("loyalty");

    private String value;

    FeaturesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeaturesEnum fromValue(String value) {
      for (FeaturesEnum b : FeaturesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeaturesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeaturesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeaturesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<FeaturesEnum> features = new ArrayList<FeaturesEnum>();

  public static final String SERIALIZED_NAME_COUPON_SETTINGS = "couponSettings";
  @SerializedName(SERIALIZED_NAME_COUPON_SETTINGS)
  private CodeGeneratorSettings couponSettings;

  public static final String SERIALIZED_NAME_REFERRAL_SETTINGS = "referralSettings";
  @SerializedName(SERIALIZED_NAME_REFERRAL_SETTINGS)
  private CodeGeneratorSettings referralSettings;

  public static final String SERIALIZED_NAME_LIMITS = "limits";
  @SerializedName(SERIALIZED_NAME_LIMITS)
  private List<LimitConfig> limits = new ArrayList<LimitConfig>();

  public static final String SERIALIZED_NAME_CAMPAIGN_GROUPS = "campaignGroups";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_GROUPS)
  private List<Integer> campaignGroups = null;

  public static final String SERIALIZED_NAME_COUPON_REDEMPTION_COUNT = "couponRedemptionCount";
  @SerializedName(SERIALIZED_NAME_COUPON_REDEMPTION_COUNT)
  private Integer couponRedemptionCount;

  public static final String SERIALIZED_NAME_REFERRAL_REDEMPTION_COUNT = "referralRedemptionCount";
  @SerializedName(SERIALIZED_NAME_REFERRAL_REDEMPTION_COUNT)
  private Integer referralRedemptionCount;

  public static final String SERIALIZED_NAME_DISCOUNT_COUNT = "discountCount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_COUNT)
  private Integer discountCount;

  public static final String SERIALIZED_NAME_DISCOUNT_EFFECT_COUNT = "discountEffectCount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_EFFECT_COUNT)
  private Integer discountEffectCount;

  public static final String SERIALIZED_NAME_COUPON_CREATION_COUNT = "couponCreationCount";
  @SerializedName(SERIALIZED_NAME_COUPON_CREATION_COUNT)
  private Integer couponCreationCount;

  public static final String SERIALIZED_NAME_LAST_ACTIVITY = "lastActivity";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVITY)
  private OffsetDateTime lastActivity;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;


  public Campaign id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Campaign created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Campaign applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of the application that owns this entity.
   * @return applicationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application that owns this entity.")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public Campaign userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the account that owns this entity.
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account that owns this entity.")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public Campaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A friendly name for this campaign.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "A friendly name for this campaign.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Campaign description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A detailed description of the campaign.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "A detailed description of the campaign.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Campaign startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Datetime when the campaign will become active.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datetime when the campaign will become active.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public Campaign endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Datetime when the campaign will become in-active.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datetime when the campaign will become in-active.")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public Campaign attributes(Object attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Arbitrary properties associated with this campaign
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary properties associated with this campaign")

  public Object getAttributes() {
    return attributes;
  }


  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  public Campaign state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * A disabled or archived campaign is not evaluated for rules or coupons. 
   * @return state
  **/
  @ApiModelProperty(required = true, value = "A disabled or archived campaign is not evaluated for rules or coupons. ")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public Campaign activeRulesetId(Integer activeRulesetId) {
    
    this.activeRulesetId = activeRulesetId;
    return this;
  }

   /**
   * ID of Ruleset this campaign applies on customer session evaluation.
   * @return activeRulesetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of Ruleset this campaign applies on customer session evaluation.")

  public Integer getActiveRulesetId() {
    return activeRulesetId;
  }


  public void setActiveRulesetId(Integer activeRulesetId) {
    this.activeRulesetId = activeRulesetId;
  }


  public Campaign tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Campaign addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags for the campaign.
   * @return tags
  **/
  @ApiModelProperty(required = true, value = "A list of tags for the campaign.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Campaign features(List<FeaturesEnum> features) {
    
    this.features = features;
    return this;
  }

  public Campaign addFeaturesItem(FeaturesEnum featuresItem) {
    this.features.add(featuresItem);
    return this;
  }

   /**
   * A list of features for the campaign.
   * @return features
  **/
  @ApiModelProperty(required = true, value = "A list of features for the campaign.")

  public List<FeaturesEnum> getFeatures() {
    return features;
  }


  public void setFeatures(List<FeaturesEnum> features) {
    this.features = features;
  }


  public Campaign couponSettings(CodeGeneratorSettings couponSettings) {
    
    this.couponSettings = couponSettings;
    return this;
  }

   /**
   * Get couponSettings
   * @return couponSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getCouponSettings() {
    return couponSettings;
  }


  public void setCouponSettings(CodeGeneratorSettings couponSettings) {
    this.couponSettings = couponSettings;
  }


  public Campaign referralSettings(CodeGeneratorSettings referralSettings) {
    
    this.referralSettings = referralSettings;
    return this;
  }

   /**
   * Get referralSettings
   * @return referralSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getReferralSettings() {
    return referralSettings;
  }


  public void setReferralSettings(CodeGeneratorSettings referralSettings) {
    this.referralSettings = referralSettings;
  }


  public Campaign limits(List<LimitConfig> limits) {
    
    this.limits = limits;
    return this;
  }

  public Campaign addLimitsItem(LimitConfig limitsItem) {
    this.limits.add(limitsItem);
    return this;
  }

   /**
   * The set of limits that will operate for this campaign
   * @return limits
  **/
  @ApiModelProperty(required = true, value = "The set of limits that will operate for this campaign")

  public List<LimitConfig> getLimits() {
    return limits;
  }


  public void setLimits(List<LimitConfig> limits) {
    this.limits = limits;
  }


  public Campaign campaignGroups(List<Integer> campaignGroups) {
    
    this.campaignGroups = campaignGroups;
    return this;
  }

  public Campaign addCampaignGroupsItem(Integer campaignGroupsItem) {
    if (this.campaignGroups == null) {
      this.campaignGroups = new ArrayList<Integer>();
    }
    this.campaignGroups.add(campaignGroupsItem);
    return this;
  }

   /**
   * The IDs of the campaign groups that own this entity.
   * @return campaignGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the campaign groups that own this entity.")

  public List<Integer> getCampaignGroups() {
    return campaignGroups;
  }


  public void setCampaignGroups(List<Integer> campaignGroups) {
    this.campaignGroups = campaignGroups;
  }


  public Campaign couponRedemptionCount(Integer couponRedemptionCount) {
    
    this.couponRedemptionCount = couponRedemptionCount;
    return this;
  }

   /**
   * Number of coupons redeemed in the campaign.
   * @return couponRedemptionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of coupons redeemed in the campaign.")

  public Integer getCouponRedemptionCount() {
    return couponRedemptionCount;
  }


  public void setCouponRedemptionCount(Integer couponRedemptionCount) {
    this.couponRedemptionCount = couponRedemptionCount;
  }


  public Campaign referralRedemptionCount(Integer referralRedemptionCount) {
    
    this.referralRedemptionCount = referralRedemptionCount;
    return this;
  }

   /**
   * Number of referral codes redeemed in the campaign.
   * @return referralRedemptionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of referral codes redeemed in the campaign.")

  public Integer getReferralRedemptionCount() {
    return referralRedemptionCount;
  }


  public void setReferralRedemptionCount(Integer referralRedemptionCount) {
    this.referralRedemptionCount = referralRedemptionCount;
  }


  public Campaign discountCount(Integer discountCount) {
    
    this.discountCount = discountCount;
    return this;
  }

   /**
   * Total amount of discounts redeemed in the campaign.
   * @return discountCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total amount of discounts redeemed in the campaign.")

  public Integer getDiscountCount() {
    return discountCount;
  }


  public void setDiscountCount(Integer discountCount) {
    this.discountCount = discountCount;
  }


  public Campaign discountEffectCount(Integer discountEffectCount) {
    
    this.discountEffectCount = discountEffectCount;
    return this;
  }

   /**
   * Total number of times discounts were redeemed in this campaign.
   * @return discountEffectCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of times discounts were redeemed in this campaign.")

  public Integer getDiscountEffectCount() {
    return discountEffectCount;
  }


  public void setDiscountEffectCount(Integer discountEffectCount) {
    this.discountEffectCount = discountEffectCount;
  }


  public Campaign couponCreationCount(Integer couponCreationCount) {
    
    this.couponCreationCount = couponCreationCount;
    return this;
  }

   /**
   * Total number of coupons created by rules in this campaign.
   * @return couponCreationCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of coupons created by rules in this campaign.")

  public Integer getCouponCreationCount() {
    return couponCreationCount;
  }


  public void setCouponCreationCount(Integer couponCreationCount) {
    this.couponCreationCount = couponCreationCount;
  }


  public Campaign lastActivity(OffsetDateTime lastActivity) {
    
    this.lastActivity = lastActivity;
    return this;
  }

   /**
   * Timestamp of the most recent event received by this campaign.
   * @return lastActivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of the most recent event received by this campaign.")

  public OffsetDateTime getLastActivity() {
    return lastActivity;
  }


  public void setLastActivity(OffsetDateTime lastActivity) {
    this.lastActivity = lastActivity;
  }


  public Campaign updated(OffsetDateTime updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Timestamp of the most recent update to the campaign or any of its elements.
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of the most recent update to the campaign or any of its elements.")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  public Campaign createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Name of the user who created this campaign if available.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the user who created this campaign if available.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public Campaign updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Name of the user who last updated this campaign if available.
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the user who last updated this campaign if available.")

  public String getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return Objects.equals(this.id, campaign.id) &&
        Objects.equals(this.created, campaign.created) &&
        Objects.equals(this.applicationId, campaign.applicationId) &&
        Objects.equals(this.userId, campaign.userId) &&
        Objects.equals(this.name, campaign.name) &&
        Objects.equals(this.description, campaign.description) &&
        Objects.equals(this.startTime, campaign.startTime) &&
        Objects.equals(this.endTime, campaign.endTime) &&
        Objects.equals(this.attributes, campaign.attributes) &&
        Objects.equals(this.state, campaign.state) &&
        Objects.equals(this.activeRulesetId, campaign.activeRulesetId) &&
        Objects.equals(this.tags, campaign.tags) &&
        Objects.equals(this.features, campaign.features) &&
        Objects.equals(this.couponSettings, campaign.couponSettings) &&
        Objects.equals(this.referralSettings, campaign.referralSettings) &&
        Objects.equals(this.limits, campaign.limits) &&
        Objects.equals(this.campaignGroups, campaign.campaignGroups) &&
        Objects.equals(this.couponRedemptionCount, campaign.couponRedemptionCount) &&
        Objects.equals(this.referralRedemptionCount, campaign.referralRedemptionCount) &&
        Objects.equals(this.discountCount, campaign.discountCount) &&
        Objects.equals(this.discountEffectCount, campaign.discountEffectCount) &&
        Objects.equals(this.couponCreationCount, campaign.couponCreationCount) &&
        Objects.equals(this.lastActivity, campaign.lastActivity) &&
        Objects.equals(this.updated, campaign.updated) &&
        Objects.equals(this.createdBy, campaign.createdBy) &&
        Objects.equals(this.updatedBy, campaign.updatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, applicationId, userId, name, description, startTime, endTime, attributes, state, activeRulesetId, tags, features, couponSettings, referralSettings, limits, campaignGroups, couponRedemptionCount, referralRedemptionCount, discountCount, discountEffectCount, couponCreationCount, lastActivity, updated, createdBy, updatedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    activeRulesetId: ").append(toIndentedString(activeRulesetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    couponSettings: ").append(toIndentedString(couponSettings)).append("\n");
    sb.append("    referralSettings: ").append(toIndentedString(referralSettings)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    campaignGroups: ").append(toIndentedString(campaignGroups)).append("\n");
    sb.append("    couponRedemptionCount: ").append(toIndentedString(couponRedemptionCount)).append("\n");
    sb.append("    referralRedemptionCount: ").append(toIndentedString(referralRedemptionCount)).append("\n");
    sb.append("    discountCount: ").append(toIndentedString(discountCount)).append("\n");
    sb.append("    discountEffectCount: ").append(toIndentedString(discountEffectCount)).append("\n");
    sb.append("    couponCreationCount: ").append(toIndentedString(couponCreationCount)).append("\n");
    sb.append("    lastActivity: ").append(toIndentedString(lastActivity)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

