/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.FunctionDef;
import one.talon.model.SlotDef;
import one.talon.model.TemplateDef;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class Environment {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_SLOTS = "slots";
  @SerializedName(SERIALIZED_NAME_SLOTS)
  private List<SlotDef> slots = new ArrayList<SlotDef>();

  public static final String SERIALIZED_NAME_FUNCTIONS = "functions";
  @SerializedName(SERIALIZED_NAME_FUNCTIONS)
  private List<FunctionDef> functions = new ArrayList<FunctionDef>();

  public static final String SERIALIZED_NAME_TEMPLATES = "templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  private List<TemplateDef> templates = new ArrayList<TemplateDef>();

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private String variables;


  public Environment id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Environment created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Environment applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of the application that owns this entity.
   * @return applicationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application that owns this entity.")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public Environment slots(List<SlotDef> slots) {
    
    this.slots = slots;
    return this;
  }

  public Environment addSlotsItem(SlotDef slotsItem) {
    this.slots.add(slotsItem);
    return this;
  }

   /**
   * The slots defined for this application.
   * @return slots
  **/
  @ApiModelProperty(required = true, value = "The slots defined for this application.")

  public List<SlotDef> getSlots() {
    return slots;
  }


  public void setSlots(List<SlotDef> slots) {
    this.slots = slots;
  }


  public Environment functions(List<FunctionDef> functions) {
    
    this.functions = functions;
    return this;
  }

  public Environment addFunctionsItem(FunctionDef functionsItem) {
    this.functions.add(functionsItem);
    return this;
  }

   /**
   * The functions defined for this application.
   * @return functions
  **/
  @ApiModelProperty(required = true, value = "The functions defined for this application.")

  public List<FunctionDef> getFunctions() {
    return functions;
  }


  public void setFunctions(List<FunctionDef> functions) {
    this.functions = functions;
  }


  public Environment templates(List<TemplateDef> templates) {
    
    this.templates = templates;
    return this;
  }

  public Environment addTemplatesItem(TemplateDef templatesItem) {
    this.templates.add(templatesItem);
    return this;
  }

   /**
   * The templates defined for this application.
   * @return templates
  **/
  @ApiModelProperty(required = true, value = "The templates defined for this application.")

  public List<TemplateDef> getTemplates() {
    return templates;
  }


  public void setTemplates(List<TemplateDef> templates) {
    this.templates = templates;
  }


  public Environment variables(String variables) {
    
    this.variables = variables;
    return this;
  }

   /**
   * Get variables
   * @return variables
  **/
  @ApiModelProperty(required = true, value = "")

  public String getVariables() {
    return variables;
  }


  public void setVariables(String variables) {
    this.variables = variables;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Environment environment = (Environment) o;
    return Objects.equals(this.id, environment.id) &&
        Objects.equals(this.created, environment.created) &&
        Objects.equals(this.applicationId, environment.applicationId) &&
        Objects.equals(this.slots, environment.slots) &&
        Objects.equals(this.functions, environment.functions) &&
        Objects.equals(this.templates, environment.templates) &&
        Objects.equals(this.variables, environment.variables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, applicationId, slots, functions, templates, variables);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Environment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    slots: ").append(toIndentedString(slots)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

