/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * NewPriceAdjustment
 */

public class NewPriceAdjustment {
  public static final String SERIALIZED_NAME_PRICE_TYPE = "priceType";
  @SerializedName(SERIALIZED_NAME_PRICE_TYPE)
  private String priceType;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "referenceId";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private String referenceId;

  public static final String SERIALIZED_NAME_CALCULATED_AT = "calculatedAt";
  @SerializedName(SERIALIZED_NAME_CALCULATED_AT)
  private OffsetDateTime calculatedAt;

  public static final String SERIALIZED_NAME_EFFECTIVE_FROM = "effectiveFrom";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FROM)
  private OffsetDateTime effectiveFrom;

  public static final String SERIALIZED_NAME_EFFECTIVE_UNTIL = "effectiveUntil";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_UNTIL)
  private OffsetDateTime effectiveUntil;


  public NewPriceAdjustment priceType(String priceType) {
    
    this.priceType = priceType;
    return this;
  }

   /**
   * The price type (e.g. the price for members only) to apply to a given SKU.
   * @return priceType
  **/
  @ApiModelProperty(example = "member", required = true, value = "The price type (e.g. the price for members only) to apply to a given SKU.")

  public String getPriceType() {
    return priceType;
  }


  public void setPriceType(String priceType) {
    this.priceType = priceType;
  }


  public NewPriceAdjustment price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * The value of the price type applied to the SKU. When set to &#x60;null&#x60;, the defined price type no longer applies to the SKU.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100.0", value = "The value of the price type applied to the SKU. When set to `null`, the defined price type no longer applies to the SKU.")

  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public NewPriceAdjustment referenceId(String referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * A unique reference identifier, e.g. a UUID.
   * @return referenceId
  **/
  @ApiModelProperty(example = "68851723-e6fa-488f-ace9-112581e6c19b", required = true, value = "A unique reference identifier, e.g. a UUID.")

  public String getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }


  public NewPriceAdjustment calculatedAt(OffsetDateTime calculatedAt) {
    
    this.calculatedAt = calculatedAt;
    return this;
  }

   /**
   * The time at which this price was calculated. If provided, this is used to determine the most recent price adjustment to choose if price adjustments overlap. Defaults to internal creation time if not provided.
   * @return calculatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", value = "The time at which this price was calculated. If provided, this is used to determine the most recent price adjustment to choose if price adjustments overlap. Defaults to internal creation time if not provided.")

  public OffsetDateTime getCalculatedAt() {
    return calculatedAt;
  }


  public void setCalculatedAt(OffsetDateTime calculatedAt) {
    this.calculatedAt = calculatedAt;
  }


  public NewPriceAdjustment effectiveFrom(OffsetDateTime effectiveFrom) {
    
    this.effectiveFrom = effectiveFrom;
    return this;
  }

   /**
   * The date and time from which the price adjustment is effective.
   * @return effectiveFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", value = "The date and time from which the price adjustment is effective.")

  public OffsetDateTime getEffectiveFrom() {
    return effectiveFrom;
  }


  public void setEffectiveFrom(OffsetDateTime effectiveFrom) {
    this.effectiveFrom = effectiveFrom;
  }


  public NewPriceAdjustment effectiveUntil(OffsetDateTime effectiveUntil) {
    
    this.effectiveUntil = effectiveUntil;
    return this;
  }

   /**
   * The date and time until which the price adjustment is effective.
   * @return effectiveUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-09-12T10:12:42Z", value = "The date and time until which the price adjustment is effective.")

  public OffsetDateTime getEffectiveUntil() {
    return effectiveUntil;
  }


  public void setEffectiveUntil(OffsetDateTime effectiveUntil) {
    this.effectiveUntil = effectiveUntil;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewPriceAdjustment newPriceAdjustment = (NewPriceAdjustment) o;
    return Objects.equals(this.priceType, newPriceAdjustment.priceType) &&
        Objects.equals(this.price, newPriceAdjustment.price) &&
        Objects.equals(this.referenceId, newPriceAdjustment.referenceId) &&
        Objects.equals(this.calculatedAt, newPriceAdjustment.calculatedAt) &&
        Objects.equals(this.effectiveFrom, newPriceAdjustment.effectiveFrom) &&
        Objects.equals(this.effectiveUntil, newPriceAdjustment.effectiveUntil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priceType, price, referenceId, calculatedAt, effectiveFrom, effectiveUntil);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewPriceAdjustment {\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    calculatedAt: ").append(toIndentedString(calculatedAt)).append("\n");
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("    effectiveUntil: ").append(toIndentedString(effectiveUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

