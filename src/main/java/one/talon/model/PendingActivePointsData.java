/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * PendingActivePointsData
 */

public class PendingActivePointsData {
  public static final String SERIALIZED_NAME_LOYALTY_PROGRAM_I_D = "LoyaltyProgramID";
  @SerializedName(SERIALIZED_NAME_LOYALTY_PROGRAM_I_D)
  private Long loyaltyProgramID;

  public static final String SERIALIZED_NAME_SUBLEDGER_I_D = "SubledgerID";
  @SerializedName(SERIALIZED_NAME_SUBLEDGER_I_D)
  private String subledgerID = "";

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_I_D = "CustomerProfileID";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_I_D)
  private String customerProfileID;

  public static final String SERIALIZED_NAME_POINTS = "Points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private BigDecimal points;

  public static final String SERIALIZED_NAME_ACTIVE_ON = "ActiveOn";
  @SerializedName(SERIALIZED_NAME_ACTIVE_ON)
  private OffsetDateTime activeOn;

  public static final String SERIALIZED_NAME_EXPIRE_ON = "ExpireOn";
  @SerializedName(SERIALIZED_NAME_EXPIRE_ON)
  private OffsetDateTime expireOn;

  public static final String SERIALIZED_NAME_SESSION_INTEGRATION_I_D = "SessionIntegrationID";
  @SerializedName(SERIALIZED_NAME_SESSION_INTEGRATION_I_D)
  private String sessionIntegrationID;


  public PendingActivePointsData loyaltyProgramID(Long loyaltyProgramID) {
    
    this.loyaltyProgramID = loyaltyProgramID;
    return this;
  }

   /**
   * The ID of the loyalty program.
   * minimum: 1
   * @return loyaltyProgramID
  **/
  @ApiModelProperty(example = "5", required = true, value = "The ID of the loyalty program.")

  public Long getLoyaltyProgramID() {
    return loyaltyProgramID;
  }


  public void setLoyaltyProgramID(Long loyaltyProgramID) {
    this.loyaltyProgramID = loyaltyProgramID;
  }


  public PendingActivePointsData subledgerID(String subledgerID) {
    
    this.subledgerID = subledgerID;
    return this;
  }

   /**
   * The ID of the subledger, when applicable. If this field is empty, the main ledger is used.
   * @return subledgerID
  **/
  @ApiModelProperty(example = "SL001", required = true, value = "The ID of the subledger, when applicable. If this field is empty, the main ledger is used.")

  public String getSubledgerID() {
    return subledgerID;
  }


  public void setSubledgerID(String subledgerID) {
    this.subledgerID = subledgerID;
  }


  public PendingActivePointsData customerProfileID(String customerProfileID) {
    
    this.customerProfileID = customerProfileID;
    return this;
  }

   /**
   * The integration ID of the customer profile whose loyalty points are becoming active.
   * @return customerProfileID
  **/
  @ApiModelProperty(example = "URNGV8294NV", required = true, value = "The integration ID of the customer profile whose loyalty points are becoming active.")

  public String getCustomerProfileID() {
    return customerProfileID;
  }


  public void setCustomerProfileID(String customerProfileID) {
    this.customerProfileID = customerProfileID;
  }


  public PendingActivePointsData points(BigDecimal points) {
    
    this.points = points;
    return this;
  }

   /**
   * The amount of pending loyalty points becoming active.
   * @return points
  **/
  @ApiModelProperty(example = "10.99", required = true, value = "The amount of pending loyalty points becoming active.")

  public BigDecimal getPoints() {
    return points;
  }


  public void setPoints(BigDecimal points) {
    this.points = points;
  }


  public PendingActivePointsData activeOn(OffsetDateTime activeOn) {
    
    this.activeOn = activeOn;
    return this;
  }

   /**
   * The date and time the loyalty points become active.
   * @return activeOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-08-20T12:22+02:00", value = "The date and time the loyalty points become active.")

  public OffsetDateTime getActiveOn() {
    return activeOn;
  }


  public void setActiveOn(OffsetDateTime activeOn) {
    this.activeOn = activeOn;
  }


  public PendingActivePointsData expireOn(OffsetDateTime expireOn) {
    
    this.expireOn = expireOn;
    return this;
  }

   /**
   * The date and time the loyalty points expire.
   * @return expireOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-09-01T12:23+02:00", value = "The date and time the loyalty points expire.")

  public OffsetDateTime getExpireOn() {
    return expireOn;
  }


  public void setExpireOn(OffsetDateTime expireOn) {
    this.expireOn = expireOn;
  }


  public PendingActivePointsData sessionIntegrationID(String sessionIntegrationID) {
    
    this.sessionIntegrationID = sessionIntegrationID;
    return this;
  }

   /**
   * The integration ID of the session through which the points were earned.
   * @return sessionIntegrationID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cc53e4fa-547f-4f5e-8333-76e05c381f67", value = "The integration ID of the session through which the points were earned.")

  public String getSessionIntegrationID() {
    return sessionIntegrationID;
  }


  public void setSessionIntegrationID(String sessionIntegrationID) {
    this.sessionIntegrationID = sessionIntegrationID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingActivePointsData pendingActivePointsData = (PendingActivePointsData) o;
    return Objects.equals(this.loyaltyProgramID, pendingActivePointsData.loyaltyProgramID) &&
        Objects.equals(this.subledgerID, pendingActivePointsData.subledgerID) &&
        Objects.equals(this.customerProfileID, pendingActivePointsData.customerProfileID) &&
        Objects.equals(this.points, pendingActivePointsData.points) &&
        Objects.equals(this.activeOn, pendingActivePointsData.activeOn) &&
        Objects.equals(this.expireOn, pendingActivePointsData.expireOn) &&
        Objects.equals(this.sessionIntegrationID, pendingActivePointsData.sessionIntegrationID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyProgramID, subledgerID, customerProfileID, points, activeOn, expireOn, sessionIntegrationID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingActivePointsData {\n");
    sb.append("    loyaltyProgramID: ").append(toIndentedString(loyaltyProgramID)).append("\n");
    sb.append("    subledgerID: ").append(toIndentedString(subledgerID)).append("\n");
    sb.append("    customerProfileID: ").append(toIndentedString(customerProfileID)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    activeOn: ").append(toIndentedString(activeOn)).append("\n");
    sb.append("    expireOn: ").append(toIndentedString(expireOn)).append("\n");
    sb.append("    sessionIntegrationID: ").append(toIndentedString(sessionIntegrationID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

