/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * The properties specific to the \&quot;extendLoyaltyPointsExpiryDate\&quot; effect. This gets triggered when a validated rule contains the \&quot;extend expiry date\&quot; effect. The current expiry date gets extended by the time frame given in the effect. 
 */
@ApiModel(description = "The properties specific to the \"extendLoyaltyPointsExpiryDate\" effect. This gets triggered when a validated rule contains the \"extend expiry date\" effect. The current expiry date gets extended by the time frame given in the effect. ")

public class ExtendLoyaltyPointsExpiryDateEffectProps {
  public static final String SERIALIZED_NAME_PROGRAM_ID = "programId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private Integer programId;

  public static final String SERIALIZED_NAME_SUB_LEDGER_ID = "subLedgerId";
  @SerializedName(SERIALIZED_NAME_SUB_LEDGER_ID)
  private String subLedgerId;

  public static final String SERIALIZED_NAME_EXTENSION_DURATION = "extensionDuration";
  @SerializedName(SERIALIZED_NAME_EXTENSION_DURATION)
  private String extensionDuration;

  public static final String SERIALIZED_NAME_TRANSACTION_U_U_I_DS = "transactionUUIDs";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_U_U_I_DS)
  private List<String> transactionUUIDs = null;

  public static final String SERIALIZED_NAME_PREVIOUS_EXPIRATION_DATE = "previousExpirationDate";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_EXPIRATION_DATE)
  private OffsetDateTime previousExpirationDate;


  public ExtendLoyaltyPointsExpiryDateEffectProps programId(Integer programId) {
    
    this.programId = programId;
    return this;
  }

   /**
   * ID of the loyalty program that contains these points.
   * @return programId
  **/
  @ApiModelProperty(required = true, value = "ID of the loyalty program that contains these points.")

  public Integer getProgramId() {
    return programId;
  }


  public void setProgramId(Integer programId) {
    this.programId = programId;
  }


  public ExtendLoyaltyPointsExpiryDateEffectProps subLedgerId(String subLedgerId) {
    
    this.subLedgerId = subLedgerId;
    return this;
  }

   /**
   * API name of the loyalty program subledger that contains these points. added.
   * @return subLedgerId
  **/
  @ApiModelProperty(required = true, value = "API name of the loyalty program subledger that contains these points. added.")

  public String getSubLedgerId() {
    return subLedgerId;
  }


  public void setSubLedgerId(String subLedgerId) {
    this.subLedgerId = subLedgerId;
  }


  public ExtendLoyaltyPointsExpiryDateEffectProps extensionDuration(String extensionDuration) {
    
    this.extensionDuration = extensionDuration;
    return this;
  }

   /**
   * Time frame by which the expiry date extends.  The time format is either: - immediate, or - an **integer** followed by a letter indicating the time unit.  Examples: &#x60;immediate&#x60;, &#x60;30s&#x60;, &#x60;40m&#x60;, &#x60;1h&#x60;, &#x60;5D&#x60;, &#x60;7W&#x60;, &#x60;10M&#x60;, &#x60;15Y&#x60;.  Available units:  - &#x60;s&#x60;: seconds - &#x60;m&#x60;: minutes - &#x60;h&#x60;: hours - &#x60;D&#x60;: days - &#x60;W&#x60;: weeks - &#x60;M&#x60;: months - &#x60;Y&#x60;: years  You can round certain units up or down: - &#x60;_D&#x60; for rounding down days only. Signifies the start of the day. - &#x60;_U&#x60; for rounding up days, weeks, months and years. Signifies the end of the day, week, month or year. 
   * @return extensionDuration
  **/
  @ApiModelProperty(example = "12h", required = true, value = "Time frame by which the expiry date extends.  The time format is either: - immediate, or - an **integer** followed by a letter indicating the time unit.  Examples: `immediate`, `30s`, `40m`, `1h`, `5D`, `7W`, `10M`, `15Y`.  Available units:  - `s`: seconds - `m`: minutes - `h`: hours - `D`: days - `W`: weeks - `M`: months - `Y`: years  You can round certain units up or down: - `_D` for rounding down days only. Signifies the start of the day. - `_U` for rounding up days, weeks, months and years. Signifies the end of the day, week, month or year. ")

  public String getExtensionDuration() {
    return extensionDuration;
  }


  public void setExtensionDuration(String extensionDuration) {
    this.extensionDuration = extensionDuration;
  }


  public ExtendLoyaltyPointsExpiryDateEffectProps transactionUUIDs(List<String> transactionUUIDs) {
    
    this.transactionUUIDs = transactionUUIDs;
    return this;
  }

  public ExtendLoyaltyPointsExpiryDateEffectProps addTransactionUUIDsItem(String transactionUUIDsItem) {
    if (this.transactionUUIDs == null) {
      this.transactionUUIDs = new ArrayList<String>();
    }
    this.transactionUUIDs.add(transactionUUIDsItem);
    return this;
  }

   /**
   * The list of identifiers of transactions affected affected by the extension.
   * @return transactionUUIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of identifiers of transactions affected affected by the extension.")

  public List<String> getTransactionUUIDs() {
    return transactionUUIDs;
  }


  public void setTransactionUUIDs(List<String> transactionUUIDs) {
    this.transactionUUIDs = transactionUUIDs;
  }


  public ExtendLoyaltyPointsExpiryDateEffectProps previousExpirationDate(OffsetDateTime previousExpirationDate) {
    
    this.previousExpirationDate = previousExpirationDate;
    return this;
  }

   /**
   * Expiry date before applying the extension.
   * @return previousExpirationDate
  **/
  @ApiModelProperty(required = true, value = "Expiry date before applying the extension.")

  public OffsetDateTime getPreviousExpirationDate() {
    return previousExpirationDate;
  }


  public void setPreviousExpirationDate(OffsetDateTime previousExpirationDate) {
    this.previousExpirationDate = previousExpirationDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendLoyaltyPointsExpiryDateEffectProps extendLoyaltyPointsExpiryDateEffectProps = (ExtendLoyaltyPointsExpiryDateEffectProps) o;
    return Objects.equals(this.programId, extendLoyaltyPointsExpiryDateEffectProps.programId) &&
        Objects.equals(this.subLedgerId, extendLoyaltyPointsExpiryDateEffectProps.subLedgerId) &&
        Objects.equals(this.extensionDuration, extendLoyaltyPointsExpiryDateEffectProps.extensionDuration) &&
        Objects.equals(this.transactionUUIDs, extendLoyaltyPointsExpiryDateEffectProps.transactionUUIDs) &&
        Objects.equals(this.previousExpirationDate, extendLoyaltyPointsExpiryDateEffectProps.previousExpirationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(programId, subLedgerId, extensionDuration, transactionUUIDs, previousExpirationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendLoyaltyPointsExpiryDateEffectProps {\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    subLedgerId: ").append(toIndentedString(subLedgerId)).append("\n");
    sb.append("    extensionDuration: ").append(toIndentedString(extensionDuration)).append("\n");
    sb.append("    transactionUUIDs: ").append(toIndentedString(transactionUUIDs)).append("\n");
    sb.append("    previousExpirationDate: ").append(toIndentedString(previousExpirationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

