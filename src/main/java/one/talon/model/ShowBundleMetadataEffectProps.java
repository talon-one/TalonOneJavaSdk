/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * The properties specific to the \&quot;ShowBundleMetadata\&quot; effect. This effect contains information that allows you to associate the discounts from a rule in a bundle campaign with specific cart items. This way you can distinguish from \&quot;normal\&quot; discounts that were not the result of a product bundle.
 */
@ApiModel(description = "The properties specific to the \"ShowBundleMetadata\" effect. This effect contains information that allows you to associate the discounts from a rule in a bundle campaign with specific cart items. This way you can distinguish from \"normal\" discounts that were not the result of a product bundle.")

public class ShowBundleMetadataEffectProps {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BUNDLE_ATTRIBUTES = "bundleAttributes";
  @SerializedName(SERIALIZED_NAME_BUNDLE_ATTRIBUTES)
  private List<String> bundleAttributes = new ArrayList<String>();

  public static final String SERIALIZED_NAME_ITEMS_INDICES = "itemsIndices";
  @SerializedName(SERIALIZED_NAME_ITEMS_INDICES)
  private List<BigDecimal> itemsIndices = new ArrayList<BigDecimal>();


  public ShowBundleMetadataEffectProps description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the product bundle
   * @return description
  **/
  @ApiModelProperty(required = true, value = "Description of the product bundle")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ShowBundleMetadataEffectProps bundleAttributes(List<String> bundleAttributes) {
    
    this.bundleAttributes = bundleAttributes;
    return this;
  }

  public ShowBundleMetadataEffectProps addBundleAttributesItem(String bundleAttributesItem) {
    this.bundleAttributes.add(bundleAttributesItem);
    return this;
  }

   /**
   * The cart item attributes that determined which items are being bundled together
   * @return bundleAttributes
  **/
  @ApiModelProperty(required = true, value = "The cart item attributes that determined which items are being bundled together")

  public List<String> getBundleAttributes() {
    return bundleAttributes;
  }


  public void setBundleAttributes(List<String> bundleAttributes) {
    this.bundleAttributes = bundleAttributes;
  }


  public ShowBundleMetadataEffectProps itemsIndices(List<BigDecimal> itemsIndices) {
    
    this.itemsIndices = itemsIndices;
    return this;
  }

  public ShowBundleMetadataEffectProps addItemsIndicesItem(BigDecimal itemsIndicesItem) {
    this.itemsIndices.add(itemsIndicesItem);
    return this;
  }

   /**
   * The indices in the cart items array of the bundled items
   * @return itemsIndices
  **/
  @ApiModelProperty(required = true, value = "The indices in the cart items array of the bundled items")

  public List<BigDecimal> getItemsIndices() {
    return itemsIndices;
  }


  public void setItemsIndices(List<BigDecimal> itemsIndices) {
    this.itemsIndices = itemsIndices;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShowBundleMetadataEffectProps showBundleMetadataEffectProps = (ShowBundleMetadataEffectProps) o;
    return Objects.equals(this.description, showBundleMetadataEffectProps.description) &&
        Objects.equals(this.bundleAttributes, showBundleMetadataEffectProps.bundleAttributes) &&
        Objects.equals(this.itemsIndices, showBundleMetadataEffectProps.itemsIndices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, bundleAttributes, itemsIndices);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShowBundleMetadataEffectProps {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bundleAttributes: ").append(toIndentedString(bundleAttributes)).append("\n");
    sb.append("    itemsIndices: ").append(toIndentedString(itemsIndices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

