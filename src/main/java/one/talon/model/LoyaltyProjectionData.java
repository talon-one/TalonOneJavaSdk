/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * LoyaltyProjectionData
 */

public class LoyaltyProjectionData {
  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_EXPIRING_POINTS = "expiringPoints";
  @SerializedName(SERIALIZED_NAME_EXPIRING_POINTS)
  private BigDecimal expiringPoints;

  public static final String SERIALIZED_NAME_ACTIVATING_POINTS = "activatingPoints";
  @SerializedName(SERIALIZED_NAME_ACTIVATING_POINTS)
  private BigDecimal activatingPoints;

  public static final String SERIALIZED_NAME_PROJECTED_BALANCE = "projectedBalance";
  @SerializedName(SERIALIZED_NAME_PROJECTED_BALANCE)
  private BigDecimal projectedBalance;


  public LoyaltyProjectionData date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Specific date of projection.
   * @return date
  **/
  @ApiModelProperty(required = true, value = "Specific date of projection.")

  public OffsetDateTime getDate() {
    return date;
  }


  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public LoyaltyProjectionData expiringPoints(BigDecimal expiringPoints) {
    
    this.expiringPoints = expiringPoints;
    return this;
  }

   /**
   * Points that will be expired by the specified date.
   * @return expiringPoints
  **/
  @ApiModelProperty(example = "14.0", required = true, value = "Points that will be expired by the specified date.")

  public BigDecimal getExpiringPoints() {
    return expiringPoints;
  }


  public void setExpiringPoints(BigDecimal expiringPoints) {
    this.expiringPoints = expiringPoints;
  }


  public LoyaltyProjectionData activatingPoints(BigDecimal activatingPoints) {
    
    this.activatingPoints = activatingPoints;
    return this;
  }

   /**
   * Points that will be active by the specified date.
   * @return activatingPoints
  **/
  @ApiModelProperty(example = "25.0", required = true, value = "Points that will be active by the specified date.")

  public BigDecimal getActivatingPoints() {
    return activatingPoints;
  }


  public void setActivatingPoints(BigDecimal activatingPoints) {
    this.activatingPoints = activatingPoints;
  }


  public LoyaltyProjectionData projectedBalance(BigDecimal projectedBalance) {
    
    this.projectedBalance = projectedBalance;
    return this;
  }

   /**
   * Current balance plus projected active points, minus expiring points.
   * @return projectedBalance
  **/
  @ApiModelProperty(example = "57.0", required = true, value = "Current balance plus projected active points, minus expiring points.")

  public BigDecimal getProjectedBalance() {
    return projectedBalance;
  }


  public void setProjectedBalance(BigDecimal projectedBalance) {
    this.projectedBalance = projectedBalance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProjectionData loyaltyProjectionData = (LoyaltyProjectionData) o;
    return Objects.equals(this.date, loyaltyProjectionData.date) &&
        Objects.equals(this.expiringPoints, loyaltyProjectionData.expiringPoints) &&
        Objects.equals(this.activatingPoints, loyaltyProjectionData.activatingPoints) &&
        Objects.equals(this.projectedBalance, loyaltyProjectionData.projectedBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, expiringPoints, activatingPoints, projectedBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProjectionData {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    expiringPoints: ").append(toIndentedString(expiringPoints)).append("\n");
    sb.append("    activatingPoints: ").append(toIndentedString(activatingPoints)).append("\n");
    sb.append("    projectedBalance: ").append(toIndentedString(projectedBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

