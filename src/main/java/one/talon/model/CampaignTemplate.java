/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.CampaignTemplateCollection;
import one.talon.model.CampaignTemplateParams;
import one.talon.model.CodeGeneratorSettings;
import one.talon.model.TemplateLimitConfig;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class CampaignTemplate {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Integer accountId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INSTRUCTIONS = "instructions";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS)
  private String instructions;

  public static final String SERIALIZED_NAME_CAMPAIGN_ATTRIBUTES = "campaignAttributes";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ATTRIBUTES)
  private Object campaignAttributes;

  public static final String SERIALIZED_NAME_COUPON_ATTRIBUTES = "couponAttributes";
  @SerializedName(SERIALIZED_NAME_COUPON_ATTRIBUTES)
  private Object couponAttributes;

  /**
   * Only Campaign Templates in &#39;available&#39; state may be used to create Campaigns.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    DRAFT("draft"),
    
    ENABLED("enabled"),
    
    DISABLED("disabled");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_ACTIVE_RULESET_ID = "activeRulesetId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_RULESET_ID)
  private Integer activeRulesetId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  /**
   * Gets or Sets features
   */
  @JsonAdapter(FeaturesEnum.Adapter.class)
  public enum FeaturesEnum {
    COUPONS("coupons"),
    
    REFERRALS("referrals"),
    
    LOYALTY("loyalty"),
    
    GIVEAWAYS("giveaways");

    private String value;

    FeaturesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeaturesEnum fromValue(String value) {
      for (FeaturesEnum b : FeaturesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeaturesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeaturesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeaturesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<FeaturesEnum> features = null;

  public static final String SERIALIZED_NAME_COUPON_SETTINGS = "couponSettings";
  @SerializedName(SERIALIZED_NAME_COUPON_SETTINGS)
  private CodeGeneratorSettings couponSettings;

  public static final String SERIALIZED_NAME_REFERRAL_SETTINGS = "referralSettings";
  @SerializedName(SERIALIZED_NAME_REFERRAL_SETTINGS)
  private CodeGeneratorSettings referralSettings;

  public static final String SERIALIZED_NAME_LIMITS = "limits";
  @SerializedName(SERIALIZED_NAME_LIMITS)
  private List<TemplateLimitConfig> limits = null;

  public static final String SERIALIZED_NAME_TEMPLATE_PARAMS = "templateParams";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_PARAMS)
  private List<CampaignTemplateParams> templateParams = null;

  public static final String SERIALIZED_NAME_APPLICATIONS_IDS = "applicationsIds";
  @SerializedName(SERIALIZED_NAME_APPLICATIONS_IDS)
  private List<Integer> applicationsIds = new ArrayList<Integer>();

  public static final String SERIALIZED_NAME_CAMPAIGN_COLLECTIONS = "campaignCollections";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_COLLECTIONS)
  private List<CampaignTemplateCollection> campaignCollections = null;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private OffsetDateTime updated;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;

  public static final String SERIALIZED_NAME_VALID_APPLICATION_IDS = "validApplicationIds";
  @SerializedName(SERIALIZED_NAME_VALID_APPLICATION_IDS)
  private List<Integer> validApplicationIds = new ArrayList<Integer>();


  public CampaignTemplate id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(example = "6", required = true, value = "Unique ID for this entity.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public CampaignTemplate created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(example = "2020-06-10T09:05:27.993483Z", required = true, value = "The exact moment this entity was created.")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public CampaignTemplate accountId(Integer accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account that owns this entity.
   * @return accountId
  **/
  @ApiModelProperty(example = "3886", required = true, value = "The ID of the account that owns this entity.")

  public Integer getAccountId() {
    return accountId;
  }


  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }


  public CampaignTemplate userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the account that owns this entity.
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account that owns this entity.")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public CampaignTemplate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The campaign template name.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The campaign template name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CampaignTemplate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Customer-facing text that explains the objective of the template.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "Customer-facing text that explains the objective of the template.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CampaignTemplate instructions(String instructions) {
    
    this.instructions = instructions;
    return this;
  }

   /**
   * Customer-facing text that explains how to use the template. For example, you can use this property to explain the available attributes of this template, and how they can be modified when a user uses this template to create a new campaign.
   * @return instructions
  **/
  @ApiModelProperty(required = true, value = "Customer-facing text that explains how to use the template. For example, you can use this property to explain the available attributes of this template, and how they can be modified when a user uses this template to create a new campaign.")

  public String getInstructions() {
    return instructions;
  }


  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }


  public CampaignTemplate campaignAttributes(Object campaignAttributes) {
    
    this.campaignAttributes = campaignAttributes;
    return this;
  }

   /**
   * The Campaign Attributes that Campaigns created from this template will have by default.
   * @return campaignAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Campaign Attributes that Campaigns created from this template will have by default.")

  public Object getCampaignAttributes() {
    return campaignAttributes;
  }


  public void setCampaignAttributes(Object campaignAttributes) {
    this.campaignAttributes = campaignAttributes;
  }


  public CampaignTemplate couponAttributes(Object couponAttributes) {
    
    this.couponAttributes = couponAttributes;
    return this;
  }

   /**
   * The Campaign Attributes that Coupons created from this template will have by default.
   * @return couponAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Campaign Attributes that Coupons created from this template will have by default.")

  public Object getCouponAttributes() {
    return couponAttributes;
  }


  public void setCouponAttributes(Object couponAttributes) {
    this.couponAttributes = couponAttributes;
  }


  public CampaignTemplate state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Only Campaign Templates in &#39;available&#39; state may be used to create Campaigns.
   * @return state
  **/
  @ApiModelProperty(required = true, value = "Only Campaign Templates in 'available' state may be used to create Campaigns.")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public CampaignTemplate activeRulesetId(Integer activeRulesetId) {
    
    this.activeRulesetId = activeRulesetId;
    return this;
  }

   /**
   * The ID of the Ruleset this Campaign Template will use.
   * @return activeRulesetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Ruleset this Campaign Template will use.")

  public Integer getActiveRulesetId() {
    return activeRulesetId;
  }


  public void setActiveRulesetId(Integer activeRulesetId) {
    this.activeRulesetId = activeRulesetId;
  }


  public CampaignTemplate tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CampaignTemplate addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags for the campaign template.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of tags for the campaign template.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CampaignTemplate features(List<FeaturesEnum> features) {
    
    this.features = features;
    return this;
  }

  public CampaignTemplate addFeaturesItem(FeaturesEnum featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<FeaturesEnum>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * A list of features for the campaign template.
   * @return features
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of features for the campaign template.")

  public List<FeaturesEnum> getFeatures() {
    return features;
  }


  public void setFeatures(List<FeaturesEnum> features) {
    this.features = features;
  }


  public CampaignTemplate couponSettings(CodeGeneratorSettings couponSettings) {
    
    this.couponSettings = couponSettings;
    return this;
  }

   /**
   * Get couponSettings
   * @return couponSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getCouponSettings() {
    return couponSettings;
  }


  public void setCouponSettings(CodeGeneratorSettings couponSettings) {
    this.couponSettings = couponSettings;
  }


  public CampaignTemplate referralSettings(CodeGeneratorSettings referralSettings) {
    
    this.referralSettings = referralSettings;
    return this;
  }

   /**
   * Get referralSettings
   * @return referralSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CodeGeneratorSettings getReferralSettings() {
    return referralSettings;
  }


  public void setReferralSettings(CodeGeneratorSettings referralSettings) {
    this.referralSettings = referralSettings;
  }


  public CampaignTemplate limits(List<TemplateLimitConfig> limits) {
    
    this.limits = limits;
    return this;
  }

  public CampaignTemplate addLimitsItem(TemplateLimitConfig limitsItem) {
    if (this.limits == null) {
      this.limits = new ArrayList<TemplateLimitConfig>();
    }
    this.limits.add(limitsItem);
    return this;
  }

   /**
   * The set of limits that will operate for this campaign template
   * @return limits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of limits that will operate for this campaign template")

  public List<TemplateLimitConfig> getLimits() {
    return limits;
  }


  public void setLimits(List<TemplateLimitConfig> limits) {
    this.limits = limits;
  }


  public CampaignTemplate templateParams(List<CampaignTemplateParams> templateParams) {
    
    this.templateParams = templateParams;
    return this;
  }

  public CampaignTemplate addTemplateParamsItem(CampaignTemplateParams templateParamsItem) {
    if (this.templateParams == null) {
      this.templateParams = new ArrayList<CampaignTemplateParams>();
    }
    this.templateParams.add(templateParamsItem);
    return this;
  }

   /**
   * Template parameters are fields which can be used to replace values in a rule.
   * @return templateParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Template parameters are fields which can be used to replace values in a rule.")

  public List<CampaignTemplateParams> getTemplateParams() {
    return templateParams;
  }


  public void setTemplateParams(List<CampaignTemplateParams> templateParams) {
    this.templateParams = templateParams;
  }


  public CampaignTemplate applicationsIds(List<Integer> applicationsIds) {
    
    this.applicationsIds = applicationsIds;
    return this;
  }

  public CampaignTemplate addApplicationsIdsItem(Integer applicationsIdsItem) {
    this.applicationsIds.add(applicationsIdsItem);
    return this;
  }

   /**
   * A list of the IDs of the applications that are subscribed to this campaign template A list of the IDs of the applications that are subscribed to this campaign template
   * @return applicationsIds
  **/
  @ApiModelProperty(required = true, value = "A list of the IDs of the applications that are subscribed to this campaign template A list of the IDs of the applications that are subscribed to this campaign template")

  public List<Integer> getApplicationsIds() {
    return applicationsIds;
  }


  public void setApplicationsIds(List<Integer> applicationsIds) {
    this.applicationsIds = applicationsIds;
  }


  public CampaignTemplate campaignCollections(List<CampaignTemplateCollection> campaignCollections) {
    
    this.campaignCollections = campaignCollections;
    return this;
  }

  public CampaignTemplate addCampaignCollectionsItem(CampaignTemplateCollection campaignCollectionsItem) {
    if (this.campaignCollections == null) {
      this.campaignCollections = new ArrayList<CampaignTemplateCollection>();
    }
    this.campaignCollections.add(campaignCollectionsItem);
    return this;
  }

   /**
   * The campaign collections from the blueprint campaign for the template.
   * @return campaignCollections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The campaign collections from the blueprint campaign for the template.")

  public List<CampaignTemplateCollection> getCampaignCollections() {
    return campaignCollections;
  }


  public void setCampaignCollections(List<CampaignTemplateCollection> campaignCollections) {
    this.campaignCollections = campaignCollections;
  }


  public CampaignTemplate updated(OffsetDateTime updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Timestamp of the most recent update to the campaign template or any of its elements.
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of the most recent update to the campaign template or any of its elements.")

  public OffsetDateTime getUpdated() {
    return updated;
  }


  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  public CampaignTemplate updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Name of the user who last updated this campaign template if available.
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the user who last updated this campaign template if available.")

  public String getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public CampaignTemplate validApplicationIds(List<Integer> validApplicationIds) {
    
    this.validApplicationIds = validApplicationIds;
    return this;
  }

  public CampaignTemplate addValidApplicationIdsItem(Integer validApplicationIdsItem) {
    this.validApplicationIds.add(validApplicationIdsItem);
    return this;
  }

   /**
   * The IDs of the applications that are related to this entity.
   * @return validApplicationIds
  **/
  @ApiModelProperty(required = true, value = "The IDs of the applications that are related to this entity.")

  public List<Integer> getValidApplicationIds() {
    return validApplicationIds;
  }


  public void setValidApplicationIds(List<Integer> validApplicationIds) {
    this.validApplicationIds = validApplicationIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignTemplate campaignTemplate = (CampaignTemplate) o;
    return Objects.equals(this.id, campaignTemplate.id) &&
        Objects.equals(this.created, campaignTemplate.created) &&
        Objects.equals(this.accountId, campaignTemplate.accountId) &&
        Objects.equals(this.userId, campaignTemplate.userId) &&
        Objects.equals(this.name, campaignTemplate.name) &&
        Objects.equals(this.description, campaignTemplate.description) &&
        Objects.equals(this.instructions, campaignTemplate.instructions) &&
        Objects.equals(this.campaignAttributes, campaignTemplate.campaignAttributes) &&
        Objects.equals(this.couponAttributes, campaignTemplate.couponAttributes) &&
        Objects.equals(this.state, campaignTemplate.state) &&
        Objects.equals(this.activeRulesetId, campaignTemplate.activeRulesetId) &&
        Objects.equals(this.tags, campaignTemplate.tags) &&
        Objects.equals(this.features, campaignTemplate.features) &&
        Objects.equals(this.couponSettings, campaignTemplate.couponSettings) &&
        Objects.equals(this.referralSettings, campaignTemplate.referralSettings) &&
        Objects.equals(this.limits, campaignTemplate.limits) &&
        Objects.equals(this.templateParams, campaignTemplate.templateParams) &&
        Objects.equals(this.applicationsIds, campaignTemplate.applicationsIds) &&
        Objects.equals(this.campaignCollections, campaignTemplate.campaignCollections) &&
        Objects.equals(this.updated, campaignTemplate.updated) &&
        Objects.equals(this.updatedBy, campaignTemplate.updatedBy) &&
        Objects.equals(this.validApplicationIds, campaignTemplate.validApplicationIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, accountId, userId, name, description, instructions, campaignAttributes, couponAttributes, state, activeRulesetId, tags, features, couponSettings, referralSettings, limits, templateParams, applicationsIds, campaignCollections, updated, updatedBy, validApplicationIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignTemplate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    campaignAttributes: ").append(toIndentedString(campaignAttributes)).append("\n");
    sb.append("    couponAttributes: ").append(toIndentedString(couponAttributes)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    activeRulesetId: ").append(toIndentedString(activeRulesetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    couponSettings: ").append(toIndentedString(couponSettings)).append("\n");
    sb.append("    referralSettings: ").append(toIndentedString(referralSettings)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    templateParams: ").append(toIndentedString(templateParams)).append("\n");
    sb.append("    applicationsIds: ").append(toIndentedString(applicationsIds)).append("\n");
    sb.append("    campaignCollections: ").append(toIndentedString(campaignCollections)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    validApplicationIds: ").append(toIndentedString(validApplicationIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

