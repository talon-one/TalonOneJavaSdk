/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.ExpiringCouponsNotificationTrigger;

/**
 * ExpiringCouponsNotificationPolicy
 */

public class ExpiringCouponsNotificationPolicy {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRIGGERS = "triggers";
  @SerializedName(SERIALIZED_NAME_TRIGGERS)
  private List<ExpiringCouponsNotificationTrigger> triggers = new ArrayList<ExpiringCouponsNotificationTrigger>();

  public static final String SERIALIZED_NAME_BATCHING_ENABLED = "batchingEnabled";
  @SerializedName(SERIALIZED_NAME_BATCHING_ENABLED)
  private Boolean batchingEnabled = true;


  public ExpiringCouponsNotificationPolicy name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Notification name.
   * @return name
  **/
  @ApiModelProperty(example = "Notification to Google", required = true, value = "Notification name.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ExpiringCouponsNotificationPolicy triggers(List<ExpiringCouponsNotificationTrigger> triggers) {
    
    this.triggers = triggers;
    return this;
  }

  public ExpiringCouponsNotificationPolicy addTriggersItem(ExpiringCouponsNotificationTrigger triggersItem) {
    this.triggers.add(triggersItem);
    return this;
  }

   /**
   * Get triggers
   * @return triggers
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ExpiringCouponsNotificationTrigger> getTriggers() {
    return triggers;
  }


  public void setTriggers(List<ExpiringCouponsNotificationTrigger> triggers) {
    this.triggers = triggers;
  }


  public ExpiringCouponsNotificationPolicy batchingEnabled(Boolean batchingEnabled) {
    
    this.batchingEnabled = batchingEnabled;
    return this;
  }

   /**
   * Indicates whether batching is activated.
   * @return batchingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether batching is activated.")

  public Boolean getBatchingEnabled() {
    return batchingEnabled;
  }


  public void setBatchingEnabled(Boolean batchingEnabled) {
    this.batchingEnabled = batchingEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpiringCouponsNotificationPolicy expiringCouponsNotificationPolicy = (ExpiringCouponsNotificationPolicy) o;
    return Objects.equals(this.name, expiringCouponsNotificationPolicy.name) &&
        Objects.equals(this.triggers, expiringCouponsNotificationPolicy.triggers) &&
        Objects.equals(this.batchingEnabled, expiringCouponsNotificationPolicy.batchingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, triggers, batchingEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpiringCouponsNotificationPolicy {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    batchingEnabled: ").append(toIndentedString(batchingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

