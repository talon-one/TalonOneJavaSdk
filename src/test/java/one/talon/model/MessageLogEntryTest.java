/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import one.talon.model.MessageLogRequest;
import one.talon.model.MessageLogResponse;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MessageLogEntry
 */
public class MessageLogEntryTest {
    private final MessageLogEntry model = new MessageLogEntry();

    /**
     * Model tests for MessageLogEntry
     */
    @Test
    public void testMessageLogEntry() {
        // TODO: test MessageLogEntry
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'changeType'
     */
    @Test
    public void changeTypeTest() {
        // TODO: test changeType
    }

    /**
     * Test the property 'notificationId'
     */
    @Test
    public void notificationIdTest() {
        // TODO: test notificationId
    }

    /**
     * Test the property 'notificationName'
     */
    @Test
    public void notificationNameTest() {
        // TODO: test notificationName
    }

    /**
     * Test the property 'request'
     */
    @Test
    public void requestTest() {
        // TODO: test request
    }

    /**
     * Test the property 'response'
     */
    @Test
    public void responseTest() {
        // TODO: test response
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'loyaltyProgramId'
     */
    @Test
    public void loyaltyProgramIdTest() {
        // TODO: test loyaltyProgramId
    }

}
