/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.Campaign;
import one.talon.model.Coupon;
import one.talon.model.CustomerProfile;
import one.talon.model.CustomerSessionV2;
import one.talon.model.Effect;
import one.talon.model.Event;
import one.talon.model.Giveaway;
import one.talon.model.InventoryReferral;
import one.talon.model.Loyalty;
import one.talon.model.ModelReturn;
import one.talon.model.Referral;
import one.talon.model.RuleFailureReason;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IntegrationStateV2
 */
public class IntegrationStateV2Test {
    private final IntegrationStateV2 model = new IntegrationStateV2();

    /**
     * Model tests for IntegrationStateV2
     */
    @Test
    public void testIntegrationStateV2() {
        // TODO: test IntegrationStateV2
    }

    /**
     * Test the property 'customerSession'
     */
    @Test
    public void customerSessionTest() {
        // TODO: test customerSession
    }

    /**
     * Test the property 'customerProfile'
     */
    @Test
    public void customerProfileTest() {
        // TODO: test customerProfile
    }

    /**
     * Test the property 'event'
     */
    @Test
    public void eventTest() {
        // TODO: test event
    }

    /**
     * Test the property 'loyalty'
     */
    @Test
    public void loyaltyTest() {
        // TODO: test loyalty
    }

    /**
     * Test the property 'referral'
     */
    @Test
    public void referralTest() {
        // TODO: test referral
    }

    /**
     * Test the property 'coupons'
     */
    @Test
    public void couponsTest() {
        // TODO: test coupons
    }

    /**
     * Test the property 'triggeredCampaigns'
     */
    @Test
    public void triggeredCampaignsTest() {
        // TODO: test triggeredCampaigns
    }

    /**
     * Test the property 'effects'
     */
    @Test
    public void effectsTest() {
        // TODO: test effects
    }

    /**
     * Test the property 'ruleFailureReasons'
     */
    @Test
    public void ruleFailureReasonsTest() {
        // TODO: test ruleFailureReasons
    }

    /**
     * Test the property 'createdCoupons'
     */
    @Test
    public void createdCouponsTest() {
        // TODO: test createdCoupons
    }

    /**
     * Test the property 'createdReferrals'
     */
    @Test
    public void createdReferralsTest() {
        // TODO: test createdReferrals
    }

    /**
     * Test the property 'awardedGiveaways'
     */
    @Test
    public void awardedGiveawaysTest() {
        // TODO: test awardedGiveaways
    }

    /**
     * Test the property '_return'
     */
    @Test
    public void _returnTest() {
        // TODO: test _return
    }

    /**
     * Test the property 'previousReturns'
     */
    @Test
    public void previousReturnsTest() {
        // TODO: test previousReturns
    }

}
