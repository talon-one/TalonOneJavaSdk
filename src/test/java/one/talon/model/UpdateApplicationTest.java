/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import one.talon.model.AttributesSettings;
import one.talon.model.LimitConfig;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UpdateApplication
 */
public class UpdateApplicationTest {
    private final UpdateApplication model = new UpdateApplication();

    /**
     * Model tests for UpdateApplication
     */
    @Test
    public void testUpdateApplication() {
        // TODO: test UpdateApplication
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'caseSensitivity'
     */
    @Test
    public void caseSensitivityTest() {
        // TODO: test caseSensitivity
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'limits'
     */
    @Test
    public void limitsTest() {
        // TODO: test limits
    }

    /**
     * Test the property 'campaignPriority'
     */
    @Test
    public void campaignPriorityTest() {
        // TODO: test campaignPriority
    }

    /**
     * Test the property 'exclusiveCampaignsStrategy'
     */
    @Test
    public void exclusiveCampaignsStrategyTest() {
        // TODO: test exclusiveCampaignsStrategy
    }

    /**
     * Test the property 'enableCascadingDiscounts'
     */
    @Test
    public void enableCascadingDiscountsTest() {
        // TODO: test enableCascadingDiscounts
    }

    /**
     * Test the property 'enableFlattenedCartItems'
     */
    @Test
    public void enableFlattenedCartItemsTest() {
        // TODO: test enableFlattenedCartItems
    }

    /**
     * Test the property 'attributesSettings'
     */
    @Test
    public void attributesSettingsTest() {
        // TODO: test attributesSettings
    }

    /**
     * Test the property 'sandbox'
     */
    @Test
    public void sandboxTest() {
        // TODO: test sandbox
    }

}
