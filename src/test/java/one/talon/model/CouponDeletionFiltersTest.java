/*
 * Talon.One API
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package one.talon.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CouponDeletionFilters
 */
public class CouponDeletionFiltersTest {
    private final CouponDeletionFilters model = new CouponDeletionFilters();

    /**
     * Model tests for CouponDeletionFilters
     */
    @Test
    public void testCouponDeletionFilters() {
        // TODO: test CouponDeletionFilters
    }

    /**
     * Test the property 'createdBefore'
     */
    @Test
    public void createdBeforeTest() {
        // TODO: test createdBefore
    }

    /**
     * Test the property 'createdAfter'
     */
    @Test
    public void createdAfterTest() {
        // TODO: test createdAfter
    }

    /**
     * Test the property 'startsAfter'
     */
    @Test
    public void startsAfterTest() {
        // TODO: test startsAfter
    }

    /**
     * Test the property 'startsBefore'
     */
    @Test
    public void startsBeforeTest() {
        // TODO: test startsBefore
    }

    /**
     * Test the property 'valid'
     */
    @Test
    public void validTest() {
        // TODO: test valid
    }

    /**
     * Test the property 'usable'
     */
    @Test
    public void usableTest() {
        // TODO: test usable
    }

    /**
     * Test the property 'redeemed'
     */
    @Test
    public void redeemedTest() {
        // TODO: test redeemed
    }

    /**
     * Test the property 'recipientIntegrationId'
     */
    @Test
    public void recipientIntegrationIdTest() {
        // TODO: test recipientIntegrationId
    }

    /**
     * Test the property 'exactMatch'
     */
    @Test
    public void exactMatchTest() {
        // TODO: test exactMatch
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'batchId'
     */
    @Test
    public void batchIdTest() {
        // TODO: test batchId
    }

    /**
     * Test the property 'referralId'
     */
    @Test
    public void referralIdTest() {
        // TODO: test referralId
    }

    /**
     * Test the property 'expiresAfter'
     */
    @Test
    public void expiresAfterTest() {
        // TODO: test expiresAfter
    }

    /**
     * Test the property 'expiresBefore'
     */
    @Test
    public void expiresBeforeTest() {
        // TODO: test expiresBefore
    }

}
